on:
  push:
  pull_request:
name: Build C++
jobs:
  testpython:
    name: Build C++
    runs-on: ubuntu-latest
    container: ghcr.io/deepmodeling/deepmd-kit-test-cc:latest
    strategy:  
      matrix:
        include:
        - variant: cpu
        - variant: cuda
        - variant: clang
    steps:
    - name: work around permission issue
      run: git config --global --add safe.directory /__w/deepmd-kit/deepmd-kit
    - uses: actions/checkout@master
      with:
        submodules: true
    - run: apt-get update && apt-get install -y python3-pip python3-venv
      if: matrix.variant == 'cpu'
    - run: apt-get update && apt-get install -y nvidia-cuda-toolkit
      if: matrix.variant == 'cuda'
    - run: apt-get update && apt-get install -y clang
      if: matrix.variant == 'clang'  
    - run: source/install/build_cc.sh
      env:
        DP_VARIANT: ${{ matrix.variant }}
        DOWNLOAD_TENSORFLOW: "FALSE"
      if: matrix.variant != 'clang'
    - run: source/install/build_cc.sh
      env:
        DP_VARIANT: cpu
        DOWNLOAD_TENSORFLOW: "FALSE"
        CC: clang
        CXX: clang++
      if: matrix.variant == 'clang'
    # test lammps
    - run: source/install/build_lammps.sh
      if: matrix.variant == 'cpu'
    - run: python -m pip install -e .[cpu,test]
      env:
        SETUPTOOLS_ENABLE_FEATURES: "legacy-editable"
        DP_BUILD_TESTING: 1
      if: matrix.variant == 'cpu'
    - run: pytest --cov=deepmd source/lmp/tests
      env:
        LAMMPS_PLUGIN_PATH: ${{ github.workspace }}/dp/lib/deepmd_lmp
        LD_LIBRARY_PATH: ${{ github.workspace }}/dp/lib
      if: matrix.variant == 'cpu'
    - run: source/install/codecov.sh
      if: matrix.variant == 'cpu'
