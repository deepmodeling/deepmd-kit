on:
  # manually trigger
  workflow_dispatch:
  pull_request:
    types:
      - "labeled"
      # to let the PR pass the test
      - "opened"
      - "reopened"
      - "synchronize"
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true
name: Test CUDA
jobs:
  test_cuda:
    name: Test Python and C++ on CUDA
    runs-on: nvidia
    # https://github.com/deepmodeling/deepmd-kit/pull/2884#issuecomment-1744216845
    container:
      image: ubuntu:24.04
      options: --gpus all
    if: github.repository_owner == 'deepmodeling' && (github.event_name == 'pull_request' && github.event.label && github.event.label.name == 'Test CUDA' || github.event_name == 'workflow_dispatch' || github.event_name == 'merge_group')
    steps:
    - name: Make sudo and git work
      run: apt-get update && apt-get install -y sudo git
    - uses: actions/checkout@v4
    - uses: mamba-org/setup-micromamba@v1
      with:
        micromamba-version: '1.5.8-0'
        environment-file: source/install/cuda_env.yml
    - run: |
        export TENSORFLOW_ROOT=$(python -c 'import importlib,pathlib;print(pathlib.Path(importlib.util.find_spec("tensorflow").origin).parent)')
        export PYTORCH_ROOT=$(python -c 'import importlib,pathlib;print(pathlib.Path(importlib.util.find_spec("torch").origin).parent)')
        uv pip install --system -v -e .[gpu,test,lmp]
      env:
        DP_VARIANT: cuda
        DP_ENABLE_NATIVE_OPTIMIZATION: 1
        DP_ENABLE_PYTORCH: 1
      shell: micromamba-shell {0}
    - run: dp --version
    - run: python -m pytest source/tests --durations=0
      shell: micromamba-shell {0}
      env:
        NUM_WORKERS: 0
    - run: |
        export CMAKE_PREFIX_PATH=$(python -c 'import importlib,pathlib;print(pathlib.Path(importlib.util.find_spec("torch").origin).parent)')
        source/install/test_cc_local.sh
      shell: micromamba-shell {0}
      env:
        OMP_NUM_THREADS: 1
        TF_INTRA_OP_PARALLELISM_THREADS: 1
        TF_INTER_OP_PARALLELISM_THREADS: 1
        LMP_CXX11_ABI_0: 1
        CMAKE_GENERATOR: Ninja
        DP_VARIANT: cuda
        DP_USE_MPICH2: 1
    - run: |
        export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/dp_test/lib:$GITHUB_WORKSPACE/libtorch/lib:$CUDA_PATH/lib64:$LD_LIBRARY_PATH
        export PATH=$GITHUB_WORKSPACE/dp_test/bin:$PATH
        python -m pytest -s source/lmp/tests || (cat log.lammps && exit 1)
        python -m pytest source/ipi/tests
      shell: micromamba-shell {0}
      env:
        OMP_NUM_THREADS: 1
        TF_INTRA_OP_PARALLELISM_THREADS: 1
        TF_INTER_OP_PARALLELISM_THREADS: 1
        LAMMPS_PLUGIN_PATH: ${{ github.workspace }}/dp_test/lib/deepmd_lmp
        CUDA_VISIBLE_DEVICES: 0
  pass:
    name: Pass testing on CUDA
    needs: [test_cuda]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
        allowed-skips: test_cuda
