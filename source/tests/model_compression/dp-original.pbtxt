node {
  name: "t_box"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "t_coord"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "t_type"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "t_natoms"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "t_mesh"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "model_attr/tmap"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "O H"
      }
    }
  }
}
node {
  name: "model_attr/model_type"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ener"
      }
    }
  }
}
node {
  name: "model_attr/model_version"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1.0"
      }
    }
  }
}
node {
  name: "descrpt_attr/rcut"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 6.0
      }
    }
  }
}
node {
  name: "descrpt_attr/ntypes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "descrpt_attr/t_avg"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 552
          }
        }
        tensor_content: "\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351hb\\\233\312\251?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\267\236\003&\247\250?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "descrpt_attr/t_avg/read"
  op: "Identity"
  input: "descrpt_attr/t_avg"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@descrpt_attr/t_avg"
      }
    }
  }
}
node {
  name: "descrpt_attr/t_std"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 552
          }
        }
        tensor_content: "\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\377Q|\005x\350\301?g\024\347#S\372\265?g\024\347#S\372\265?g\024\347#S\372\265?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?\026\317~\310\253\272\277?\362s_\230\022\247\263?\362s_\230\022\247\263?\362s_\230\022\247\263?"
      }
    }
  }
}
node {
  name: "descrpt_attr/t_std/read"
  op: "Identity"
  input: "descrpt_attr/t_std"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@descrpt_attr/t_std"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_2"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_2/stack"
  input: "strided_slice_2/stack_1"
  input: "strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "strided_slice_2"
  input: "mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_2/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Pack"
  input: "Reshape_2/shape/0"
  input: "mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "t_coord"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "t_box"
  input: "Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_3"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_3/stack"
  input: "strided_slice_3/stack_1"
  input: "strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Reshape_4/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_4/shape"
  op: "Pack"
  input: "Reshape_4/shape/0"
  input: "strided_slice_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_4"
  op: "Reshape"
  input: "t_type"
  input: "Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ProdEnvMatA"
  op: "ProdEnvMatA"
  input: "Reshape_2"
  input: "Reshape_4"
  input: "t_natoms"
  input: "Reshape_3"
  input: "t_mesh"
  input: "descrpt_attr/t_avg/read"
  input: "descrpt_attr/t_std/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "rcut_a"
    value {
      f: -1.0
    }
  }
  attr {
    key: "rcut_r"
    value {
      f: 6.0
    }
  }
  attr {
    key: "rcut_r_smth"
    value {
      f: 0.5
    }
  }
  attr {
    key: "sel_a"
    value {
      list {
        i: 46
        i: 92
      }
    }
  }
  attr {
    key: "sel_r"
    value {
      list {
        i: 0
        i: 0
      }
    }
  }
}
node {
  name: "Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377(\002\000\000"
      }
    }
  }
}
node {
  name: "Reshape_5"
  op: "Reshape"
  input: "ProdEnvMatA"
  input: "Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "o_rmat"
  op: "Identity"
  input: "Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "o_rmat_deriv"
  op: "Identity"
  input: "ProdEnvMatA:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "o_rij"
  op: "Identity"
  input: "ProdEnvMatA:2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "o_nlist"
  op: "Identity"
  input: "ProdEnvMatA:3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_4"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_4/stack"
  input: "strided_slice_4/stack_1"
  input: "strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 552
      }
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "mul_2/x"
  input: "strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_6/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_6/shape"
  op: "Pack"
  input: "Reshape_6/shape/0"
  input: "mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_6"
  op: "Reshape"
  input: "o_rmat"
  input: "Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_5"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_5/stack"
  input: "strided_slice_5/stack_1"
  input: "strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 552
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "strided_slice_5"
  input: "mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Slice/size/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Slice/size"
  op: "Pack"
  input: "Slice/size/0"
  input: "mul_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Reshape_6"
  input: "Slice/begin"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Reshape_7/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377(\002\000\000"
      }
    }
  }
}
node {
  name: "Reshape_7"
  op: "Reshape"
  input: "Slice"
  input: "Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\270\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Slice"
  op: "Slice"
  input: "Reshape_7"
  input: "filter_type_0/Slice/begin"
  input: "filter_type_0/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape"
  op: "Reshape"
  input: "filter_type_0/Slice"
  input: "filter_type_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/Slice_1/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Slice_1"
  op: "Slice"
  input: "filter_type_0/Reshape"
  input: "filter_type_0/Slice_1/begin"
  input: "filter_type_0/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_1"
  op: "Reshape"
  input: "filter_type_0/Slice_1"
  input: "filter_type_0/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/matrix_1_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\302@\224\271\267\324\320?\304]\030b\270G\312?\010\335(\305\024[\367\277w\n\310\024<\243\313\277"
      }
    }
  }
}
node {
  name: "filter_type_0/matrix_1_0/read"
  op: "Identity"
  input: "filter_type_0/matrix_1_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/matrix_1_0"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_1_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\345\227\272\356\376+\257\277\265\225f\'\230\n\342\277\254b?\301\236Z\347\277\257\247\007Z\373M\303\277"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_1_0/read"
  op: "Identity"
  input: "filter_type_0/bias_1_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/bias_1_0"
      }
    }
  }
}
node {
  name: "filter_type_0/MatMul"
  op: "MatMul"
  input: "filter_type_0/Reshape_1"
  input: "filter_type_0/matrix_1_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_0/add"
  op: "AddV2"
  input: "filter_type_0/MatMul"
  input: "filter_type_0/bias_1_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Tanh"
  op: "Tanh"
  input: "filter_type_0/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_2"
  op: "Reshape"
  input: "filter_type_0/Tanh"
  input: "filter_type_0/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/matrix_2_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\367\365:\301K\371\224\277\020\217\346[\032\177\350?\016R\316\032\332\005\332?\241\241\273\016\340\021\336\277\231\312\340.\3744\333?\307\323j\255\202\372\335?F\352\222\342\244\252\266?eYw \374\003\320\277\245\304\374,\273\r\353?}\355\366\262\304\\\332\277!c\235\273Q\204\303\277dTc\016\217\320\275\277\275Uq\313{9\006@\266c\315\014\315/\321?@\'U;\303\234\275?%c\340\350*\350\323\277t\365\350\366q\247\221\277\246\0277\274\025\240\344?/\242\037\226\363E\326\277\364>\375\263O\263\355?O\362\322\214B4\363?\255\013\300\351\034\353\234?(\362\r\263(I\351?@PSR\004\342\321\277<\003\215t\3500\244\277[\r~\036]H\352\277\032Vk(\374Z\345\277\317\013Jg\260\346\325\277\\\266\327\352\200\236\366?\nx\020\202\304G\347\277\033_\355im_\301\277Z\206\353%v\206\323\277"
      }
    }
  }
}
node {
  name: "filter_type_0/matrix_2_0/read"
  op: "Identity"
  input: "filter_type_0/matrix_2_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/matrix_2_0"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_2_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\037\300|\007\034\022\317\277\021\276\276\177\246\336\222\277\377\315f\220\210<\340\277\334\342\333\313-\261\324\277\262Y\317\363\225 \325\277[\336\375{\n\004\301\277\231zq\245t\021\326?\001N2\267\227\334\364\277"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_2_0/read"
  op: "Identity"
  input: "filter_type_0/bias_2_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/bias_2_0"
      }
    }
  }
}
node {
  name: "filter_type_0/MatMul_1"
  op: "MatMul"
  input: "filter_type_0/Reshape_2"
  input: "filter_type_0/matrix_2_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_0/add_1"
  op: "AddV2"
  input: "filter_type_0/MatMul_1"
  input: "filter_type_0/bias_2_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Tanh_1"
  op: "Tanh"
  input: "filter_type_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\010\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_3"
  op: "Reshape"
  input: "filter_type_0/Tanh_1"
  input: "filter_type_0/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "filter_type_0/concat"
  op: "ConcatV2"
  input: "filter_type_0/Reshape_2"
  input: "filter_type_0/Reshape_2"
  input: "filter_type_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/add_2"
  op: "AddV2"
  input: "filter_type_0/concat"
  input: "filter_type_0/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/matrix_3_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\265\036\233\037\237N\007@d!\365\3121\302\242?\371\354\005M\304\317\324?\323D\357\203L\343\313\277\210\246\264m\262;\236?\211\372=\375\200l\312?\030\236I\034Z\207\273\277o\234a.\217\361\333?YA\226AM\315\361?r\2341/\322\352\337?\347\036\256X\312:r\277<\301\t\367\332\323\343\277*\341|\232\226\303\377?\312\320\306A\222=\330?\214<\300\307\273\032\302\277f\376\024*\372\231\327?/\202\370\353\374,\366?o\224\321\375\0367\325\277\302l\257\"\221i\320\277\200\232%G*n\341?\342\233s\255\223\345\350?\360C\371\254h\022\325\277\036\347g~\204\023\220\277\321\307\227+<\347\334\277\230(\006\001\020Y\372?\317^\351#\353\035\266?;\332\336\'\312\005\344\277=\355\312\3249\223\355\277gL\314\030\263\363\376?\344tg\370%\024\340\2778|\371\003\035L\331\277P\237\030y\014\233\321\277\260\013[\375\272\254\340?\\\033\020ENQ\360\277oIxudA\325\277\204O\017g\020N\320?\321g\376\377\r\337\352?\006S[r\217\351\326\277\362\215\243_\256\220\314\277\0260\356\365\347\013\352\2775zf\276\213\274\374?qP=uw\323\341?\226\230}+\004\267\354\277\251\203\245g\263/\331\277$\365\020\254\000;\366?\234\377hG\262G\345\277:Iw\312\354\361\350\277]z\204n8J\333\277\305=l\301\335b\303?\230?\250I\220l\351\277mGN\360\262O\332\277t\032l\270\302\036\301?\215\350\320Z-q\361?\214\037\375\242\225\374\342\277\371\242Q\337\347\232\322\277H\313H\333\346\303\361\277\027\310V[xW\000@,\003~:S\372\332\2770B,\337\303\206\355\277\220~\002a\230\223\306?yj\360\3349&\365?NX\230\3260\337\350\277\375z\301\373u\"\300\277.\236~\210\263\201\342\277O\371G\014\364`\243?\304\2261u\351\r\317?\274\037\207*\214 \317?<u\245F\335o\254?)\250\377iF\024\316\277[\316\336t\303\030\347?\211\213\224\364\025\336\253\277f{\223d5\264\341?\3021,\223\2729\360?\022c\300\346\344\r\333?\033B\337\016\370n\306?\327z\353(\350\007\275?\311\002\324\002\252$\350?gkd\256E+\306\277\"`\245\371\333\215\271\277\342\224Uoi\370\343?\271\321\372\327Zg\013@i\022\352\236\371\265\351\277\207\304\371+\203\376\321\277\'59\335I\'\324?\025\240\353\310{\366\327?\350\267\2201\247\252\243?\263\322\362\177U\023\246?\272\374\334\316\346s\242?\354\206p\377\375\255\375?\177\303/?\304@\240?K\331\017\313.\203\352\277\204\033\021\274\231\201\345\277\366\221\264\021\266>\002@\331\025}\316\0346\335\277\030\312\004\003\177c\273\277\237\263\034\r\201\376\262\2776\256\211\336\256c\236?\336\016\004i\025\026\344\277\010\')(\366 \340\277s\331\346k\032\216\257?\345\247\221\274\200b\370?\234WJ\343\360\026\361\277\327\302\027\255\350\252\242\277\370t\'L\215\025\023\300\263\250x\355P\"\374?\262\235\214.\234\022\321?\022\202\361\234n?\320\277\214{\336\227\343\035\346\277R\330\230\274P\311\347?\377o &q\007\322?_\"\020\226U\026\312?8A\030\034\237\336\016\300P\274jR\341O\331?\252\335\237{\265\223\347\277\273`\'z\262\335\331\277:\244\243\300l\243C?=:\325\353\256g\336?\375k\214\017\312h\337\2778\214\364pL\236\245\277\216\350\006#R\020\331\277`\177\013\350\343I\000@?(|\263z\375\354\277\342N\304\216\344\021\344\277\020z\303Df\230\260\277\300\251J\352%\336\364?\254-K\326\316G\353\277\335\024&i\356\255\220?\236m\022\006\350S\266?"
      }
    }
  }
}
node {
  name: "filter_type_0/matrix_3_0/read"
  op: "Identity"
  input: "filter_type_0/matrix_3_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/matrix_3_0"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_3_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\177Y\204T\374\277\302\277\002\220B\310\327\030\335?\276\276\301\217\244Z\350\277\217\324H#\022\024\343\277\3328\213\'z#\367?ImdK\304%\210?\005\203QFE\244\334?K<\353$\374V\370\277\321\007v,\271\340\362\277\321\013,\000\362\352\325\277\256]\240q\262\001\352?\324\274J\211\201\270\350\277\357lC\215\273p\360\277M\001\221>\333\355\002@\246,bP\337\243\361?\327\335\"yf\303\331\277"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_3_0/read"
  op: "Identity"
  input: "filter_type_0/bias_3_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/bias_3_0"
      }
    }
  }
}
node {
  name: "filter_type_0/MatMul_2"
  op: "MatMul"
  input: "filter_type_0/add_2"
  input: "filter_type_0/matrix_3_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_0/add_3"
  op: "AddV2"
  input: "filter_type_0/MatMul_2"
  input: "filter_type_0/bias_3_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Tanh_2"
  op: "Tanh"
  input: "filter_type_0/add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\020\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_4"
  op: "Reshape"
  input: "filter_type_0/Tanh_2"
  input: "filter_type_0/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "filter_type_0/concat_1"
  op: "ConcatV2"
  input: "filter_type_0/add_2"
  input: "filter_type_0/add_2"
  input: "filter_type_0/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/add_4"
  op: "AddV2"
  input: "filter_type_0/concat_1"
  input: "filter_type_0/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377.\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_5"
  op: "Reshape"
  input: "filter_type_0/add_4"
  input: "filter_type_0/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/Reshape_6/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377.\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_6"
  op: "Reshape"
  input: "filter_type_0/Slice"
  input: "filter_type_0/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/MatMul_3"
  op: "BatchMatMulV2"
  input: "filter_type_0/Reshape_6"
  input: "filter_type_0/Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_0/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\270\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Slice_2/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377p\001\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Slice_2"
  op: "Slice"
  input: "Reshape_7"
  input: "filter_type_0/Slice_2/begin"
  input: "filter_type_0/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_7/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_7"
  op: "Reshape"
  input: "filter_type_0/Slice_2"
  input: "filter_type_0/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/Slice_3/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Slice_3/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Slice_3"
  op: "Slice"
  input: "filter_type_0/Reshape_7"
  input: "filter_type_0/Slice_3/begin"
  input: "filter_type_0/Slice_3/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_8/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_8"
  op: "Reshape"
  input: "filter_type_0/Slice_3"
  input: "filter_type_0/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/matrix_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "S\376]\265O\204\301?C&\243k\213\206\313\2775P|\014\266\001z?\272\r\211j\325\216\276\277"
      }
    }
  }
}
node {
  name: "filter_type_0/matrix_1_1/read"
  op: "Identity"
  input: "filter_type_0/matrix_1_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/matrix_1_1"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\037\2154\r\010\374\346\277\020:\317]2B\323?$1\223-\322A\361\277i\340\216\351\223g\336?"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_1_1/read"
  op: "Identity"
  input: "filter_type_0/bias_1_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/bias_1_1"
      }
    }
  }
}
node {
  name: "filter_type_0/MatMul_4"
  op: "MatMul"
  input: "filter_type_0/Reshape_8"
  input: "filter_type_0/matrix_1_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_0/add_5"
  op: "AddV2"
  input: "filter_type_0/MatMul_4"
  input: "filter_type_0/bias_1_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Tanh_3"
  op: "Tanh"
  input: "filter_type_0/add_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_9/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_9"
  op: "Reshape"
  input: "filter_type_0/Tanh_3"
  input: "filter_type_0/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/matrix_2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        tensor_content: "Y\023c\205\"!\322?=\303\016\205|\315\301\277\375\244p\337!\264\254\277!\255\265\200\027\262\241\277\3417k\247x$\000@\340m\354\335\310(\321?IMC\373\031\201\315?\225a\211\354U\031\345\277\350\301d\266\264\354\322?_\367\343\227A\321\240?\353|(\357l\265\264\277\332h!an\223\350\277\014\236\2524\032\251\324\277_\317\377\351\322\374\327?\313NG\351e\316\321?A\372\270\324\314\216\300\277r\364>\026\323\201\306\277R\024\026.\240h\343?#?\243 \221\256\317\277T\240\017\233\032O\301?\207\022\314G\242\024\365?\224\371L\376\253\366\304?.^v4z9\315?0\321=\237\207C\326\277\371\031y\2665\236\323\277\275\305\254|M\211\260?\246\266\306\256~\375\305\277g`#9\223v\345\277\000\374u\002ae\364\277\216\262A\323\332X\336\277\177x\313\235\252\031\326\277\334G\366E\257\343\207?"
      }
    }
  }
}
node {
  name: "filter_type_0/matrix_2_1/read"
  op: "Identity"
  input: "filter_type_0/matrix_2_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/matrix_2_1"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\213\247J~\036|\263?\344$\260=T\215\315\277\274\007dV\014\326\350\277\2708\n]\337m\314\277&\317\004\251\023\364\326?\3326\277\370\325\360\324\277R\376&\025Q\327\306?ZV\254\356gp\367\277"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_2_1/read"
  op: "Identity"
  input: "filter_type_0/bias_2_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/bias_2_1"
      }
    }
  }
}
node {
  name: "filter_type_0/MatMul_5"
  op: "MatMul"
  input: "filter_type_0/Reshape_9"
  input: "filter_type_0/matrix_2_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_0/add_6"
  op: "AddV2"
  input: "filter_type_0/MatMul_5"
  input: "filter_type_0/bias_2_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Tanh_4"
  op: "Tanh"
  input: "filter_type_0/add_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_10/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\010\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_10"
  op: "Reshape"
  input: "filter_type_0/Tanh_4"
  input: "filter_type_0/Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "filter_type_0/concat_2"
  op: "ConcatV2"
  input: "filter_type_0/Reshape_9"
  input: "filter_type_0/Reshape_9"
  input: "filter_type_0/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/add_7"
  op: "AddV2"
  input: "filter_type_0/concat_2"
  input: "filter_type_0/Reshape_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/matrix_3_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\275\237n\243o\203\315?\265%\0242\307\346\344?\210\375\277\024\356\277\266\277\231\314Qe\274L\273\277m\267\3041\340^\335?q\205@ \324\200\337?\006\272\225+\203?\273?\374\214\273\304\246K\314\277\302\002gpD\336\323?;p\255%\363/\311?\331T\227\271.\177\311?\201k\305\252}\277\327\277\362\205PX\372?\315?>M\266\223\266\216\340\277\030\346\003\220m\025\265?W\215\343\343\022\022\253\277\213\000\344\264\244\247\316\277\2530g\304\\\344\320?\r\220/^L)\207\277\331\351\232B\030\240\321?\210L\313\3522\342\326?k\'\307\023\366\274\216\277\244\320\031D\231\344\300?\005Z\301\036\251\357\302\277\361S\243\374\342{\235?2\302\274MID\253\2778h\265\304\274t\272?\274\\D\034#\237\333\277>\'q\356\256E\337\2770s\200\207s\033\343?\320R\374Tp\"\255?u\322\240:\213\033\256\277Ja\243\206B=\234\277S\342\364\220J\216\325\277^AS<\206\\\253?\275\375\232\036r\240\256\277~(\304\214\"\363\340?\225\024\316\371\027,\276?/\223T\357|\366\273?\305:\255\306\333<\312\277\031\266\261\351\212w\262\277\230l\377\000$\\\324?\252\322\'\024@u\302\277\364S\377X\275\271r\277Q\266\231\220L\305\240\277\\\0031qd3u\277\336\333K\362!}\244\277\324\000W\222\023\351\203?\353\032\211\023M\370\352\277L\276\212g\353s\340?\313\245\255AkS\341\277\035\267\004px\237\310?rRR\272\364\234\350?o\230\307v\254>\314\277\221l\344\210\027\207\351\277\210\016\346(k\r\300\277\037j >\350\024\343\277\267\210Rb\307\236\347\277N\301\256\3265\236\336\277\013ZT\235\372\331\342?\254}B\241\235\023\262\277/\023\211\315\372\r\373\277\270\316\303\221\272\300\340\277\376`3\264\275P\321?p\236\201;\213a\205\277#\325\220\245\376p\362?\261\033(\326\330\335\250\277\366\304\032\275\203\225\301?\350\006\323\366^6\322?\250\372\"9\237\020\362?[\354\254\374\021\030\250\277]\203\211\317\367E\273?\341\274\\\346\337\313\220?\205\325\347&\347\201\277?\217u\030\207(\375\337?\333t_\262k\216\231\277\212Y{[\027\037\276\277[\266\315|d\r\362\277\271Oa\002!\264\303?T\341\035\nb\310\240\277\301\353\246}\223\236\303?\263\357\244\024\257\300\275\277=\033\304\342Q+\264\277Z\367)\375H\355\266?b\326\0047\0248\222\277F\367\211H\246&\325?u={\246\277\002\312?\030\361w2\222M\207\277\337\3701\222\223\'\342?$(b\214j\357\323?\302Z\315\263TRw?\214O\224\255[\200\314\277\205sO>\000\036\332\277>&\300Z\304\354\354?\242\240-+xP\300?*/\266\256EB\301\277\021\25465\200\005\252?\315\320\357\234i\354\332?\216\225\261U5\236\343?\\D\027\tp\000\323\277\263\300\340_\263\316\303?[\t1\315\027g\324?\264b\272v\303\365\322?FX^\226\316u\252?\022\360v2\342\257\320?\306~\004s8\332\270?%\035\016\371>G\333?\233\260`,\031\364\321\277g\221HGAC\324\277\377x\330G\347\276\342?\357\n\303\017\361:\340?\3239\035\027\275H\246?\321\243\272\245Q\345\226?`ys\\\363Q\322\277\356\224;\225\037o\302\277-\306\241\212\032\330\321\277\003W&r\277D\300?\2334Z@\323\371\323\277V\360/C^\317\267\277oG#\032\010\027\313\277\257\243\271\177mF\271?\037i\365\030`\343\320\277\373\325\250i\310\372\254?S\r\"\350\240\227\260?0!?\301\216\3777?)\367\374\214\272^\341?Lj\341\322\022\003\270?\n}N_\212\332\315?"
      }
    }
  }
}
node {
  name: "filter_type_0/matrix_3_1/read"
  op: "Identity"
  input: "filter_type_0/matrix_3_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/matrix_3_1"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_3_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
        tensor_content: "[\373aF\354\202\274?\206em\300\250`\302\277s:T\031\323\236\357\277\230\035\276\323\021\314\321\277@5\013S?\273\367?\021=\3662\213\350\335\277\223\337\311a(\276\312?A~\254\245\267\014\372\277]\272\036i=6\342?5\255\302\210fZ\342\277\270\242\235-JT\262?\323\351\221\324a\247\360\277p\322\352\350\021\266\266?\2274\316\203\370M\367?\364,\316\364\350X\340?v\370\305\327\017\242\334\277"
      }
    }
  }
}
node {
  name: "filter_type_0/bias_3_1/read"
  op: "Identity"
  input: "filter_type_0/bias_3_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_0/bias_3_1"
      }
    }
  }
}
node {
  name: "filter_type_0/MatMul_6"
  op: "MatMul"
  input: "filter_type_0/add_7"
  input: "filter_type_0/matrix_3_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_0/add_8"
  op: "AddV2"
  input: "filter_type_0/MatMul_6"
  input: "filter_type_0/bias_3_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Tanh_5"
  op: "Tanh"
  input: "filter_type_0/add_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_11/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\020\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_11"
  op: "Reshape"
  input: "filter_type_0/Tanh_5"
  input: "filter_type_0/Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "filter_type_0/concat_3"
  op: "ConcatV2"
  input: "filter_type_0/add_7"
  input: "filter_type_0/add_7"
  input: "filter_type_0/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/add_9"
  op: "AddV2"
  input: "filter_type_0/concat_3"
  input: "filter_type_0/Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Reshape_12/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\\\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_12"
  op: "Reshape"
  input: "filter_type_0/add_9"
  input: "filter_type_0/Reshape_12/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/Reshape_13/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\\\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_13"
  op: "Reshape"
  input: "filter_type_0/Slice_2"
  input: "filter_type_0/Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_0/MatMul_7"
  op: "BatchMatMulV2"
  input: "filter_type_0/Reshape_13"
  input: "filter_type_0/Reshape_12"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_0/add_10"
  op: "AddV2"
  input: "filter_type_0/MatMul_3"
  input: "filter_type_0/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.007246376811594203
      }
    }
  }
}
node {
  name: "filter_type_0/mul"
  op: "Mul"
  input: "filter_type_0/add_10"
  input: "filter_type_0/mul/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/Slice_4/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Slice_4/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377\020\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Slice_4"
  op: "Slice"
  input: "filter_type_0/mul"
  input: "filter_type_0/Slice_4/begin"
  input: "filter_type_0/Slice_4/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_0/MatMul_8"
  op: "BatchMatMulV2"
  input: "filter_type_0/mul"
  input: "filter_type_0/Slice_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_0/Reshape_14/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\001\000\000"
      }
    }
  }
}
node {
  name: "filter_type_0/Reshape_14"
  op: "Reshape"
  input: "filter_type_0/MatMul_8"
  input: "filter_type_0/Reshape_14/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_6"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice_6/stack"
  input: "strided_slice_6/stack_1"
  input: "strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_7"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_7/stack"
  input: "strided_slice_7/stack_1"
  input: "strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "strided_slice_7"
  input: "mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_8/shape"
  op: "Pack"
  input: "strided_slice_6"
  input: "mul_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_8"
  op: "Reshape"
  input: "filter_type_0/Reshape_14"
  input: "Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_10/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_10"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_10/stack"
  input: "strided_slice_10/stack_1"
  input: "strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "add/x"
  input: "strided_slice_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mul_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 552
      }
    }
  }
}
node {
  name: "mul_7"
  op: "Mul"
  input: "add"
  input: "mul_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_11/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_11"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_11/stack"
  input: "strided_slice_11/stack_1"
  input: "strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 552
      }
    }
  }
}
node {
  name: "mul_8"
  op: "Mul"
  input: "strided_slice_11"
  input: "mul_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice_1/begin/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Slice_1/begin"
  op: "Pack"
  input: "Slice_1/begin/0"
  input: "mul_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_1/size/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Slice_1/size"
  op: "Pack"
  input: "Slice_1/size/0"
  input: "mul_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_1"
  op: "Slice"
  input: "Reshape_6"
  input: "Slice_1/begin"
  input: "Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Reshape_10/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377(\002\000\000"
      }
    }
  }
}
node {
  name: "Reshape_10"
  op: "Reshape"
  input: "Slice_1"
  input: "Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\270\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Slice"
  op: "Slice"
  input: "Reshape_10"
  input: "filter_type_1/Slice/begin"
  input: "filter_type_1/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape"
  op: "Reshape"
  input: "filter_type_1/Slice"
  input: "filter_type_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/Slice_1/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Slice_1"
  op: "Slice"
  input: "filter_type_1/Reshape"
  input: "filter_type_1/Slice_1/begin"
  input: "filter_type_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_1"
  op: "Reshape"
  input: "filter_type_1/Slice_1"
  input: "filter_type_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/matrix_1_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\311p\025\204g\254\274?W_J\020g\022\335\277|(k\004\372}\237?\211\250&\371\201e\271\277"
      }
    }
  }
}
node {
  name: "filter_type_1/matrix_1_0/read"
  op: "Identity"
  input: "filter_type_1/matrix_1_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/matrix_1_0"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_1_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "gU\\\375}H\336\277\333\227\274M)3\322\277^\036\355/nO\337\277WS\334\241&n\330?"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_1_0/read"
  op: "Identity"
  input: "filter_type_1/bias_1_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/bias_1_0"
      }
    }
  }
}
node {
  name: "filter_type_1/MatMul"
  op: "MatMul"
  input: "filter_type_1/Reshape_1"
  input: "filter_type_1/matrix_1_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_1/add"
  op: "AddV2"
  input: "filter_type_1/MatMul"
  input: "filter_type_1/bias_1_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Tanh"
  op: "Tanh"
  input: "filter_type_1/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_2"
  op: "Reshape"
  input: "filter_type_1/Tanh"
  input: "filter_type_1/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/matrix_2_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\035e&\026.\016\326?\034 o\212\277s\336\277~\335\302\242\316\355\327\277]\363\234\275\327\304\325\277\013\024\2165\010-\357?%1\207\367\3202\340\277Wv*3\240@\321?R\304\273}\356\006\345\2772kOW\030\327\320?\353\001\237\005S)\324\277\311/d\315\266\002\276\277Q\245@\005L\325\323\277\352\033\367nD\021\313?\020(\377H\330\220\344?\353L\306\"vn\317?E\344\233\221LP\323\277c_joV\344\320\277\260\260\204\262\317\234\333?\321G}R\267B\266?e\316x\250\334\254\301??\243\307W\000\024\340?\371mURW\351\321?|\223L\253u\031\276?S\370h\351\212Q\336\277i\266\360\023\307\232\330\277Sd\3723\334k\330?\345\342\302!\310\035\302?)D\336<\354:\326\277>\226\342\220>$\347\277\201tU\266 \006\314?\265\263\216\340\226\232\331\277\347\363[\033/\373c?"
      }
    }
  }
}
node {
  name: "filter_type_1/matrix_2_0/read"
  op: "Identity"
  input: "filter_type_1/matrix_2_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/matrix_2_0"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_2_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\326\306\222\000\3075\257?\0015H\331\001%\323?\2244\0040\316\032\352\277\305\331\223\034\360\340\304\277\322\205\331\201\264\241\364?\225\377^\357?e\242?n,PT\226y\320?\237q\016\364S\345\366\277"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_2_0/read"
  op: "Identity"
  input: "filter_type_1/bias_2_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/bias_2_0"
      }
    }
  }
}
node {
  name: "filter_type_1/MatMul_1"
  op: "MatMul"
  input: "filter_type_1/Reshape_2"
  input: "filter_type_1/matrix_2_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_1/add_1"
  op: "AddV2"
  input: "filter_type_1/MatMul_1"
  input: "filter_type_1/bias_2_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Tanh_1"
  op: "Tanh"
  input: "filter_type_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\010\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_3"
  op: "Reshape"
  input: "filter_type_1/Tanh_1"
  input: "filter_type_1/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "filter_type_1/concat"
  op: "ConcatV2"
  input: "filter_type_1/Reshape_2"
  input: "filter_type_1/Reshape_2"
  input: "filter_type_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/add_2"
  op: "AddV2"
  input: "filter_type_1/concat"
  input: "filter_type_1/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/matrix_3_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\023t\013\352mq\324?(\341t\022\303?\335\277C\n\300\021\306\302\334\277\225m\302\201\317x\323?\3263O\327\207\320\000@6\264\332\007\020w\322\277\270\303\235\363@\221\304?\371l^\000uo\346\277\363\030\323`\365\331\327?\250CT\020\032\217\332\277\024f\036\305,\333\327\277\335x\305#\206\001\325\277\206\016a\261Da\244?=Ew\211\2423\257\277Kf.M\312\201\231?\234\351f\223F\353\324\2776\361>\216n7\312\277\305\000\342C\331r\331?\362\345\321\256\217\312\304\277S\006\007\002\370\320\325?`h\357t\006 \332\277\347E3\314\ns\312?\262\355\336\"}d\265?\371o\335\3627u\271?\375\264\235Y\362\250\255\277\371\031\300\340z\307\276\277\217\202\007t\230\241\254?/\370\263\235\233\210\327\277\330\212Ha\235T\317\277C\372g{I\354\252?\212\257\302\246\313\260\275?\225#\245\335A\301\275\277\352\337\243\346\244\320\224\277\372%\004\216\030\t\334\277\253\333w\310#\345\301\277bc\320\352=\233\332\277\037\264\364\t7\316\270?\234\240\303\014\247\253\300?\034T<x\224~\271?g\321\320?\031\302\343\277nJm\271L-\302\277MMZd[\305\274?\031s\'t\333\272\305\277\001\371B\367m5\203?\323\230/\276\361&\327\277+)\013\272\263\305\212?3\210MI\374\264=?VJR\345\376W\214\277\200\276\260R\312N\322\277\237\0071\031\341\343\342?|\264\235\374(\315\340?\234u\035\314-\315\364\277\313?\201\350\356v\016\300:k\377O=\005\302?{U\215\374\276\013\342\277\004\233\306]a\243\335?!\224\313OY\227\321\277\351\277!\353\224\002\304?\273\206}q\030\231\340?\256\200\263\017ev\277?\347\367\240\251\353\375\311?\036)GRt\325\327?\261R\020\227r\257\310\277\302\005\326\365q@\327?\206$\243\017\205\327l\277q]\205>\240\334\240?\025\227\206S\267\365\317\277\036m\273\300\302i\357?\013*\037\245\360\276\374?\203/\035\351F\327\324?H\005\274\333L\252\231\277\016\314\177\262j]\276\277#oOVs_\240?s\025\'\316ho\252\2775\033\271N\371\304\221\277Z\303\260\241\020\366\263\277\203\335\034\033\002\210\310\277\3533\275,\224\223\336\277\n\353d\252\306\220\305?\340?\022\321\216\314\260?\335\356\371\245\347&\315?\367YR*\326g\270\277)\261\027\212$\264\316\2776\355\221\243\311j\332?\246^\325\347\201?\306\277\245\002\255px\311\342?\024\300\346\203g\211\307?\260d\307\250\342\262\301?\002\242Z\204\254Q\335?\375\261\221\033\302\212\303?\213\261Oi\353\362\305\277&\341\341tr\300\270\277\346\027\241\023#P\300\277+5\020\226\356T\303?\363\360\240\363\252\276\321?Pke\370~)\317\277\346\305\r\t\237\260\303?\010D\365\362\022\332\326\277\017\3512\355H\026\320\277\377\237h\351\224M\265\277\035\320\334\203~\207\332?\245\275\327\230\177\276\314\277b\020\217\355\310\032\330?E\330\231\014\001\267\276\277\241\261}P\261n\305?\372]A\027\234\375\357\277\354\264i\260]\227\262\277\005\376\222\261\230\021\272\277\221\334w\261F\210\341\277\r\362G\222T%\330?N\023\001w0\332\343?-@\341\023\224\370\320\277Y(9`j\323\201\277\315w\336\375K\361\260?\225\025jwdG\273\277\013\310\\\354\206\354\347\277\366\233#\257b%\307\277\227YZr\032\262\214?&\335V\r\227+\270\277\014\375H\270:\357\332\277\317\2056<\317\213\215?\005g:5\205|\317\277[\230G\210\272\315\325?\310\353a\244\362\247\265?\244r\342\332c]\266\277j\212\325+\341\020\322?\255\365\344H\370W\261?\323\264}D\3515\321?"
      }
    }
  }
}
node {
  name: "filter_type_1/matrix_3_0/read"
  op: "Identity"
  input: "filter_type_1/matrix_3_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/matrix_3_0"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_3_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\034au\360\275\242\253?\224\336~\352\024\323\305?\222J\257[\226\353\351\277\214^\242\202\254\357\250\277\"\036,\340\243?\357?G|kb\332|\303\277\265\302\203\355\326\274\303?w\335\342\336}{\365\2774>~(\325\013\343?\203=%\304A\325\263\277N\037\227\212\270>\312?\345;\341\371)q\361\277\253\223\320\323~f\343?\345+m.\316\005\370?q\371p\231D\350\337?\360\353\016\030\347q\330\277"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_3_0/read"
  op: "Identity"
  input: "filter_type_1/bias_3_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/bias_3_0"
      }
    }
  }
}
node {
  name: "filter_type_1/MatMul_2"
  op: "MatMul"
  input: "filter_type_1/add_2"
  input: "filter_type_1/matrix_3_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_1/add_3"
  op: "AddV2"
  input: "filter_type_1/MatMul_2"
  input: "filter_type_1/bias_3_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Tanh_2"
  op: "Tanh"
  input: "filter_type_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\020\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_4"
  op: "Reshape"
  input: "filter_type_1/Tanh_2"
  input: "filter_type_1/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "filter_type_1/concat_1"
  op: "ConcatV2"
  input: "filter_type_1/add_2"
  input: "filter_type_1/add_2"
  input: "filter_type_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/add_4"
  op: "AddV2"
  input: "filter_type_1/concat_1"
  input: "filter_type_1/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377.\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_5"
  op: "Reshape"
  input: "filter_type_1/add_4"
  input: "filter_type_1/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/Reshape_6/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377.\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_6"
  op: "Reshape"
  input: "filter_type_1/Slice"
  input: "filter_type_1/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/MatMul_3"
  op: "BatchMatMulV2"
  input: "filter_type_1/Reshape_6"
  input: "filter_type_1/Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_1/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\270\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Slice_2/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377p\001\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Slice_2"
  op: "Slice"
  input: "Reshape_10"
  input: "filter_type_1/Slice_2/begin"
  input: "filter_type_1/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_7/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_7"
  op: "Reshape"
  input: "filter_type_1/Slice_2"
  input: "filter_type_1/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/Slice_3/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Slice_3/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Slice_3"
  op: "Slice"
  input: "filter_type_1/Reshape_7"
  input: "filter_type_1/Slice_3/begin"
  input: "filter_type_1/Slice_3/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_8/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_8"
  op: "Reshape"
  input: "filter_type_1/Slice_3"
  input: "filter_type_1/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/matrix_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\231\304d\325\374\007\315\277t\222\207\r\216\003\311\277 \201\223\223\332\256\004\300y\315\006\203\247u\244\277"
      }
    }
  }
}
node {
  name: "filter_type_1/matrix_1_1/read"
  op: "Identity"
  input: "filter_type_1/matrix_1_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/matrix_1_1"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_1_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\014$\245\304T-\351?/\024\365f%\177\265\277\301Z\325r\036B\360\277\013J\300\250\267\240\332\277"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_1_1/read"
  op: "Identity"
  input: "filter_type_1/bias_1_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/bias_1_1"
      }
    }
  }
}
node {
  name: "filter_type_1/MatMul_4"
  op: "MatMul"
  input: "filter_type_1/Reshape_8"
  input: "filter_type_1/matrix_1_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_1/add_5"
  op: "AddV2"
  input: "filter_type_1/MatMul_4"
  input: "filter_type_1/bias_1_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Tanh_3"
  op: "Tanh"
  input: "filter_type_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_9/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_9"
  op: "Reshape"
  input: "filter_type_1/Tanh_3"
  input: "filter_type_1/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/matrix_2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        tensor_content: "m0\227\361\327I\226?\225\337r\330\214\200\337?\317!\340_6f\213\277!Qq\022 \236\263\277\037Ax\"+\357\002@\256\r\207\361/\"\230\2771\375\207myC\311?\347I\2358ad\237?\037KSCy\221\321?\321\033P\334\251\330\355?g\242Nf\'\220\305?\222j2\311\234\177\330\277\316lI\365\206\337\351?\361at\241r\255\337?\373y2>\324X\306?\243T\362\0249\276\267\277C_\264\377]\323\311\277u\221|#\255\002\013@\030\016^UR\247\323\277cV@%\327N\303?\213\376&\376X%\333?\217\332V\342\332\326\276?\027l\026H\302\376\242\277\250+\205\277\223\375\311\277\337\200\336U\275\271\305?\2425\033\374I\234\204\277.\216_\317\300\210\276\277\237\206mv\207_\346\277\264Mm\201\207\337\210\277>\000\345m\3661\310\277\031-\273\367^\"\331\277\276i\271a^\234\310\277"
      }
    }
  }
}
node {
  name: "filter_type_1/matrix_2_1/read"
  op: "Identity"
  input: "filter_type_1/matrix_2_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/matrix_2_1"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_2_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\361\342j\221\367\311\300\277\271a\016I\000\351\320\277\327\362\376{=\315\347\277\303\3665\251M\353\324\277e_\332\216oY\371?\0241\227?\303\247\330\277\343\326\324\237\220r\353?\037I\0328\036\252\372\277"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_2_1/read"
  op: "Identity"
  input: "filter_type_1/bias_2_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/bias_2_1"
      }
    }
  }
}
node {
  name: "filter_type_1/MatMul_5"
  op: "MatMul"
  input: "filter_type_1/Reshape_9"
  input: "filter_type_1/matrix_2_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_1/add_6"
  op: "AddV2"
  input: "filter_type_1/MatMul_5"
  input: "filter_type_1/bias_2_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Tanh_4"
  op: "Tanh"
  input: "filter_type_1/add_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_10/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\010\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_10"
  op: "Reshape"
  input: "filter_type_1/Tanh_4"
  input: "filter_type_1/Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "filter_type_1/concat_2"
  op: "ConcatV2"
  input: "filter_type_1/Reshape_9"
  input: "filter_type_1/Reshape_9"
  input: "filter_type_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/add_7"
  op: "AddV2"
  input: "filter_type_1/concat_2"
  input: "filter_type_1/Reshape_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/matrix_3_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
        tensor_content: "`e\205\257*\345\241\2773\311i\337q\221\262?\003\244\337\204\231\262\274?\224\207\373\314\260\356\321?%\207\345)\022\344\247?\023\357OM\207g\311?K*I\272/|\371?\322\032Z\271-1\271?\351\242\375\251\343b\222\277qHGCnC\303?F}\205Sb\016\320?\352\241\203\020A\365\263\277\253\312\343F\023#\250?\251P\264\220\rE\340?$\243\353\001\314w\343?G\302\361\223\036\252\261?\300\342\035)\255W\214\277\002\220$Q. \321?ps\202l6\350\307?\342\317\212=76\317?\270\2501\022\005b\363?\217\304g\320h\310\260\277\243\2542^%\317\315?\237\306\032!\030\215\326\277\213S\276&l\253\300?\025\217$\244L\352\305\277:\217\263>q2\247\277\252\241\273\025\262\311\375\277\270pZ\370[C\337?K\215\320\236\0364\304\277*\300\231j\227\235\270?^\277\"\307Z\230\303\277\331yDtu\013\331?^\037*5\016<\361\277>\257o,W\337\337\277\303\345\322\271\316\373\232?\273=\322R{\240\352?\357\223\031\036X\241\317\277\223}O)\"\263\224\277\002\315 \352\026(\347\277\263\341\302C\314\024\323?\334}\263\374\371b\331\277\317\314\373^\030\274\350\277\306Z*\027\350\032\334\277\007\236F\026\361\266\351?\254\253\341\0231\035\323\277\330\261\035~3\026\320\277\277*N\021#\305\313\277\033\177U \325\017\322?\350dQG\324\201\326\277\310p\016d\"F\332\277\337\024\032\372[[\302?&O5Q\353e\360?\245\305\2348\203\375\330\277BuN/\340V\355\277\262{`\304J\t\325\277\316\362t\312\005\301\322?d\013C\313\367\362\345\277n\007\363N1\363\326\277\355\201\220jnM\301\277\234\204s\235\270\026\344?\267rG\317\340\017\350\277\214z3\327w\315\360\277\326i\217?\241M\300\277\033z6b\024D\333\277\324\0362\257\023@\342?r\301\227P\t\205\321?:\222\"<\370\252\322?\212\024_uF\277\324\277\232?\244(Q\242\361?\010H\254\005Y\n\004@\223\031\272^\351\346\333?\024\364\353=\343,\327\2777\335$\031\030e\342?\001d\276\036\256T\344?G\360\313-\341\377\304?R\020\344J\257@\342\277H\3102\213#\367\263?\225\337\317I\2574\366?\350\007\227e\344C\333?\211\317z\177(\263\324?L\306\024\005\221\336\340\277P\356\373\270+\237\303?\322\225\316\347\213\010\276\277\007i\0333\226\322\317?\322\202|\257\230\253\323?\\\330\376\323\004\301\330?U\233\3311\326\245\303?A\232C\316i\330\331?\"U\254CA\006\342\277\336\035\233\265\014j\353\277-\240y\325\250\314\337\277\354\254\002\001\203\251\352?\263\304\216+ir\234\277r\210|.\nf\323?\017\033\0072b\206\301\277\254\025\"\377\204m\263?O+\243\350\300)q?U\n\224+\334V\312?R9O\351\251\354\267\277e<\342\031XV\317?\336<\250\034\220\266\330\277\377\3239?B\006\323?L\347}\320\211I\332\2779\316E\000\271\327\255?\363K\261\310\372\270\324\277z4\342\r\030[\311?x\327\002\026\311\031\336\277z? \333~\372\250?;\177\270\255C\n\320?\302O\242\326t\221\334?.,\262l\210\n\271\277\340\224\021:\311\231\335?\263\021\221\324\224\331\343\277\374A\025[b3\346\277\020l\036q\020\230\272\277d\233P]bP\322?8\2647\010\213P\336\277\256\255$\034\372c\301\277B6\263\243\325\221\301\277 \336\245\014\325\300\336?OR\020*s\342\355\277\330^\036E\212E\331\277\312?\3503\037!\311\277\031|;\027q\225\354?\346+2@\2201\272\277\365X5~\024\017\215\277Dyc\335\347\021\270\277"
      }
    }
  }
}
node {
  name: "filter_type_1/matrix_3_1/read"
  op: "Identity"
  input: "filter_type_1/matrix_3_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/matrix_3_1"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_3_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\220]\266\217W\351\303\2772+\274\255A\337\336?\375W\r\030h<\326\277\263&}\361.\305\341\277c\331/\334\341p\370?\003\320\361\273!\344\272?\244~\325\'H=\330?\210\017\202f2t\373\277\037W\220\214d\367\323?YXX\227\257}\257?\255\324eSB\200\344?jf\036l\022h\353\277\213\325eW\001\373\342\277\346\007\357\362\037\032\373?3N\205\343\032\313\346?\352\266#\206\232\215\307\277"
      }
    }
  }
}
node {
  name: "filter_type_1/bias_3_1/read"
  op: "Identity"
  input: "filter_type_1/bias_3_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_type_1/bias_3_1"
      }
    }
  }
}
node {
  name: "filter_type_1/MatMul_6"
  op: "MatMul"
  input: "filter_type_1/add_7"
  input: "filter_type_1/matrix_3_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_1/add_8"
  op: "AddV2"
  input: "filter_type_1/MatMul_6"
  input: "filter_type_1/bias_3_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Tanh_5"
  op: "Tanh"
  input: "filter_type_1/add_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_11/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\020\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_11"
  op: "Reshape"
  input: "filter_type_1/Tanh_5"
  input: "filter_type_1/Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "filter_type_1/concat_3"
  op: "ConcatV2"
  input: "filter_type_1/add_7"
  input: "filter_type_1/add_7"
  input: "filter_type_1/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/add_9"
  op: "AddV2"
  input: "filter_type_1/concat_3"
  input: "filter_type_1/Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Reshape_12/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\\\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_12"
  op: "Reshape"
  input: "filter_type_1/add_9"
  input: "filter_type_1/Reshape_12/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/Reshape_13/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\\\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_13"
  op: "Reshape"
  input: "filter_type_1/Slice_2"
  input: "filter_type_1/Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter_type_1/MatMul_7"
  op: "BatchMatMulV2"
  input: "filter_type_1/Reshape_13"
  input: "filter_type_1/Reshape_12"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_1/add_10"
  op: "AddV2"
  input: "filter_type_1/MatMul_3"
  input: "filter_type_1/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 0.007246376811594203
      }
    }
  }
}
node {
  name: "filter_type_1/mul"
  op: "Mul"
  input: "filter_type_1/add_10"
  input: "filter_type_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/Slice_4/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Slice_4/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377\020\000\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Slice_4"
  op: "Slice"
  input: "filter_type_1/mul"
  input: "filter_type_1/Slice_4/begin"
  input: "filter_type_1/Slice_4/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "filter_type_1/MatMul_8"
  op: "BatchMatMulV2"
  input: "filter_type_1/mul"
  input: "filter_type_1/Slice_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "filter_type_1/Reshape_14/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\001\000\000"
      }
    }
  }
}
node {
  name: "filter_type_1/Reshape_14"
  op: "Reshape"
  input: "filter_type_1/MatMul_8"
  input: "filter_type_1/Reshape_14/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Shape_2"
  op: "Shape"
  input: "Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_12/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_12"
  op: "StridedSlice"
  input: "Shape_2"
  input: "strided_slice_12/stack"
  input: "strided_slice_12/stack_1"
  input: "strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_13/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_13/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_13/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_13"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_13/stack"
  input: "strided_slice_13/stack_1"
  input: "strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "mul_9"
  op: "Mul"
  input: "strided_slice_13"
  input: "mul_9/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_11/shape"
  op: "Pack"
  input: "strided_slice_12"
  input: "mul_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_11"
  op: "Reshape"
  input: "filter_type_1/Reshape_14"
  input: "Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "Reshape_8"
  input: "Reshape_11"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "o_descriptor"
  op: "Identity"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "fitting_attr/dfparam"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fitting_attr/daparam"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_17/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_17/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_17/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_17"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_17/stack"
  input: "strided_slice_17/stack_1"
  input: "strided_slice_17/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "mul_12"
  op: "Mul"
  input: "mul_12/x"
  input: "strided_slice_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_13/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_13/shape"
  op: "Pack"
  input: "Reshape_13/shape/0"
  input: "mul_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_13"
  op: "Reshape"
  input: "o_descriptor"
  input: "Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_18/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_18/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_18/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_18"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_18/stack"
  input: "strided_slice_18/stack_1"
  input: "strided_slice_18/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_13/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "mul_13"
  op: "Mul"
  input: "strided_slice_18"
  input: "mul_13/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Slice_2/size/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Slice_2/size"
  op: "Pack"
  input: "Slice_2/size/0"
  input: "mul_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_2"
  op: "Slice"
  input: "Reshape_13"
  input: "Slice_2/begin"
  input: "Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Reshape_14/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\001\000\000"
      }
    }
  }
}
node {
  name: "Reshape_14"
  op: "Reshape"
  input: "Slice_2"
  input: "Reshape_14/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_19/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_19/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_19/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_19"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_19/stack"
  input: "strided_slice_19/stack_1"
  input: "strided_slice_19/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "add_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "add_2"
  op: "AddV2"
  input: "add_2/x"
  input: "strided_slice_19"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "layer_0_type_0/matrix"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 20
          }
        }
        tensor_content: "\236\327&_\246\203\260?j\237\316\216\353\334\306\277;<Y\343\246\272\277\277\360\226Ft\374\205\241?cg\206\354\031X\324?\220\321\310\357\301\326\306\277\261H\300{\257\360\302?\226\335\re\010R\305\277\300\231\000%\022\314\223\277y\266\377\005\376S\300\277\306\340\244\032\034\024\273?\256\371\205\247\034\035}\277\244\031\307 \r\371\252?\316r\273V\267\353\256?0\254\035(s\335\310?R\211\336G\274a\325?\254\305C b&\320\277\177K\352\227\272\346\324?\265\320R\224\340\265\300\277\3361F)\301T\322?b\222\267\250G\016\315?\226^3\220-C\250\277\232\371!\201$M\333\277Y\024\245\177\315Uw\277\356\007\240\246>\'\313?=\021\016G\320\214\266\277\373\306\2045`\311\307?\244P\356\265\244\014\303\277\355\336\306\006\233\356\313?\017d\240b\332\021\340\277\034\211\361\353O\033\276?(&\231JN?\326\277\253\"\235\343\355n\232?x\260\353\312W\230\330?x\242\037-+N\303?&\371\271\250A\211\342\277\200S\347\203\020\270\303\277M\277L~u\261\335\2772\366\2564\212G\322\277\247\227\314\245A\370\325?\235\242[4\017\377\222?\275\336\362\0178_\261?\373\230O\224\227\315\224\277\273HN\307NQ\257?\263i{6\0259\302?\203*!\315\\-\263\277I\345\327\025l\245\252\277\307\263\305\343\313\r\267?\336$\236\353\340I\270\277\245\232\022\"\2437\273?\244?\0109\022\033\243?\250\350iE\210\241\265?y\337\333d\024|\320?.\037#\233\030d\266\277*\213qJ}\032\337\277\232\234\341\032\010+\303?I\270\205l\016{\336\277\n\352/$\234\232\256\277\020B^\346\220\037\251\277\326|\037.\276\235\247?dE ZF`\230?0:Z\301\265\002\253\277\235q\326G76\303?\033F\347\372E\300m\277\332b\316\254\275Z\304?o\000V\313\373\235\224\277\375e\021\036v\013\244\277\323\334Y\033\335\212\316\277Q\276Z\274\006\022\316\277\314\223\0349\230e\272?\333!\206\255\220\241\213\277z\214\tj0\010\316?\266\213}\311\2031\276\277\177T,\235\031\247\333\277\3563\357-pR\244\277-\'\264\2722_\326?L\014V0\232f\314?\256^g\177\333\310\323?bro \316\212\267?\226\271\250\261(\347\311?\367ga\033d\300|\277\270&\204q\274\t\241\277\355\270\306\2761\236\260\277\346\353\261.)~\301\277n[\331\005Y\313\242?\226/!\245\232\221\271?\347\323\336\0226w\257?\252\274vZv\363S?\247\020\341\237\340\217\264?\263\223\223g8\346\257?\372\375\036\031m7\263\277\366\020\203\241\314\302L\277U\034\373{\212\252\265\277\224}p\344\303;\243?\237\370v\221\300$\264\277Xe&\026\025Gv?\201.i\304\007v\273?>\003!\0216\232\303?\262\260\254J\370\274\260?\024\271\"\244\230\242X?\037$M\007M\007\241\277\004\261\274&7.q?t\030f\245\177\227\261\277T\356&\255\333\005\277?|\\\206\030AG\260\277\316\275dP\247\333w?\273\356\277\333\232u\206?\315\331\256:\307\023\277?\243\202\264\027%\344\300?h\225\355\265\374\355\266\277t\363B\355Q}\261?8axoZV\273\277\353g\376jR\035\272?n\314?k\233\253\321?\222\030\210\346S,\310?\013\005\366R\236D\304\277\024D\311\252\n\241\315\277\247\203\005n0\034\332\277_)\226n{\272\202\277I\020?n\210\\\257\2779\006`\2004\306\302?\010\276\205\014\241\364\244?c\231\340\375^\032\266?\314\030(\315\275h\273?:\315\024\373\263\326\307?\364\214#\037\313\335\266?w\003\337\007@\235\252\277\207\265\324T5\315\323\277^\230\376\315\370+\301\277\312x\352\2454:\306?r\272\300>\224\027\270?8\004?\225\267@\324\277]QMo&c\314?Qsg\363\004P\306?\307S\254_\3671\305\277tg`\223\314\032\320\277\2541\006\340~h\244?\235\207\343\361M\332\310?\033z\304\216\370\212\274\277\355-\3148[\357\320\277N/H\237\314\226\264?\210!+\232\237\227\251?\240\034^\030\305\303\302\277\016\311^\260\230\326\307?\026\3638\025\362\340\311?\013\371\323\000\223\016\234\277\222\200\031\3017\341\260?\266\340Fc\227\264\301\277\306\344\203H4^\246?\342\256\342\203\241\037\310\277n\334Z\342\222\237\260?\312\014\344W\317\233\252\277\344R\347/\354\321\312?\362\325\351\333>p\272?dn\340\267\345\271\301\277\350Uj\007J\210\314?\321\276\334\3434K\321\277\034\344\3678\224\365\304?g\237\377\234\022\035\264?U\217\372\r\033R\257?\316\360E\337\340\236\241?\244\307\254\303S~\202\277^\375,\335\200\241\301\277p[h\221\230K\303\277aF\265\372\230\"\324?\271\263/\t\006\317\243\277\271\231Ms\245\007\262\277\224+\325i\2361\325\277\326\3566u\301w\303\277\236\367\316=y\345\254?P\026\"m\343$\212?\226\206\025 ~v\267\277?o,=\201\355\260?\347eu\327|k\271?u\211{\344]\256\300\277\302\235\026S\362\\\313?\305u\237BWC\320?\356\016\344\255\004\002\332?T\345\373\257\215U\234\277\177\327IG_\017\301?\361\020\207\013\027Y\262\277\304\354\360\256\014\034\271?\320\256\254\301a\243\270?\273G\302\355\024\225\240?\037\344\037 \273\177\242?\320\010\315\244:\306\252?\243\300\t\323\311\010\301\277\331\277\220y5\316\301\277\026\302Pd\347\327\327\277\205\032\333\212\254n\220\277\030\020\241!\022\242\237\277C+\035\311\226\306\302\277ML\276T\276v\270?\023\327O\220S|&?t\023\244\217\353D\326\277\002\275\321$\357e\306\277\310\244R\t\271ct\277\250\004\200\257\257\261\251\277E\227\254\354\005\231u?y\210Bq\247\005\251?i\346UU\177\301\246\277\320({\223\354k\265?\202\200\237<\026\024\243\277dh\3726Uaj?\024\325\323\223[\302\252\277\003\333&o\237C\213\277\350m\032\\x\005\262\277o\271\204A-\216\300?<\'XD\022\204\313?\355\326\354\274\200\271\326\277 1\225\267\330\036\277\277\240\262\177\375#\002\254\277\212-\006\025\302\370\244\277O#\214\235\276\007\302?(@\224f a\275?\215\010\225\374\276[\256\277\246;\357\214*I\243\277T\277ev\272K\321\277G!+\346\024P\254?\3165\361*\224r\265\277\246L\032\271g\344\336\277\034!k\311\325j\346?\375\210\264\265\347\013\350?I\013#\326\351C\331\277\214k*\275JJ\000\300E>H\016eX\350?\313\346\240\264\264\276\347\277\202(\322%|\321\372?\320-\240\220s7\346\277>\357\323)\337b\347?\212\262*Z\233\366\347\277\377\021\277\321-\313\366?\031\315\361$\201\246\313\277i\226D\200\000\025\360\277\274\367>\307\010\340\352\277\374\260;\230\223K\310?kGL#\tk\266?\253\241\370\261~\370\364\277^(H\225 -\347?D\366\036f,\272\351\277f\232P\240$\201\260?\032\260\343\207\225\317\304\277^\365T \007\225\276\277\263\013\363\177\007\364\271\277\332\345\221f`\276\305?\201Hb\316\331G\257\277\321\351/k@\224\302?\021l6\035\356g\260?\346\356\222\240\025,\240?\221OKau\277\311\277\331,\207\231\275%\301?\315\2725X>\242\204\277\372f\013\326\026.\304?\334?<z+\322\262\277\035\014\365\276]}\302?Wd\372\365\217\271\325?\320\350\252\371\263\347\306\277]\002\241\026JZ\262?\266\257)\265\367\250\267\277\254\025?\327\227Y\310?.\232\377J\244x\177\277\004q\316\367fZ\262?=\034\346CeL\311?c\246\372\260\223\355\262\277;N\204R\014\244\271\277\034 =\275F\225\246?.\216\323\331P\201\252\277\247\2046\324\247\237\272?\331\300/_s\272\334\277\225*\315\347\225v\332?\301$\342\220\026OC?\023\250h\254\252\335\300?\343\267q\326\'\r\255?\357\270\206\002\216v\323\277\326\273D\367\241)\331\277\345X+\351Gw\322\277\247\016\016\331\207\023\307\277I\321\021s\370\311\310?\257\014i\355\232yh?\203By4\026]Z\277\207\t\373\2275Wy?\241\222t\006\300\017\264?6\221^Y)\344\266?\254\307T\206[\377\304?\n1\335C\253\002\316?0\205W\200\354\231\225?\35102?\222\354\272\277\333\341l\357\353\271\337\277\304f\017\311B\023\272?//qY4\336\304\277\027\225\341\rG/\262?\373\226z\304\023F\327\2776\276\tT\321N\335?\264\351\252#\360\213\333?\211w\362\031\361&\263?5HK\371x\371\334\277V\344\365\305#\017\254?2{\246}\320t\343?\303\007\353p\370Rt?\266&U\217\261Y\266\277\377\351\206Y]\334\262\277R\0003@\330\347\226?\010\232=\377u\344\232?\334\232\377\201\0108\205\277Q7\302\346\377\240\305?)\235\327\001\2126\242?\027Sq\222[\006\203?\242\221\037\276\202d\273\277\324Z\032\212\177\362\225?\013P2\350\341\302\302\277\237\211P\001-\006\300?_\223\330C.\354\272?\366\2137\344N\343\240\277`\255y\010Hc\223?(\252\027\000\316\235\255\277`\357\361\263\267\364\301?\311V\222\262\312\301\311\2772\245\322\270w\010\263?\002+\247\320\014\020\262?\344wx\014*\201\220?\025\320M\252\016\366\251?\252\276h8\240f\257\277\2425\200\226k\220\326\277!M\246\201\002\216}\277\323\242\272\274^\245\321?w\257\355\205\024X\273\277\037\274\337\264YV\304?\245\242\314\223%\204\234\277~U\n<\264\257\322?\306\025\3639\031\214\341\277\305\364\241v|\320\315?\000\331\315\370\035:\323\277Zb\327\250\372Y\266\277\242\244\327\364W\024\334?\336\263\370\345\214\013\304?\031\335\311\r\210a\336\277T\361\3302\216\347\305\277\001o\267\350|\271\333\277\242n\350\224\234~\331\277\177\031\003\255\"\317\331?\317\351\013\326^\243\333\277s\243\016\256\212\n\330?\3302\262\241\004\207\322?\210Y(\026\345$\323\277\331u\014#c9\277\277 \'\227)\201l\334?\203\330\251V5\317\327\277Z^\324~\217\222\317\277\356\202w\363\314S\333\277,\004\341B\222\260\334?[\022\314\217\006d\327\277H\2108il\275\266?qK\213\t\021\021\333\277\301\r_\226vq\303\277\315~Z\\\333X\315\277\2374\324\243\264\302\334\277\342\263k\357\367\226\306?\361\nU+\340\243\371?u\rQ\016\214\341\340?\264\345e#\232f\325\277\271B*k@!\256\277\024F\245\252\207o\213?I\212\017\n\212\031\314\277\030~g\027\247Z\314?\020\027\362\312\312\341\300?rA\264\336\256\231\266\277tO\266\215\016\371\261?\316\340\227F~i\320\277\016R\211\313\2016\273?\206\254w\331\231\372\311\277\325re_a\211\306?\334m\017K\n\253\304\277\330%\272uPA\321?.+M\177\"\266\276?f\222\300\350\314[\306?\322&\351\331\001\254\324?\227\006\251\266\205\350\350?t]M\366\377\317\332?\244\360\243\353\210\242\235\277\273\004\206p\342\222\263?\257t\344Y\214\003\301?\376\016\340\010\236\324\324?\214(\301\235\266\300\206\277\343\301\245\027\n\276\251?zM\317\003\235g\360\2778 /\241!\027\243?D\3649\276\004\201\305\277\303\211O0p\020\370?3\2402\241\221t\344?*\222\025}I\000\313\277\256^\274DE\337\250\277\020\334s\343\026\003\320?\226@=\217\232\035\313?\373#\330(j\016\324?\267\355\374\343\342~\362?q\210\355\254u\016\344\277\252\272c\224\243\307\361\277\320\251\360\242\254&\353\277\223\347u\000\257\200\270?!\231\005\355\204\004\336\277\353/\332:|\241\226?\210i\005\234&\031\203?\232Tc/\223I\304?1\221\007!\207\245\324\277\371\314[\035\370\314\276?B\334\021\240\313]\267?h\342\300qV=\274\277\264\372\\m*\265\304?\215t\240\026\212\037\305\277Lh\251\273;f\251?\243<\035\306\331\005\313\277\277\316:\330\373n\241\2776Z\236V+_\343\277\032\r\230$\240\341\263?\305\354\n\255\\\215\260\277X\010\335\003dZ\362\277;x\363\336\253r\337\277\037~\311<\316o\322\277\226\023)\340\023\363\265?C|\350S\314S\271\277\017\222\244\3567~\262?3\203\035}<m\265\277\243\222\336y.k\251?\312\270\276\375c+\225?\032,\255\374c\351\335?\366\366\270\372\320\036\262\277\305i\t\331\240\210\306?F\365\023\274\016\330\362\277(n\210H\216\307\264\277\376ch\224\322\235\276\277H\0306t\n\204\302?Pn\320%\023\242\264?\235\t\205\031\266>7?K\270@\332\343\216\302\2774\312G\216:\205\277\277A\377S?\221\334\266?\237\030w\342\337\270\344?\027@\3252\3000\340?\300\315\327\345\317\347\300\2777\370\252\256\'\205\317?d\023+\341\374\333\267\277\215C6\351\243?\317\277\003\230\370\266\017\234\302?\371\335\241\310\270\335v\277foA\341a\"\332\277\322P\027\3602L\321\277f\323\207h}S\232\277faTa4\177\331?\275`\255\r\207\246\321\277\311h\254\351\360\246\324?a\224\273\275:\354\306\277\324T2\202j\236\305?y\264z\373\340\367\264\2774\223\202=!`\321\277^\245?\267D\212\316\277\231A\227\236)V\302?\215%\365&hL\327?p\250\214\251%c\265\277\373\334+\207\257C\241?\303\316\320\017S\250\304\277EOn\206o\030r\277\022\356\226\t\363\343\266?\207\022o\345)q\316\277\264\352\327\240\017\230\327?\335Ua0.Y\314\277\242\030>\270\007\252\265?o8f\360j\270\300\277\356\361\235\n\366\247\327\277\313\377\037\266\305r\343?k\204\005\322\362\t\343\277R\314!\216\354%\307?C\316\033-\377\002\312\277;\211\017\357*I\342?+\377\230\346Q\371\320?\325\346\035iu\032\343?\020\002\215\244\227\312\341?/\301@\315+\217\356?+\271\033)\355f\303?o(\253\245Nd\246?93\205\341\365h\270?\223g\201\247\276x\331?\276X\230\354\260J\330\277\210\352\034\220\367H\353\277\203\007jA<\001\331?\376\214\312\340\363)\223?\207\265\r\240\344\005\330\2776\304\006\363\307`\315?c_<8\305\n\243?\014\234\035\270Jo\344?q\335\364\346\242\314\345\277n\035\247\366\263<\340?\312\203\256\001)A\340\277DA\\\212\022\\\333?\317\3653v~l\345?\225\326D\377^\366\341?Fj\024\352\017\034\306\277z\270\354\326$\356\325\277\203 \355\233j\345\344\277^&\353\024\\o\336\277\214\ra\0225M\336?Mr\256!\007\315\326?\016v\324l\307\267\333\277\245\000r\242\224%\301\277\313&\207\332Ks\324?dm~\002g2\220\277\354\nl<\255\020\337\277\233<`\260\022f\326?\252r\253\030\374\234\224\277\301+\346\261\352Za\277\203\216\300}]\275\240?{\224r\357\032h\310?\034\363\306`\336e\257?\255\016\003\265%(\326?\217\302\006\\w}\273\277\'\315D$\275(f\277\353\304W\306\214\202\342?Dv*F\005\355\324?]\204\022\265\354\345\321?YTO\217\277P\320\277Y\304\032\273X\020\334?]\303\327\263\261\263\243?k\rb\2053o\254\277lz\301\311\272\r\241?\364\r4\016\320P\237?-\327\201\376E\374\347?\2440\214\016\271>\313\277\024\244\256\315\025T\243?\346\243\224\275q\222\350\277\325\265\211\310\374\360\273\277k\304N\321\377\211#\277\226\355p\000\022\024\260\277\373\330\316\222G^\227\277\341\357\251Jm4\252\277H\244\021\301\371}\241?\0202\025\004\220\261\303\277\311?\220@_&\306\277\315\254\340\032\320\357\303?\343\372m\305l5\337?=\355\324\0243\236\257?\020\222\303\033\337K\234?\346\367h\253\215\275\272?\273\3506\317Z7\301?\370\221o\253\370\021\322\277\340\023?\201S\\\303?^\230\031>`G\312\277\331\343W\320\206x\321?+\231\004\033(\340\237?\0072c\273>\264\306?=\033!\327\361\253\342?u\207+\222\004\221\322\277\206\373.\217S\375\263?\023\270O\'\215\307\322\277\200P\232\316\307\010\242\277\267\007x[\273\276\333?\004\233\014BTh\357?\365 \201\001uX\346\277\3243\223\273\327\205\311\277aRq \231\366\354?\361\2741\246\305\300\263\277\033\332\252\302\320P\274\277\216\237x[A\036\317\277\362J\005\004\370\364\320?\256\312\367\221\2079z?8\001l\345X6\334\277\2104\362Q\241\354\306?\251Q\221\344\334\022\317?\274\371\035\3231\203\272\277\226#\242\324\\\004\266\277@\217\303\341\222\275\274\277\3465\275k\264\244\321\277/\345@\342\216P\304\2773\310O\256\323L\264\277(6f\212C%\336\277\356e\024\317\257\260\314?\037L\375\276\366\364\226\277\212A)\224\210\216\360\277\r\247\315_\207\313\317\277\250\304P\366\021D\322\277Q\334\000xZ\314\312?\353z}\352\206<\242\277\254\320\212Q\324a\301?\332\333\346\t\372\027\231?\231\006n\372\332\305\316\277|\331\373TU\217\336?\270f\342\344+{\300\277\200^(\335_\037\233?\215\232\270\357\372\237\273?\331c(\210\\q\325\277[\303\352\344sH\326?\327R\204$b\362\332\277\021\345\355+$L\316?#\222 \260Gu\311\277\037\265\333\010V\021\321?\332\322+\244\302\201\312?1\'\352\340r9\327?8A\220\222V\236\343?Ln\0264\216\013\342?\260\240Y\204\323\333\343?\345\371sH\271\005\300\277#>\0006B\255\323?\020\357\346\016\214m\301\277m\256p|/y\234\277+\306Fc\201\332\340?\356\250g\303\3378\237\277}\376\246/*\316\324\277%\224(56\013\306\277\235H\377\345\221\213\271\277\240o@4n\202\337?\345\345\234\310\2462\333\277,\253\030q\321\217\344?\344\236\352\223a\327\316\277\311z\330\274\206a\326?p\366\0014o\233\311\277\326\306~\357\'Y\326\277\027w\251*\301t\333\277\267\314?\'\177\322\273?\003>\303\264\246\'\314?sG\024\340\205A\341\277z\306e\203\376\227\322?\320\246\256E\0068\326\277+\0355\332\225/\263\277\255\302mtI\007\311?\016\314s{\313\200\310\277^\241\004\245\236\025\331?,\246R@?\313\306\277\001)|Q!\032\306?-\300\270T\336\324~?\261u\036\352Q\360\322\277\t!\217\227\267\210\341?\022t\030HO\004\342\277>\033\035\204\035n\266?m\361\232\030\356\360\303\277\002\216J\036\237Y\341?\\\035m\005)T\333?A\202\265\300\221\320\344?\025i\252\016@\370\323?\016\335\031K\032;\352?\311\377\3771\270H\301?~\234\030R\210\014\270?\246\236\345$:K\261?d\341\200\217y\231\300?yT\270\303+\311\271\277\375\223c\2138L\302?\264p\321k\376\013\267?}h\377\250\024\340\270?`N$\272w!\250\277\346\t\373uBcr?\3464q\002\t\241\307?\274q1\347\337<\265\277\216R\235r\024 \240?\024C\325:6l\245?\240\013\017\005\251\006\274?\371\326L\247\027\\\270?\240\024t\376jE\277\277\031\3735\031\"\333\313\277\253\202\032#\034W\275?\205\216\007\224u\021\335\277X2\376/L7\225?\'\232\337z\342\227q\277\002\002\266{A\255\302?\332\'\003\261\341G\221?\\\305)+\030\013i?\344\334\321\330\2452\324\277\360\365j\031\300\224\326?V\370\222\2217\003\227?\340\023t6\r?\266\277n\226\257\270;l\222?^x\245\325\010\300\306\277\267\322<\340l\317\307?\212\216\364\200\325\313\302\277\333\026$f%\010\305?B2%\372\241\254\254\277\241\367\351\005\377?\322?\215!P\266\213t\304?\247\2335E\370\256\317?\302\032\310\036\002\264\334?M\025\t\026\211\005\350?0\205\325\364~O\336?\004\320\334\206|w\206?\347k\023\312\270\220\303?\024\346\336p@l\311\277+\315\207\037\252\211\322?(\234\271\340D]\260?\030\337\213\227\265\237\302\277\354\324n|\337P\217\277r\365\323-\0135\276?rP\321\204Ub\204?\326\"\340\245D\215\320?y\232\373eIe\275?\354]\034\255-\017\301\277\360\247p]\354U\306\277\'\030\344\244_G\252?\274f$L!\216\254\277e\233\3214\020\371\266?\260\010\362\205\354\256\263?\202K\025\264\325c\345\277\177\\e\351]q\332\277\331\030\351p\023I\242\277\006)\375\240\334\254\303?\014BH\355\220)\230\277LA\353\274\2420\275?u\256\305\354\366\253\301\277\262\004Yl\266[\265\277\n#\306U\211\354\203\277S\227\03747V\342?=\022L\365\267\243\264\277\3432\214\265_\345\265?\251|>5b\313\326\277\206j\007O\005\377\300\277\357O\002\000\253g\256?\244\256\273\377\204T\307?S\337\335\333\334\316\302\277:\332\327\227\272S\304?\275\014\022\246?\363\310?\t\026\0340\037\362\301\277\265\240,\353fH\322?:\334\203\243iF\332?q\347\232\353\206\257\321?\250+\236C\\\036\304\277P\362\271\316\257q\304?\237\273\257\341\352\201\233\277T7~\230\200\207\265\277m\235\247?\321h\215?\322\344\306\256\200,\262?\331Z\342\032L\311\266?\335\001\010\032W\325\213\277\211\003\315\254L6\260?K\025\323\246\305M\310\277;s\265\001\324|\261\277M\300W\0205\202\257?\224E\014s\035\220\307?l\250\222\375\306\350\264?#Q\254\225Zc\205?]\021\0352\177\245\306\277\251\324/\314\233\253\320\277\035\355\324\326\316\r\260?\005\212\243\206\262=\247\277,\303\355\206\003;\305?7\364\324T\373\020\250?\022.8s\202\266\247?H1\245FQ\216\300?\364\3261\301,\034\266\277\326\205\376\350\236\273\260?n)\370,\037}\304?\003\341T\365\207F\313?\251\036\375\234\235Ml\277T\355\301f\337U\305?n\\\306x\332\333\266\277\216@d.\244\222\301\2771\346\342\\\250\235\301\277U\206\214~\016\031\242?$\320M\245<\220\336?\234\310\360\357\016\341\317?m\341\3577k\237\330\277n\347\266\271Q\332\337\277\003UF|\n\014\305?l\354TD,\366\277\277\000\253\256\276\002.\310\277\241{$\0375K\261\277\301\261\354W\272\302\320?\016\237\376\253\016K\311\277\341D\331\201~\220\303?\300\016;\377\277r\303\277\356+2\016}\252\301\277d\021\r\261\377~\262\277\265(\252\2317\350\273?\252\211D;3j\267\277\300\223\0263\222\014\231?\302\262\000h\253\370\304?\346q\200A\266\202\304\277)\036l\'\231\037\276\277\363\247\202\013\252]\302\277\231l\013M\366\027\276\2770v\2178\006n\313?\\\177db\327\227\325?d\370\237\254\027Y\267\277\350w`\260+\222\333?\265\216=\252M\230\261\277\016\253&}\240;\322?]>\225\010\324e\246\277\342r\343\241=\231\271\277\244+\000\362js\233?\303>\243\311\250Z\261?j =\354\327\362\243\277H\226\254mJ\374\271\277I$\224f\303\230\200?\222\233j\266\320\351\266\277\254\013\246#%\327\325?\215|\361\323\327f\307\277\2619x\0358\253\271\277C\264N\355\330\021\210\277\220\030Q\206\341X\316?\251\2310\236\014\265\270?\214bR\244eJ\317\277,\237[\t\263\347\317\277\362\247]X\371\207\317\277\333\260\345^s,\341\277a\275\345\245@t\334\277T\257\353\n\r\321\303?\323d\373y\313\310\254?\2066EH}~\262?\020\317\210\306\340\354\251\2770N\355\276Qe\244?\233\275\205\"\304\242\267?\035\tgR\247\205\304?\254$\0034\365\273\234\277F}?:/=d?2\350\302p\006\006\245?\300\371\255\2653:\300\277\354\336\031\207r\032\261?\370x\336.\033\371\300?Q\023\322\377\343:\262?\024\210V\346\243\272\301?\025\255\253f\373l\245\277\346\327\334\366\345\224\335\277\2169\016R\324\356\267?\003Jco#\234\335\277!\223\266\001\342%\276\277,\202\222\"D\260\253\277\310\277Y\330#\036\271?\277a\035|\237)\254\277\305`\022\273N\204\265?\036\262w\342\315\203\254\277n\200i\334,\324\304\277\300\354\267\304]\244\234\277!\205\027\214\201x\251?\201ZY\275\351c\275\277\025\337o\231,\253\301?\273\025\335\321gU\314?\257\311\267r\335\301\322\277\261\375\343\005\225\235\242?\377\034\274i\351Vz\2776L\305\300\315Z\261\277\303\035\252^%}\321?i\002\003R-\257\273?\305\305M\017\022\223\326\277\230\255g,q4\312\277\302\000<\210\247E\301\277w\300\351\330\325\253\277?\312$\0169\236i\251\277\364\261+P\343r\320\277z\330Y\374\332\241\272?\344\030\335y=\341\303\277m`(F\207\330\261\277\340\345\312\'i\254\305?G\005\232\207\t\260\307?\373\'\375\2745\'\303\277\274\035\201\202\310\004\272?\257\010_X\021+M\277\332m6\372\2410\264\277YN\"w\325h\273\277\241\340\037\243w\037\303?\010?\350l\227\220\260?\377\364Z\254\207F\301?\304\241\313`\203\032\236?\246\224n\026\3568\333\277\005>\261\002\245\010\315\277Sy\222\230\374+\321?\257\361\021\321H\361\302?\247T6#\310\362\263?\002\321\331\000\215\035\335?\223x\254\002\363\352\327\277<\337\330\346\363F\237\277\010\263Y\364{Q\325?\210\301\2008B\334\321?~P\267\255\224F\340\277\347<N\247\350\307\323?\222\207Z:\005\202\335?\275y\021\r\327\316\301\2778\366\304>\227>\250?\240\034\033r}F\340?\214*@beJ\300\277\315y\225\035O\r\347?`\210\'\274\013S\306\277&\245Y\330\324\352\322\277\3074l\253/>\351?\032V\235\352Y2\257\277D\333\023\030\262\354\337?\375\"\361\310\353\205\334\277\363\225\224\302H>\332?\025I\262\017[g\256?\203\243\035e\267\357\253\277\363\002\331\201\254\303\236?\354,\246\325\252*\302?<Cz\\t\\\273?\002\360\256^\t\010\277\277\324q\220]I\317\260?\377\223M6\226\256g\277\345\206\001\360b\025\265\277\362l(\3204\207\302?\223u\314\322y\206\261?\363/\310V\275\022\266?\212s\256F\036\321\321?\2215\306~\376h\261\277\264~\007\202\213\355\337\277\217U\346r\0054\317?q\204_Ij)\323\277\341/Fv[\353\260?\210\236\313\233\322\322\267\277\3152\244[\034\033\243?\275_\204\235TG\306\277\000;~Y~\364\317?\232\213\236:\001\017\276?\016\016\273,i%\320\277VB+\323 \314\260\277\324\357\230\357\376\306\201\277\233\025\003N\001P\322\277\205<\237\2235\317\325?\023`MV\224,\245\277\225\027v\016\007\234\260\277\302-X\027\321:\307\277\027\213\306\336\'\272\302?\200\313\024+\373\233\331\277\217(\2535\242\337\245\277\230\376\260\022X\216a\277t\277X\352\265|\342\277=Q\301\236\034o\324\277\203\262\0314U\210\301\277Av\233y\035#\300?\r\300\306\037o\014\241?\274\334\373\373\214\033\314\277\224\367b\347\004\203\265?\317^\r\352\277\030\334\277Z\237\246\325\307\324\205?\311s\020\263\016\300\323\277\276\356\312i\273Z\273?\342\335t0S\305\305\277\313|d\020\353\361\310?\336\0220\236r\"\330?\251\266\321\360\030\223\320\277YSC\325\225\360\302\277\201\204\033PG\264\254\277\242\253\277,\336\021\272?\246\267,\214p\036\303?\307\246\202\203\016\026\306?\352\274n\372(~\264\277\253bB\020\364\343\337?S\000\364\232\334H\266\277\216K`$\014\317\277?\235\220\375\'\207\206\304?\226\007m\270@\274\233?\225y\005\354\360\223\262?\335\247B~F\254\256?8\363(a\001\227\313\277SRK\307\264\"\227\277\006o\207%\001.\304?\242%g\"\365<\266\277\245~H\\T\316\303?T\036\3619\242]\234\277+\243\313MM\370\320\277\341@Z\364?\336\232\277\246~$,\226\307\263?\367\020\350\216\254\271V\277J\254\302\262\352o\257?\317\352\204\330Ty\307\277d0\232\277\020\261\323\277\320OTW\276|\323\277\001\373\354;\310\350\320\277BY\331o1\t\247?\271\231\220+4\023\232?\251\004\024\276$W\202\277L\331\014\000\225\010\247\277A\230\204\223h\244\325?\323\320\016ChF\200\277\t\\\211\206\305u\320?<\031\342\267\230-\177\277)c\274\244w-\274\277\361\377v\027z\217\311\277[m\352\272q}\316\277\320\004\301\323\301a\275\277\204\203\226\361\357D\244\277\224\256\035\377\200\204\320?\2569\266\277\366\377\273\277\013p\317\326&\364\324\277\0343A\366U\036\245\277-\350{R\000\250\325?\347\026GW(\220\333?\234\223\314\235?\001\340?\262\266\341\224\310\241l?\204f%0\rZ\312?g\270\021\320{\007\271?x\357\031\365\004\034\323?Q\307\257\210>\267\243\277\314\243\3540\036O\304?\374`\235\254\254\251\363\2775\325]\035\016\325\236\277 \357\034/8\202\320\277f\235\016\314\337#\367?\345\203\214\034\272\213\343?\324\346\302/_\244\272\277\2068\212|\017\351\255\277;\362)\252\330\335\333?^\310}\316\333\335\326?\2112\002\366\331\202\326?!,\344\246=\313\361?\037L^p\202C\345\277\236X\201\353\020\014\360\2772$v\224\001\266\351\2778\301\2127\277\377@?\231@ke A\335\277\314\013H\n\224r\226?:\273\271\204\tv\272\277\306u\2442\246O\304\277\216\322\311\257\311\354\275?~\264\260\324\350\372\332?\274\255\026\202\276\027\302\277\003\200Uj\305\353\276?o\316HH\213n\322\277\356\371\307\3647z\301\277k\362\221.G9\252?\304\023}\242\255L\271?E\021uY\331\313\305\277B\303\253\032?|\313?\365\014}*M\240\304?\031L\203M\267VP\277\005H\340\031\311_\323?\364\023I\322\027\217\332?\260\002\271\252\355\222\325?Hr\303\305y/\315\277R\030\206\3270\215\321?\006e\253\227\235\273\326\277\254[\213\212\002\363\245?\027[\214$\333\240\253?|\031C\377\340\370\346\277>\244\212\017_\372\347?\330.\317\340\352\310\306?s\024\035\002\234,\277\277\317\024\022\"\003\332\341\277)\327\320|U\346\350\277\276\231\324\010MM\333?\246\226\361?\337Q\333\277?\344z\t\252\354\300?\006\033j\265iL\344\277\375\321\322\376}\256\330\277u4\003\247q\266\342\277\21725Le\205\312?\346\200\345\347\232\274\342?H\244z\3359L\346?\371+\373`\250\325\303?\300}E\030\274}\325?\t\023|\215\254\213\301\277\230\331x6\251q\261?5\234\226\263s\371\315?\277\377\022\346\255\266\314\277\241\233D\213\2737\305?b\222\3162$\324\260\277\351\227\233\332\000\205\245\277,\212yv.\026\326\277\357S\025o1\262\330\277\377v\251\203\227\326\334?7Q3&\371\223\301\277\202a\366\341\210<\321?\355\224\233\253\022\351\316\277\240\000\333\206Q\274\307\2772\364\2338\246\316\334\277-\303\202N\027Z\264?\370T\361\347v\223\312?\002\366\202\335\337\303\306?\334\253H)\274@\264?\312\346\206\357\272\006\250\277-\234\340\306\310\211\310?tJ\257\313\317A\251?\252\004V\324\352}\313\277\224e\215\254\3762\324?\002`\315g\240c\343\277.#\016\365\265\010\304? u+:\225\354\313\277\177\254%dY\244\346?\267NVs^\264\342?\177F\003\270\236\334\305\277X\206e\372\231\222\307?\0029x\315\335\342\256?\316\237\026\036\2005\324?\354#0\247\002\360\316?\341\230\301\341ie\360?sM\242\\\255\377\277\277\rVhKD\306\352\277\224=\236>\320\372\352\2772$\225\351\322q\222\2775\357\302[\322\020\305\277,\225\266\355\023\\\314?y\375\313,\310\320\327\277`\203\302}E:\316\277\0076\216\225y\230\272\277\221{\010\215P\326\302?\316\006\270\022\272l\326\277Tok\262x\341\326?Eh\330\342\301-\265?\025\327G\360w\311\355?B\316\277+\250U\347\277o\277\331\366\201\327\305?\306\213\344\313(6\322\277K\252\373\271mjq\2772!\224\010 /\332?\331\350=\256o\035\363?\346=\306u\266\310\346\277\312\201\216\323v\203\350\277\212{\234Ea\214\306\277\351\t\355E\321b\330\277\376\313\236\250\223\233\327?g\330P\275z\243\302\277\370\315z\271F\030n\277\245\000C\347BE\224?k\257\323K\335\025\265\277\272\332`@b\350\345?`\250\342m3z\264?\030=\323#\032y\274\277\024\241\365\275\334\244\361\277<vA\210-\244\316\277 \321\251v0.\272?\3655\345\324\203\022\266?\032\303\300[\231~\330\277\224}x\013t*\277\277\277\263\221\">\264\315?n\277\323>\353\"\323\277*\301\220;\226\331\254?\331\246I&\220\270\351?\366 \214r\347\226\350?\221\032\272^\270\334\266?\223\366\253_\221\273\275\277\335\354*\325TS\263\277\260#\"Y\nB\275\277\315\345]\256\"8\271\277\375[\236>\210\005\254\277B\275\037h_\301\333?G-O\360@\361\264\277\027\252\201\004np\251?v\224\311\340E\226\342\277\000\017\2223\036\340\326\277\332|\034\270\373=\250\277\270\2569\205\331\014\253\277#\306\320\316!:\264\277\023\341oc:\270\260\277K\n\016\224F\361\254\277\033\202\370*`\206\251\277\212GN\014\274\330\326?\301\230\270\037[\314\344?[\013\323<\363\246\341? S\026Mk.\256\277\0167\300\036D\216\326?\364$\323\377\356\207\301?5\323\375\275b\313\233\277\260\224t\322\320\276\335\277y\215\3173\nb\327?\270g)\207\370\255\270?\000?\241\024\3041\255\277\347\365\001\n\227q\274?\\\250\2615\021\202\265?\242\235\010l\242\230\325?\200\032y\372\'\340\321\277\027\\\327\'<\232\320?\321\317\2362\030\333\336\277\265\304\217V5\332\320?q\002\317\n<_\331?O\2659Rng\345?T\261;\345\251C\277\277KW%\252\305|\254?\240U4)\353\264\307\277\2737\207\253\314\034\300\277`\3309*w\332\306?\000\347\300u\272\375\242\277yHz\264\362\212\303?\014\253\232C\013\371\332?\226\356<u\342S\271\277.\214<\244@u\255?2\364\366\214\n\001\301?Dy\336-\020\324\322\277\020\254;\020#-\262?\215\236\247\2215\257\212\277\310\022\260\257\010J\342?\010?\373\363\376\267\306\277_\273\236\2601\245\315\277]Uw\322z\270\260?\'\210\305\271\304\026\326?V\247\037\0105\016\321?bA\037\342\336\340\247?(\237\"r\265\006\314?\215\376C\301\306_\274?\341&c\320+#\261?MN(\276\261r\330\277\220{\277\375\305\263\336\277#\332\033`\210\032\323?|\244.b\333(\352?\307\237@\004E\215\353\277}U\376\320,1\375?\026$3O\207\241\340??F2x\374@\327\277,\023i qn\354\277\317\353n]\006L\363\277\033\273\014B\312j\361??\022\352_&;\353\277\346\r\334\"\004\301\333\277\265\241\231U\306F\342\277\316\345\356\371@\327\222\277d2\223\361\322\010\363\277\353\351\264\030\017.\250?\375\303\253%I\\\371?\244/\341\224\253\372\323\277\252\276\031\227\206\267\340?qV`>\324J\341\277\034\221R\272N\225\316\277k4]\353\355\254\270?\376!\207\3226\014\330?\3012\311\210\364\375\300\277\266g\223\t*\327\301?\230\315\234\360p\355\301?\367%XE\316\342\313\277i\213pd\352S\306\277\200\317\006D\270\331\324\277 \305A\372\262\331\317?H1\006\020n\311\307\277\006wr\353\316\277\323?.\330\202\360\307\372\305\277\257,@\217>\260\325\277\"x\325\031\336`\307\277y\3064Z*e\327?\377\023\200\036;\335\316?\224\326\306\225\022\355\322?\277 Q\265\202K\273?\236\333<O\203\356\224\277\025S\"\025\005j\325?\266\243\224%}\355\313\277\302.2h\326Y\340\277\034s\374~l\302\341?\306\n[\302\333}}\277\324O\3018\017S\312\277()\350a\370\200\307?\336d\232\337h\220\272?\246\207$\331\354\014\345?\2110g\362\311\'\341\277\327\254Yxe\031\335?\257\014p\231b\'\331\277\2640\367G\254\"\346?\375\342\273\207O\260\343?{h\347\247\204\020\353?q\353!Q^\342\233\277\347\234_\317c\213\337\277;\245<+\033\214B\277\206\"\271)\251M\320\277\337\352v\322_\367\322?2\014\300M\241\373\277?x{\305R\311\355\300\277$n9]z\351\342\277%y4\264\3307\324?\262z\242\301/\362\305\277\255s\r\301D\203\327\277\337\005R\326\365\314\253?\262\252\302\377(U\303?\367K@\273\257%\350?\311\254\034qK\271\333\277\021\303\365F\007\261\263?/\327j\"\250U\312?\334\266\322D\\\340\232?zm,\306LW\274?5\022\350Z\302\355\352?\271\36295kU\355\277\303i][^y\352\277\214.\207\332\027\311\237\277*\212\345;\006\271\305\277\2472\353\227\345O\315\277`\363\351\331\306\210\303\277\362?\342\005,E\260?jj_E\331\343u?ph\243\037%\305\247\277\361}\301\276\274a\343?+\222\356d\355\257\307?\032\207\363T\035D\300\2771\010\207\026\3441\356\277?\324\312Amn\324\277\241\351\302Z\232\224\307?\001\362\005\300G\250\264\277]\004g\020h\265\315\277\341\tD]\006c\312\277\221\265\256y\311C\261?us(K\014s\327\277D\177\365\022Z\317\271?\320g\346\370\307\354\351?\352\314g\210\377\346\344?\335\247<4\325\206\302?\344c6\036&A\240?\241\304\311x\"\005\200\277U\356H\326\010\315\226?U\013\316]\310Y\262\277\263\370f\260\271Vb?\014\264\014h\301G\254?\272\205\317\240\270\234\267\277j5\323\276\366\353}\277A/\274h\004\372\237\277n\375u\302\252\372\221\277\267\355\260\371!\272\251\277u2\025j^\337\207?\376!\237\\\017\246\250?\017z\354$Mq\241\277j$\356\361N\327\245?E\021`\311\312\031\301\277h_\351}K\230\216?C\027J\337\2637\301?fC\033u\304\372\274?v\317\366\260R\032\206\277\275-\352\233\246F\254\277\347\353\265\244O&\256\277\370t9\320:\325\267?\"\340\306\214\316=\267?\251\367\300G\023\234\327\277\005Z\377L\341\373\301?Z\303}D\'\271\204\277\232\001\n\237\253p\272\277\212\030\240\014\225\027\275?\274]!\037\024\017\233\277\267+\201\"<\216\274?5\202E\335\364\320\307\277\335\351\n2\250\215\211\277\316\200\004\372\017\233\343\277V\274\333\347t\345\276?\014`\230\326\367\214\223\277\210\004\017\271\321\006\363\2771\204\3616\210\361\327\277\271\354Y\223h\241\323\277vvO\004\377k\234\277N\320\332\343\304\026\302\277\307_\311I\320\266\260?\034\242\364\010\326\033\252\277\322j&\331F\370\276?q\023egO\274\247?\247\331K\215L\272\262?u\357\006P\312\261\240\277\335\224\320lz\374\241?\264@\326\207t\305\271\277M\237\277\004jY\217?!,wst*\233?\340\256\375\310\264\222\302?puT\"\004\210\246\277_\335P\031$\372\273?}\177f\241\013Y\253\277\334\226\265\351b\265\254\277T\017f\342`\t\265?\211JvRd\256\262\277\177]\250Nx\215\322?p\3121\265\370uz\277\377&\021#\r\350\215\277\242\265\313\t\315\314\266\277\226o\332{\316^\217\277\377\342\377`\360\t\314?\3639\272\363\000i\320\277\325\272\t\251bh\310?G>1\321\"B\254?\3225d\211\030\376{\277\305-0\247\343.\310\277\353\"V \234\262\321\277G\210;S\300\344\321?\231\323\203\342W\337\313\277\255\247\200Y\205&\313?\311\\\227CbH\314\277\"K\230,\025\347\310\2770\307\206\330n\234\336\277i\001MC\353\033\253?\353ZH\tm\007\323?\360\310\202\004\r\247\310?p\321Md\331\260\260?(<\032\335L9\302\2775\310\335\312\004.\300?n\370$\316\266\201\256?]\334\263\223\372\373\210?X\004\255\204\330M\273\277t\344\232\275\321\240\264\277KN!\307\0036\251?\313z\337\340\230Ia\277\204\366&,Pw\305?\231\221\032\035\027\022\275?\310Lo}\243\250\272\277r#X\313SM\236?*\236\300j\256\265\302?)\223s\323\203\214\210\277\375:\314\324\373\322\223\2773H#>94\233?\355\247\266)\205K\250?\264S\201\236\2714\307?\337N\375\211b9\306\277^\260\230\013\367\303l\277\310\177OU\023=\262?\"\032SV\324\026\316\2770-/,\264\204\321?\374\237}B$\340\203?\\%\374\331\361z\321\277\242C\177I\000(\263?\310=\th\010D\306?\266\275\347\353\302\264\322\277\303\260^\223\226`\274\277\033\252\347\017\3540\301?\226xZ\216\200\032\241\2772\025\177\217\216\336\324\277\242l\225\360}\"\305\277j\310a\030\031\276\304\277\317\374\272\342d\031\325?},\234\3257\000\321?Wr\233\352-\307\325\277\201\230\016Le\276\236?\031\021\005\232,\227n?\271\001\243H\366\347\317?\342\324\373\304\273\266\316\277\003\003\354\300\216:\320?\223Xq\017\325\t\210\277\340\315n\325\312oo\277-\237U0\350\315\263?4F\340\037\033Q\275?H\274B\004\320d\300\277M\377-\246\274\354\201?\364\266~\253\257>\310\277Y\347k\362\303\253\332\277\342]\023wI\233\332?\320\255\370\261\247]\306?\315@\237;\311,\270\277\020\000\323{\204\211\322?\271\006\2424\021\327\206?\214\352\352\313\264\243\330\277\327\267\372R\337\371\305\277\"h}\235p}\304\277NEJ\211\245\230\321?\r\303\003k\010\204\316\277\236I\260\270\331\003\177\277\0367b\311L\"\247\277\003#\277\033\252\230\223\277\376\227^ba\256\253\277\343\013\337c\\ \277?C\332\010\317\021Z\312?\321\340\025\331\000ny?{V\330l\2510\247?\260\022\026\376\372\345\315\277.\206Q\205^\271\302?\214%\377,\350[\306\277\323\320\366mB\346\252?\274A\344s\334\331\311\277\375\301G\010\256=h?\306\343e\271\007\222\304?hG\003\361R]\275?\t4\200\233\320\013\277\277\364\332$\210\023#\301?\332\010\222\305\0221\341?\257\027\022\274\330+\232?\356\372Lf]\024\241?\233\307\261ZN\013\275\277a\367\357\324\377J\203\277\217tm\224\205Y\305\277\202\327Ll\274}\314\277\220pMP\222B\206?\265\005\257\302\017_\201\277{\2161\304\000M]?.\212MBg\235\312\277\247\370\3466\221\306\321?\277)\034J\244\326\301\277|\327A\3568\202\242\277\037\224\034\032\342\253\277\277\243\326\351k0\347\310\277\200>\341\353\316\261\302?\375\262\177\203\262/\261\277\341\223\342\tH\014\272?sq\020\020\265\205\331?\t\342W6\327\337\322?\261{\354\203\307[\254?\320L+J\177#\302?l\"L\'\224\001\223?\003\307b0i\347\253\277\013\240\357ag\317\300?\214\347\226\256g]\252?\213\346\315\322\356\226\272?\320\277\0354\030\212\261?b\003\331\345Ipk?V\244\372_\245\274\304\277T$S\177U\031\344\277\360\365\370d~\374\324?\031\266;\251\013\353q\277\203uX\237w\303\243\277\266\234\344\000\207\314\177\277\233x\222\213\350*\210?5\002\'0\3765\340\277\271\211\353EJ\251\272\277R\331\245\251\306\230\267?\313\000\013R\277\261\324?\217\222)d\032\237\266?t\214\323\205\206\217\247?(\327y\311\000\335\300?\330\025\255\222J\231\226\277\253$`\247\325\252\250?D\256\323\016Z\241\307?\350\352\254\214\270\214n\277K\215\310\022\207\315\271\277\224f\304&\250\322\242?_\205D\307\301W\322?\273\255y\3135\007\271?\n\225z\326\367\257\261?\322\272>\010F\320\265?K\002\361`e\361\241?\231o\202>\211\210\204\277\024z:\220(\213\305?\321K\376\353\313\034\307?\3647\304\005\374\027\240\277u\355\3745^\376\271\277\r\260(\311u\263\336\277\010`6Pi\017\250\277\010\004\201Y\002\261\266\277$-\022\254\232\023\271\277\253:\236\025\330\357\213\277\236\356\251\302\276\216\257\277\266\272\027\017\007\346\302?\010GH\231\314H\373\2777m\332\321\366\265\253?\224\255$\001\274\220\221?E6 #\304\231\367?t\275\300w\206D\312?\005\344n\360t\252\243?f!h\266\274Q\274\277r\271\005X\212S\327?\2366x#\033\337\243?\237\302$th\343\320\277\201FU\'\254]\250\277\201\312Om\275 \316?i\363\355.\026\352\327\277\t\2215\260\243\371\363\277\334u\026\366\262k\277?\336\265\317\215\300\375\256?\n\225\256\223\222\267\207?t\360\00759\236\262\277\240\352\0067\177\024\206\277%\004\266n\n\376\270\277hF\010\200\346\356\222?\313\023\202\304\024\001\244\277\241.\265\007\004\233\273\277(\331[;\243Fz?\302tB\321\351\001\306?I\231\334\233\233\362\301\277;I\240\301\353\377\264\277\000\007\225\366\262V\243?\211\357\2748\353f\256?\014\224\357\002v\213\312?S\242}f\342h\307?\253\004\200\220\222rr?\213c\233S`\347\206?\237\031\246(\245\367\304\277\214<HX\311L\240\277h\334jF\314\177\266?%R>\246L\001\265?\016\214\324\233\022\273\233\277q\240<\213\344\035\271?:w\252\332\234\316\275?$\021`\243\211\334\251?Aq\207\256F{\215\277h\276s\\\251\\\261?\006\212%S\223[\263?\032\377\377\'|\304\330\277\344\tGr|\300\316?\210d\231\360\301\231\302?\366\214\272)\205\264\243?p\351\021\307:a\315?Jt\237\270\304\005\300\277\255\333\t\337.&\324\277l_\266\312\001<\316?\333\367\027.\021f\303\277\324\3039\374\t\311\326?\334\222\375\0105\252\276\2779\037\203\024\363\006\203\277\273\034\002\036b\351\273?\310\2248\331\261\273\242?\010n`\267\337h\331?\210\010H6\020\n\303?\251%64?\373\304?\300\350\303(\331\307\221\277E\007\316G\352\360\300?\253\273\235\2356s\321\277\270C\004k\017\213\302\277\377c\312\3701X\320?\315\211M6_7\276?x\0018%VL\322\277\252\004\241\242#\033\335?\311MJ\234\207}\317?\360\353\035\317\344\357\303\277;\024\377\262&\314\243\277\177l\225\032s\263\303\277\232\256;R\027*\307?\253\343\245\"\200S\277\277\272\003}\277\230\255\304\2778\3277\204\206T\266\277\364\257E\353W\217\230\277\364\352\373\030+[\257\277IKT\275\255\177\235?\177\307\217!\302I\310?\215>C\373\2332\241\277V\031\356n\003\221\247?\240\001YL\335\220\315\2772\307\324\001\006\214\312?W\367\365\260\032\230\253\277kX\371\033\037\377\236\277D(b\3674\377\302\277\325XE\'i\251\254\277|^\237#\\s\256?\006z\027J\310\370\212\277\021=gBs9\227\277\361m\246\263\257B\273?\004@p\3615\314\336?\250\036\314\016\343\310\236?\034>\022\263\323\365p?\3158\370|\230_\224\277\331\232\327~\343X\240\277\377\333z\304t\271\230?HX\313h\351\205\263?\326@\327sR\264\254\277wC_s\273\207\265?\346\000@w\013\023Y?\367E\275\260\030+\307?\326D\334{\\\004\264?\024EYT\214S\266\277>E\203\323\303\227\274?\0137\324\231\260\007\301\277\3773\036D\337\223\264?L\001\373R\270\216\321?J`d\002{y\306?\363\303\304I\274#\274\277\002\034\271\321\376/\300\277\251:\353G\232R\331\277?\2737j\342\341\200\277\335{\233\314ZJ\t?]\'\341\001`\342\311?&S\312(\344\251\303\277\013\213\311\364f\360\227?\336\353\0103Pg\250?\277\021U\031\233\371\342?\326Og\033\370<\267\277\310\0332\264\2538\270?^\036c\324\002\020\364\277dG\003\204\253\'\214\277\014/+\213\232\377\205\277\310\324ro\270\344\305?\3702\r\322;`\226?\205\037\023\371\215\226\231?\000\350\366\256\330\212\240\277w\006U+\253\014\306\277\350\327\337\200\016z\255?s\366\354\345TD\342?B8\363\211\264\250\335?\306\250B\310\245\214\304\277\\`P.t\225\262?\226\212\233\201h\334\317?\316\201\331\377Pf\252\277 \347\201\354\366\375\262?\272\0004\'\337%\316?V`qB\240\203\300?\241\0141\200m\345\240?\246\326\277[\301\314\274?fvW\201\271\323\261\277\324b\032\364D\330[\277\324t\307HqU\232?\275 \371\331\375o\265?\202\301\372\033\210\204\337?\213\357T\304\342\212\301?\231\353\314\'r\367\334\277\372K\352\t\213\270\324\277j\247\334Pgw\271\277\034\2550\203\373V\303\277\262}\345\245\351N\262\277\225\023\013(\007\n\272\277\242l\3563qQ\307?\376u\334m\211m\324?\004\000u\241u\016\277?\017\270\245z.E\225?\312\214\224\212\331V\325?\014\277\020\250\357j\345\277\007$.Y\303j\300?\237]\262\226\273\251\263\277\227g:\260\n\'\344?g\377\013\372\334\202\335?A\3702\273\025\345\307\277\330y\377\245\350\272\321?1\377\314\221(\035\261?:\261\211\355\310Z\333?\354\021\333zM\233\317?\350\211-\214\211`\355?\212\272\355`\032\020\274\277tX!\256I!\360\277B\026`\307\307\270\346\277T\310@kz\356\254?\035K\373L_P\302\277\377\302\256\202\241T\321\277\002I\2524\250N\322?b2\371\336\215\247\275\277\330^\210\244\265\330\311\277\024\200\321/\351e\263?RQ\216\325J\225\314?#\013o\333\337\244\307\277\315n!\343/\374\207\2779\253Ew\3776\311?z\312\207\251\001\312\245\277,\307\024T9\267\305\277\254\001\275\325Z\320\323\277m\026\210\210D\352\320\277\037ti\273\256\362\330?\313\t\033\177\330\356\325?\266\361\335]\372\221\314\277qg\332A\304\312\222?\000+y\271!\000\256?\263\375\246\032\366\237\303?6\363|\026\247\335\312\277\000\274\234\327\231F\250?\257\336\227\036\242\006\326\277\r\310\255\n\331\312\310\277\2465\037\343\323\347\312?`\302\237P\333/\355?\'\325\357\230\323\'\321\277\271\302Y\245\0067\306?\333\247w\240|\337\362\277\262\014\322)\360n\301\277\377r\334`an\327\277I\272dm\357\307\273?W\306\322\2051\251\253?rH\034\007\217\177E\277e\2344f\303(\307\277\242\254\315\212\236\035\333\277\327N\267\'\000\206\313?\202)j^+v\347?\371o\230\252Z0\327?\230B\014S\033\026\321\2770G5\034KO\335?\022\tw\255\320\020\326\277Ht\177\365\004F\335?\200\356\n\343\347\214\331?6a\336AR\231\301\277\375c\004\313\326\351\266\277\260\033\010\326\233\002\336?Nc\302\336\305\303\330\277\0079\320\304G\207\301\277\3557\305\206<\031\341\277,\203-\360\336m\330?\325V\346\303\005\016\334\277X-z\222\026Y\334?M\320\257d\005\233\313\277>\331RT\340@\341\277\366\002\216\'\003\033\341\277\276\331\324\241k\351\200\277\334\235\362\006\307\300\344?\257/\327`X*\205\277C\245\231\005\270(\330?\361\275\361#\344\037\326\277\316<\035\337\304(\347?\027\033?\237\331j\343\277w<\211\0203\026\307\277Y %\231\363!\342?d\230\316\202\342\246\244\277\331\007\374\215\036\317\330\277 \202|\346A\234\330?\357TC[pO\327? \037\330PY\020\323?\2674O\200f\236\324\277\254HW>&\344\340?\241\027;[\007?\340?\302|\302R8|\344?\244\344\027M\247\037\331\277\361L\3734\366\215\253\277\236\306\224o\033\366\340?\350\341Tl\204\304\340\277\202\034-_V\251\357\277\272]\300\026\271\263\341\277>\363\225\210\322\235\343?\270GD7\357\236\266\277\320H{\001\326\025\304?c\235\315d\246\013\254?EtP{Cl\270?~J\303;G\352{?\335\274\333y\362\027\300?\030\376G`\377\221\303\277\254\020:\032v\315\304?\355\036\022W!\304\311?\350\302\\\200\274\240\306\277\004\365\264\254\\\260M?\000\216\014\252\276H\305\2777\023e_\017\331\266?\273Ts\316\005\033\310?\244\242\232\335;K\322?\215\230\231\034\2714\213?\021\250a\320\340u\307\277\273\243\252\316Oe\323\277\210\232}Z\021\331\267?\276*\322\277\345\022\225?8\267\353\311=0\302?\017\347$8\252[\304\277\022\376\202\335\277\322\300?J\350\335M\255\322\261?J\020\344\235qm\305?[\014\345z\016\243\267\277\324HR\231R\217\300?o\224\331@\303\360\326\277C\005\266\3207\376\265\277\267r;@\001\350\271?\305\372\260e\354\343\255?a\357\n\260\365m\322?\002.\253\341\254x\265?3\315\014\344\270U\324\277\345\022\235R\245\t\324\277\353\331\247\361`0\275?\036F\350<\3071\321?d\377\231\314\n\216\260\277\224z]Z\272\227\310\277\353N\340\007\354z\304?(\362\006>\026\246\261?\214\321\0036v\026\276\277Xlh\005UC\253\277\315\331p\303~\035\303?\340\017\016\031#\261\315?\224\017\270,\312#\226\277\366\"v\342\331\002\274?\357}\r&\350\264\267\277\333\010\024P\313\254]?))\214@tn\305\277\230y\223\202\366%\265?h\003\362\236\361a\326?\247\353\264\340\202%\261?\3737\320\276\375\366h?Y\017C\213\353\241\304\277c\364\t\366\263\207\304\277D!\275\362$\330\244?\2415\312\340\312\324\260\277\313\344_z] y\277\210\351\201k\374\"\322?w\217\\S&\032\327?\201\200[\324g\335\315?\017!C?\256\307\330?\3300\240\326\025\225\244?\001/\364\371\"\037\364\277\022t\353S+u\246\277\322\2164\240h\337\267\277\210\"\222\226q\272\375?\361\271\263% w\340?\2754\357\030\371\023\315?\031}\221\026*\021\274?\t\024n\246\343J\356?$\364\375x\354\367\307?\223x7,\027\364\333\277\021E\342\177+\244\352?\347Q\023\302\2418\351\277ef\371P\321\345\001\300\353XA\017\235\205\353\277\360n\213\034\311\200\255?M\363\246>]&\333\277%\275\001\272\267\234\232\277l\\\241~\203h\317?\276\316\234\273\\\277\252\277\336\221q\222\325]\302\277\357\331\326\223O\030\275\277\207\2038\032\301\256\277?~\251X,c!\274\277\350\245\000xD\032\316?\375\315o\ra\241\304?lu\021Y\364A\304\277\225MBd6\271\300\277\231\322\200>\347\340\306\277\314yn\004s\330\231?\247\227^\376\267U\305?:9\377\333so\322?\366O\206\025|\032\306\277w\023J8H\316\300\277\032X\202\010R\275\325\277,K\327dVg\313?[i\233\n\3670\310\277\"\324\003\241\355F\322?\022\356!\214A\235\300\2770\310\374M\007\005\242?\214\037c#\266x\235\277\354=\301\271-\ns\277\'\005[E\241V\317\277\366\2444\007zv\275?Z\032!\313\022\360\274?U\253\020\031\240\223\277\277\243\'\215^m\366\223?\333@N\016n3\273?\265\247):5L\314?\323\362\031\246\332\370\224\277\177\374 -&\315\330\277\271\250\032Eb\244\333\277(\026Fj\272\r\301?\010\310\317\272\2776\321?\201\342\337\327\240\333\236\277y\214\225\232`:\273\277i\265T\302\223\335\315?\220\356\375\315\370f\337\277)\355HB\351#\336?\377Y\017g\247H\351?\375\305\313\274\307\235\324\277\325\226)\362u\001\260\277\337\323s\200\262\"\330?\360X\223\236\260h\325\277\265\272@\2177\014\326\277\336F \r@\014\343\277L8\232\253\245f\346?;\324\'\316x\310\340\277N\214\342>\177X\321?\357\241\250\333\373\265\321\277\210D\307\345\347\303\343\277\261\215\265\303\n\321\346\277\321&g\354\316!\242\277\3717\227\272\026;\347?\251!j\300\263t\257\277\323\264\242e\033\233\334?\232\200)\007\032\230\340\277\277\265\021#\014\360\340?\022T\177\376=(\333\2773\315\347UC\302\225\277h\032\363T\263\315\326?\0006\267c\362p\301\277,\355\"\370\272M\333\277\206\3133\301\303\255\327?\275\316\377~\262\216\327?Y5\0339Y\215\276?i\267\356hm1\301\2778\3773\331Vz\333?\227\205&\r\337\232\340?E\206\373\355\217k\346?d\351\256\214Kv\335\277\246+\346\256\263\025\303\277\354\273\271Y\213\"\341?\257\264\362v\224L\340\277\221\265?\016\207r\346\277\205\362\312\213*2\340\277\373\335xDN\020\330?#6\231!\244\203\310?\223\331\236MU\363\305?\321\352\\()\n\272?\242\325P=J\273\273?A\341\303\276\204\025\271?\267i\354\330\010\353\225?\006<1\005\030\303~\277\033\221K\372\233\362\321\277p\356:]\245\202z?\255E\324\360x\367\253?\264\213N,A\353\260?\352v\200\331\306\202\327\277\327!\243kp1\312?_1H\257g\255\305?\230\206z\264\360\213\263\277\311_\316s\351V\311\277\026W]\332N.\310?;+\227xW}\326?a\320\031\372\317\205R?\251a\225fo\327\323\277T\2354df\356\263\277\345\376\314\230K\314\305\277\315\".\252}\272\315?\233\367WP\240/\265\277~q\215\036\353\327\331\277\277m\330\320ec\320\277P\347\251\317$9\263\277\0005X\363\006\233\321?\200*:\334Rh\306\277\213e\025\272eX\323?Ny\335\277\346\365\320\277\0362\230\320\350\371\324?\027O\207\343D\324\225?\375U\032+\021\365\312\277\004\323\214\003!8\317\277\005\022\317\221m\307\316?\0333\3270\223P\323??\020\033\323xa\323\277J\302\203\372\367\221\312?7\222\243\360]\314\274\277\242\265\311\341o\302\306\277TrF\232\367\020\261?N\351\342\324!*\307\277\243X\313\251\242\033\250\277L\215q5\260$\251\277\231Q\340\272!\007\272?+k\372\346F6\313\277\217br\341\233`\317?4\362\275j1U\313?\336\344\027\326\227\366\305\277o\310\0036\004\350\306\277ek\364\224\031\231\264\277\034\340\375\017\224M\232\277\376\024\005\006)\301\263?`\021\034\242\373\273\325?<\ra\'\266p\273\277\032ue\233\350e\335?\265)\274^\361\007\300\277\340\326\330\346E\373\265?K\000\323#\3676\301\2778\224O\276I\207\325?\313aU5H\273\326\277*Vh\336\345\336\312\277\331\377\365\036(?\266\277\0042\217\261\036\206\275?\256\rD\341\354\336\307\277\274Bo\264Mp\323?\331\210=&e9\267?G\270\213\217\324\372\352?\324\364\226Y\320\364\350\277\217\364\034\224\002f\316?\233g\375@\215\327\312\277\355\343\317\'\006B\213\277\316\024\367\251\\\276\334?\373\t\212p\256\031\362?\324\210P\223\330\006\345\277\242SE\204ys\350\277\036\2305\271\2031\301\277\347>^\307\t>\334\277\206E\021u(\322\332?}V:\003\357@\230?\344q\255\360\373&\274\277\273X=!\247\210\263?\361\311b\223u@\270?\3744\000\367e\t\314?m\307\231\273\024\265\234?\371\277J\t\251\267\277?\302trD\020\300\316\2779L\210i\237\335\332\277\272\003\212ni\023\340?15\022[\341X\265?D\230becH\301\277?\275o2\205\221B?\340N\020\222\243D\302?\006\266\017\213\255g\331\277\375\263\263x\2479\307\277\314mbZ\215Wy?\276\376\335\010\030\r\312?\177[\312t\247\022\245\277\373S]g\353t\265?\206jyO\323\203\323\277\372\221\220\210\316\256\330?~\032\014K\377\'\340?V\033y\346\302\233\301\277+U\214\377\222\241\305\277\024\025YJ{B\330?6\3313c\005\265\327\277\317\000\007\005~\216\315\277\363\244\2028Q\224\341\277\010\250G\263.\014\332??\317\354\312n\252\335\277\252@8c:h\327?A\006\364\"\321\\\315\277\343\346)\242;!\326\277\200tP1:\324\344\277\035\366\004\331\350\177z?\354\300\236t\255\240\346?<\nHA\235^\255?9\314\263\032Lx\333?\rO\307\340]\231\333\277\017\301U\257u\202\342\277i\004\330-\244\020\342?\351dxLAX\316?\'\333]\310\356g\343\277\251\260\315$\276\335\326\277:\275`\312\rJ\336?D4\010\010\342\243\331\277\326\r\301\315\202\251\346?\365\022ixl\375\331\277&n}%\343\310\332?)\261!amq\346\277\336\t:\352\213\032\330?&\247\233\017=\005\353\277vD\254\316\313 \337\277\035\241\223y\274e\331\277\036\214\216\003\027\207\272\277\372\220\2654\347x\315?\2605\245G\301\027\347\277\203\355\027\335[\350\341?\313\024F\346\307\361\332\277\306d\251\0132\256\277\277\n\365\'\032tj\251?\356\225\361c\376\007\273??\243O\237O\241p\2772\204/\003\320\030\275\277\351\240\274\016\017\272\277?\2420\204\242<f\273\277\260@3\025\037\036\317?_T2G\234\365\263\277\030\321\303\243&\210\306?&\377\256\t\251\323\244?\022\027\220\334*k\203\277\232\274!\254\t7\307\277H\322t\001a\004\267?\247\014\264\272\340\003\274?\337\215K\0262\033\263\277#`j\275\205\020C?5B\322\367\364\"\325\277\214\367\205y\267\004\263?(\004\217\277\316Q\254\277\352\243\341\275D\221\302?\222\214\366.\016\341\224\277\270\177g\331\027\n\326?yZ8\321W\020\250?\207?A\354;\222\300?\001JvR\014\350\244?\337\222\362%E\033\237?\002aeA\373\314\310\277\301N]t\001E\255\277\305\264\323\020\244\222\270?O\260=C{\262\265?\372\212\316\222\364\332\251\277\315=\266#\271\214\300?\327z\275\205W\255\321?8\021\261\000\334\317\224?F\227H\2210\245\324\277\301\377\202\247\'!\277\277\354\270\240\035\346)\300?i\336>h\210\021\256\277<\274\335C\350\375\326\277WT\025\025\3014\301\277\022i\237\375\373u\261?(\3668(\232%\236\277\361\177X\343W\261\261\277F\256J%\334\307\302\277\027\343=\214\022\205\261?\000Y\337\233Z\315n?\213\t\030\363\235\n\321?$\303\315[\240\274\234?\255*\372\020\251j\273\277\372{K8\247&\301\277\215\202{\366T\366\262?\000uZz\024\262\242\277\251\r\356\274r0\224?!\350\007=\272\311\273?AZ\363\006\375\205\233\277r\244^\334,\260\321?\246\177}<`\001\320\277\2465\265d;{\306?\245\023\235\3209\266\234?\223\245\033\001\324\256\316\277\036\315\nSm/\260?\324D\216\343\200\357\235?\033\333\322\323(\217\304\277\005\256\341n(\310\263?z\223{%\313\200\315?\244\242\360\352\242\270\221?l{\255*Rw\255\277\274\245\373V6\245\307\277[gj\277\217}\326?\306\272\250\026\037\274\320\277\352+\002X\225\302\303?\324\275\342-\302\340\274\277\335z\362k\270\336\253\277\263I\275\307\014\377\325\277@;\321\346\212E\262\277\243]d\3047\033\305?\272\021\335\341`T\327?\274Cv\350\257}\265?L\210\224\341\213\372\275\277k\243\027\345\374\360\347?G\021\213t\341\365\355\277\033\236\210\333S\201\364\277\236\223yu^\225\346?\306\317O\000\341\033\364?\247\340\000\303\313R\356\277\257r\357\260\021\332\357?al\361\362]\226\362\277T\3318\330\235E\360?\3623\312\211[(\363\277\306\311\377ww\267\350?rB\'o\323\312\365\277\007X#5 \376\340?\250\277\362\216\303\263\365?#|\005\005\241@\361?\224\271\346\257\230=\314?O\365\246\035\304\376\360\277\274\021\271(\360\261\320?\313\223\\\230\337\231\354\277\304\234\2422\360w\360?\230\355\371\021[\357\305?\232a\270G% \243\277FiQ\277M\005\214?N\\o\247\224B\307?\321w_\022[>\320?\323\356I\027t\241\251?\330\217|]\032\211\273?z,\324\023\013\360\324\277<C\242\320\274\350\310\277\032\341E\317i\200\340?\270\003\376Va\037\307?j\014T&N\376\317\277\351\217\003w\306\311\322?\311\177d^\213\206\302?:\311\027:aW\331\277@\341GW\307\331\241\277\250&\024\237\333#\261?\320\000;7\372\374\310?NF\242\032#\251\303\277\250\243\276P\002]\320\277\016\361\355\234\215R\332\277\000f\221y`/\323?0\323\330\2175\215\306\277\336\006r\205\356\234\243\277\257\240q\005\265`\314\277\001k\307\251\010\365\312?\200\227\211\001\026\263\300\277T\375\230\355w\222\307?\220H\371\262n\360\331?\2463\251\3621R\326\277\267~\273\035\223\376\324\277 \t$\350\n\204\253?\211\263\264\'\347\030\324\277\274_\214\235\343~\311?\252\343\376\007BY\320?\274\257\245\312\016:\237?\273\210\315\234\027^\334?\2430]\327\271\357\326\277)#\032\333r\311\321?\014\364$\030\350\270\270\277d\235\023\212A\321\215\277\364\027\263\\\361!\262?\365\036\254\212\034\265\340?;\234\031\0249U\236\277x\006\014\366h\252\330\277\202\263\237\223\301y\310?\324\232V\255\277\244\311\277_\013\356\254\200\340\347?b,mI\325`\332\277\032U\005\000k\356\334?\2568O\274\263\232\222?\354\n\266o}p\331?\253]a!\000\213\321\277\'U\254\300\245\032\340\277\223\177D:\246j\342\277\316\267\362(p\270\303?\350\335e\223\010]\325?\301\350d\265\206\351\355\277BW\361\376LA\310?\035\215\274\013t\330\326\277\360\311\340\005\266\177\245\277\002\263\372_E\025\262?\314)\313\312\276\354\233\277\2522\346\356\331\026\305\277auqGH\362\274\277\311A-\031\350\301\234\277\246\304e\001\232\342\241\277\302\206\323\r H\305?\266_\036kU\013\304\277\025\324BeMU\305?\242R\377\342\343\330\312\277\371\330\001\321q\375\255\277\t\333E\006\337\033\277\2775\034z9Z8\271?M\343R\305\204p\313?\364\260r\362E\344\232?\017k\267=\345\206\305?_^\352U\275\r\322\277\370y\014\231\244\326\256?\323\331\243\342y\253\223?\202p\261\312W\267\204\277\200m\337\244\304K\252\277\205\n@\004Np\255\277\346A%\001py\250?\262\231a\223\004\230\311?kY\337{\307>\232?\212>\224t\233\353{?\234oq \352\235\305\277 \000\303q\331\033\275?\2763W\330\244|\301\277zM\234\010\270\254\266?\247Q\016\006\023\237g\277&O\256wSH\305?\245\204\3139C\000\232?D0\203y[3\301\277\276\312\346\337\301\323\312?\221\261\326\r\324\330\314\277\000\324t\213\302\023\320?)\323\336\345\342*\216??\330\2432\237\313\260?\370\202VC\333T\255?\206\245\273\254\\\361\255?\t\313\005s\331\303\314\277piN>p\314\333?U\263\206\355f\377\311\277\216e\2109\243\233\304?\000\311M%\215\024\271\277\0029\2320%\364\320\277\311\317x\233#\323\342?\313u\252\305\253\221\341\277_n\362\014\337\237\241?\037\211\336mQz\304\277\t\032\211\265\336\002\344?\265/\235QV\200\310?\023|\014\217i\352\341?\001\340\321\027\242\300\334?\271y\305\".\206\352?\265]z\267\232%\311?\313\276\327AP\250\253?\242\177\253\335\303\343\227?\277^\371\0304\341,?\332N\246\213I \306?\212Si\342%\251\244?\370\340\t+\034\213\243\277o_#m\032`\305\277\272\207k\253\231\270\256?\312\377o\036\337$\276\277\\\374\277r\314\307\334?s\034\366\323\307Z\314\277\270Y\344#\020\317\304\277\037\261\017\207\021\357\267\277\373\211\240\312re\321?\377L\007\016\214E\275?\2274q\356.\267\276\277e\221\260\304\274\t\324\277V\036\307$\333\212\312\277ST\000\2106\376\336\277\323^w\371C\253\336\277`\370\302RJ\017u\277(\312\362\347\354\247\271?\331s\320\257\366\331\312\277{/\224\375\270\376\300?\250\271T\236}*\244\277\201\275a\001\tP\270\277h\205\225v\034\243\345?\332\r\345\325\374\t\314?.\371r\256\016\005\271\277\350y\365\037\234\016\361\277U\214\2739\344\036\324\277\030\320C\240\226^\260?\262\222\253\252a\031\233\277\316\335\211\377\357\241\326\277~\020*\316\316\362\300\277\234?\002\357o,\273?\020\025!Tu}\330\277\261B\371\3063\364\233?\225g(a\357.\350?\216<\3259\007\323\352?x\305DJ\372\230\305?y\305c\023\345ah?\300z\\\2752\367\234\277\300\034\300\214\242h\261\277\222\265\216m\213\255\304\277u\016\242\204\3314\311?%\030f\021^\033\314?\')5\212\361_{?\375\372\220\227\215V\246\277\013\253w\251\215\252\320\277|\210\264\251\335\350\212\277L:B\004\014\377\306\277\227Gk0\216.\205\277\177\334$\235\0067u\277\016\270\010\331\341L\264\277\036\023\271\'\277\323\300?\331_\271\306XY\305?\263\301\320\240\026\020\250?Ne?\245\225\313\315?\020\01643\030\022\343?p\311\203\343u;\257?p\275\223sly\210\277\022m\326}i\004\344?\307\203\006\251\256\024\341\277\331\254\311\237\235\267\306\277\025\2513BE`\345?\005l\250\363>9\274\277\321\2472G\034\333\332\277\354p\000\247)\317\337?\377\037\373\000\336x\325?\376c\344\'\234r\301?\313\363\253\006\236\352\322\277\346\n%\276\236\220\330?\007a\t\032\024U\342?\366\004\253\366\362=\356?>\031=\203ne\330\277\332\261\002G\323\361\301\277\272\267B\233\226\321\346?\320\003\024~\321\206\344\277\"\0009@\252`\356\277O\274Vz;s\336\277T$\031\214\200\226\341?\005dG\306\201\256\304\277\206y\216\232f3\222?\266\203\237\'\242\307\225?\335\344\2151\201\370\260\277\343s\212#25\300\277+\030\361\236^\224\300?\236\331@h\033M\263\277\240\310\220\334\377a\304?\373m)kx\312\305\277\326$\370x`\n\312?\241B\302#,\031\305\277h\2144\340\325w\264?\026\203#\245sZ\267\277.\275\216)ZT\250\277_\251B\2106[\277?\363\213R\232\204\032\262\277\332\260|x\220\024\240?\2769g\313x\014\310\277%\216.\273\235\370\251\277\020\266\351\300\035\226\240?D\362\370^T\215\302?\367\301\'mkM\261\277\n\263\3018\263\202\275?B\307\220\013\270\264u?$\216\r\325Et\311\277\030\257Z[\0067\240\277\352\360N\374\232\230)?\323\326\260pE\312\333?<\227\311K\340m\341\277*\254B\317\020l\306?g\367e\266\231\324\247?\267\342v\340V\355\323?b\360\031\036g\237\265?_$\207\222\023\207\330\277\331\272\373X\270^\360\277/\236\330\243\217\301\225\277C\251\311\363\335S\351\277\004\033\370\025\302S\360\277v\356M\364A\025\255\277\261\025\246g\234\246\255?\027\321\262^\241\256m?0\t\271|\365\376\256\277\262\324%e\020\224\273\277\224o\026\265|\377\264?\231f\3704\233\246\321?\225G\217b\231n\247\277\004\024\t$7s\255?\263\237\362\324V\034\271\277\360{\373^q\364\216\277\3703\003\234\010\277\304\277w\327\305<\371a\241?\251\312\233d\267B\223?\200\303\302\005\347\326\204?\304\333\217\261K\316\262?\017\036\266\370\341M\310\277_\022\251\322\365D\267?\342\313m\314\\\265\317\277o\016E\341\363\022\272?=\017e\224\276\177\275?\224l\0340^\272\264?\035\0071\006\330V\311?\323,O\203\037s\244?\222\352\223\322)(\221?+\221*\206C.\251?\241\177\266 *\026\235\277\003\374d2H[\267\277\3410\2462r c?zB%\026>\260\320?\304$%\014dn\235?\207\320\232\323X\361\271\277\031\263,\017\2575\253?\370\312\025\247t\"\301?\35649\',p\300?\277\254%I\272Da?j\300Z\362\'\003\252?\327\030zlI\360\271\277\210[h\360\220\020\342\277\376\267Y]>|\346\277\017\250#,Kp\241\277d7\023)\273j\211\277y\362NR\264l\201?\267\354X\225[\343\254\277\276\235\306\227\274\320\304\277\317P\264\375\261x\314?q\253\276t\010\274\321?\335\221\271\024\220Ov\277F\356\364z]\354\303\277HJ\251\246<\242_\277\240\250\363\364\033\225\260?\024\245\005\033\376t\311\277{\356\263J\200\035\244?\266x[\376\332\242\213?}\220\267Y\003\305\312?\265NE\336\211\214\246\277k?\245^\342\017\273\277\324\206\252\331E<\273\2772\315\257\234|\016\314\2775v\376\265\336\231\322?\002d]\035p\323\267\277\241\267u\322\005\026\303?\246\201;\203&\232\364\277\021e\037\227\332e\361?wm\321\'\016\370\347?ru-\\\267\341\365\277\337X\023/iv\314?\315\2456\262#{\354?FY\276\346\027M\361\277G\177m\271\010\223\310\277\205wez\032\023\365\277\304\300\352P\246c\354?\272\257\340\351\346\336\356\277\333\304\263\350\215\303\320?\\q\243\036j\236\360\277hv\230tHM\344\277c\333\362\371\301x\356\277\246\245\215\177\257\341\331\277.B5}\013n\377?\340\242\263\020\014\026\004@\2465\016s,6\357?\253d\023P\316\270\351\277\n\332d\217 \223\251?\\!U\364\026\205\252?fz\031\231\257\016\272\277\203\236@t\203\346\300?M\357\237\004\223\340\321?\265[\250X\215\206\245\277\273\315Pl\027\224\232\277W7\0252\204\034\320\277`\265\225=\275\371[\277F\365\322\352\254\352\276\277\311\377\217!\254o\222?ZL\273>)\312\250?X\215I~\270x\273?\\\212\240;e\235\271?A\244\314\256\240\276\240?\340\307\337\376d\220\315?\200\223%h\223\323\241?D\010\300U\376\031\334?\021\300&\213\2677\246\277\323xs\320\304Z\265?x\245>N\336\377\237\277\340\264\016\342\217\335\271\2775\222P\001-vv?\242\206\255*x\260\316\277+y\357\000B\030\303\277\335\\\031V@\377\214\277\210ey`\023$\300\277\276\0055\025j\353\331?=0\0044\021G\321\277 \362W\336e\275\314?<^2IG\033\263\277\255\0164H`(\313?9\361*\231\027Z\312\277\2229D\001\371\366\277\277\374\001\204\241\337b\326\277kr\006Q_\004\336\277J\035\220\013\303*\340\277y.\270d\365\310\345\277j\356}\031;\303o\277\223\353\236l\207\307\216\277\200\200\251\253#\261\200?\2721<\t#\257N?\224\327\032Y\350\217\261\277\337\203\232&\342\315\304?\037\001\361\235\357\220\264\277w\240\300\366\014\275\254\277#Z\255\216\315\357\261?\225\307I\250\363\210\321?\342\005\242\302\271T\322?I\207A\231\177d\310\277\346*\021\230\211W\253\277E\023)*\331\024\252\277\251\340f\330\365\346\222\277n\372)\203\345K\272?\275(\240s\315\302\341?\247\3365,\240\317\264?M\"/H\262O\307?\251N\266\357{)\304?2\022\251Z\220]\300?8\307\252\323\224Y\252?Fl\356\221\207\361\270?J\266\003\275\204Q\242\277\210\226\330p\351\211\265?\231;\035\353&5\253\277;\320m\371\327=\300\277sX9\231\325\235p\277\024)\203\215\025o\262\277Y\021\221\201\024\026\325?\273\307\304\330\315O\334\277\342)\250\372\352\035\221?\220\236\337\n\214\235\241?\345\276\035\370\330#\302?\340$\300\365\253e\224?c\356\323\250BL\314\277\246\307\253E\316\\\357\277\333gkpqw\276\277D.\232a\341\244\322\277\277;\3370\204\235\353\277\017\310\346\331\256\235\265\277q\255\241\265\374\236\250\277)\251\377Zc\027\300\277\271m\3022x\347\233\277\277\353\010\002`\357\320\277\354\221\001s>H\267\277)\312\036\315\005\254\323?y\273\020:\201\267\212\277G\003e5\024\366^?\226}\250\321\365\343\321\277R\025\037\337\236\017\326\277\243Y\271\033J\224\304\277\0300\321\263\317\365\246?R\003g:\231\'\270\277B\027\006i\203\346\254\277\323\356tn\030\234\303?\351ir6\347{\314\277\334\353U7T\344\317?u\276\3045\337\203\313?\360_\267\350yd\333?y\000y\314\305\304\264\277\303\027T\313\344/\320?\347\277\235c\237a\331?mW!:\254\355\311\277\032\231\342\013\027\037\357\277O\"g\356{\037\325?\335\010:\377\010\322\267?\033?\377\037n\255\331\277+\311\243\3018\024\332?\025\344[\301\274<\300?\002\035N\304\315o\346?\221\034l\322T\025\347\277\240\023C\204\351\301\337?`A\240xa \341\277&\032!O1\t\336?W#tdv\325\347?R!\021\374\251\357\336?\\d\305\353u\355\301\277\302\004\310\205\310[\334\277\1770c\327\307\306\344\277\376-b\300\241\003\333\2771\3616\334*\027\343?\247nl\224#o\215\277\020\177\260:T\014\243\277\324F\215\325\030\207\301?;\233W\362\366\332\261?\317\002v\227\371\025\316?\306iq02\355\221\277\377\272:\232u:\255?\320\260[\351\302\'\253?)\227\225\314\026\255\273\277,z^\340|C\250?\023~\324\032\225\357\242\2777?\222>\025\347\276?\010\301\205\256\310\244z?\301\215\315k\350y\227\277\232b\266\004\256\200\334\277a@\325]i\250t?\305oS\211]\t\336\277\223z\332.\016\352\262\277\025\003\362H0\t}?\014\022\254\0373.\263?\352\246\370;\333)\243\277n\324\025\372\t\250\314\277x\375\256\213N\016\260\277i\357\311\211\0340\253?JRV\375\324X\326?\205\200b\345|z\263\277\005\247$\364\036\262|?~\023\260\353\335\330\337\277b\346\314fp\316\320\277\305\002\301\261\367\237\260\2770\212\240\365BA\267?\351\252t\327`\362\266\277\330(\270\364f\250\232?\006\347R{\177\341\270\2772\007-S\221~\265\277\322\226uW\237n\327?\313\'\027]h7\346?\201\230\030\t\005\200\342?\024\t\263\3340a\270?D|.\006+\255\315?reI\177\320>\313\277$\244R\270\311\r\304?1\204\010\361\245\'\252\277J\237L\330\014\264\301\277\241\334\307Alt\242?\235\335$\330\027H\203?\327\363\202C\251\317\260?hVBz<\330\304\277\364A\00177\314\271?\221\'\024\302K\357\262\277(\263:\361\265\213\250?\351g\273\214\264~\271\277A\313\035\014\204\304\300\277\254\333\377sW\322\315?wN7\233\352\374\262\277\255\214\r\251pL\251?_\\3\245>\345\332?\333\005\210(W\271\322?\010lUr\2724\212\277\026D\243\261\272\240\227??4\257k\366\355\242\277@F\3744\'\004\300?\315\2209\205\234(\301\277Z\026i\357\251\262\312?\334\001W\305\360h\237\277u[\244\302\374\"p?\265\214\273\264f\254\252\277\0143\303\316\211\232\300?;\017\277\344\235r\303?\311Q\225\201\267{\277\277\324F\254<\201zt\277\204\221\353O\351\276\302\277\373\022\243k\206\224\272?#\213\021w\370)\303?\211\010\010\371t8\311?\331\220X\023\3250l?-&b\373\262\007\311\277\375\266\335\276AB\310\277\216\023V\231\221\313\237?9\226\023\354\036\244_\277\350\350\314G\001\276\303?\343\224U\r\225s\273?l&\361JM\272\323?\322\027\253\250}\352f?M\252\3540\337\330\250?X\246,OVDm?\327xx\322JM}\277\030,+\202\262\034\304\277\303\242\347\333Vq\246\277\026_\022z\002=\251?]\266Ez\2668}\277,\262I\323\207\\\245\277\266\303\325\034\375\241\301?U\213\361UW%\301?\006\036z\361,?\234\277\212\272\202d\330\252\314\277Y\354,?\" \271\277%\200\363Q\274A\262\277\312\r\034=m\225\260\277Co\010U\242!\317\277\372A\245F\220\345\253\277EU\274\274\003Lz\277\303t\233.\254\343\300\277n\325\271v\273Ar?\001\376\332\034t\343\320?],\305j\206\262\254\277:\201=0$B\255?\375\376g\037\0368\311\277&GZ-\273\300\215?^\341j@\316\360\310\277\'\215K%\354\313\272?P_\356<e\031\242?Wqd\023x\245\243?\232\271Pm\202\377\262?_\311\'tb\374\272\2774\247\232\025H\024\316?\260\340\364\334S\021\323\277\343P\312\030;\032\275?\305 \347G\177{\257\277\3714w\336\233}??5Z\245\254\315\365\265\277\022\302\226\310 \t\256?\016\247;\214\327\224\321\277\333\220\210\260\345\017\236\277W\233\023\272\305\206\307?I\252\037\203W\347\264\277\353\036\007AE\305\200\277\254X0\226\216\327\341\277\346\344*5\261\n\302\277\261\034#\221\002\311\254\277a\3269\003te\270?\031F;M\023\356\316\277\326\n\246\257?\n\263\277\004\373:\330\216\200\315?\366\217\223\2258\307\326\277\257\024H\023\264f\331?\005\024uL\225\352\344?\374\343X\212\366\375\336?\004\343\303m\204@\204?\n.\007\356\215\265\313?\353^+\356\010\335\267?\211\314\333pE&\270\277de\276\031\332E\234?G\217\010\276\336\214\300?\212\306\350\004jM\265?\301\323 \301\017{\243?\2634\357\365I\006\302\277.\016\341\221\022D\275\277\240\266\343\355\000g\267\277\375rF\377T\032\256?\334\335\315\266\347\030k?\324?\023\017ta\277\277\247\223E\265\375\241\246?\2173I\256\217=\272?C\312o\300\223\022\340\277\217Dsa\306T\304\277L\322\224\024-A\305\277b\245\203\224\320\344\300\277}\014]n\370\273\230?\362\251\034fF\230\300?\342O\033\311\261\205\316\277\202\021\245\243=Z\305?,\017\351x\251?\304?\016y\206\300\307D\236\277\327\227\2151\343=\302?\210\037\033\326\213\274\311?\270\250\367\235\214\321\324\277\240\250\256\243\214\360\305?;\230\316\214\026\261\247?\344\276<\324\232\332\247\277\006U\177@\324M\303\277\027\216\230\275\t\233\320?\177\247\317v\373_\301\2770\365\375\353\014w\260?\261Rt\344\357\203\322\277\232:\217\3734\374\261\277\365I\325\037/\260\203?r\241\241;\302 \263?i.\216\303#\r\303?\205\275\207@\227\376\310\277\322|\365Q\236\001\326\277\217\021{\315\350}\331?\220\271\320\002\217\236\344?X\010wa\0318\322\277\t\326A\374\002\007\376\277\235\303\304\375|U\331?6\226-\242\222\376\340\277\203\226L\006\204~\372?\265\234E&\033\005\334\277\362\020\267\375\013\243\340?#\335@d\216\n\340\277\356\364\321\021\311\027\362?\247\250\224\301\252\211\263\277]9\007\000\243\215\346\277\217\334\373\375\026\340\341\277U\007O\321\332\364\265\277\rXR\374S\235\270\277\304\356e\004\361?\362\277K\007\264\221\263\223\342?\345\364\350\335@\216\342\277\0130{\335<\364\264\277Nqt\177\306S\266\277\222C\265o.\230=\277\350w\037\300\303L\272\2772\236\322\340Ef\272?\275\306\260\022\364\002\240?G\n\213}\246\320\301?\033\305\371.\274\037\311\277nnJ\323%x\261?\212)\022\2201\265\302\277\210\240\314H\267\214\310\277\327A\227\024)*\275\277\265b\271\027;v\202\277\377\020#@\362+\300?\243\302\375\036\221 \301\277l\271X\032 T\323?\317\250Z\343\235\267\326?5\014\366\202\034u\323?\242\310\264;\321\'\223?\272\327\n\333Vj\303?-N\357\356\0164\263?\000\000\037\035\230\304\242\277\240\253Z\221V\377\317?E\225\231E;\037\303?\2637xi;\224\245?\225\335I\311[_\261\277I\205\327\260\337\263\255?\347\211*\230\303\"\314?\376\271F\037<\233\341\277\363\352\212\211KR\333?\371\364\241/\301\354\271?\344\316\323\366N&\323?N\270\r\214QF\302?.\375\211\321S\275\323\277\352\257\021=\244\203\332\277\223\244\211\005\304\367\307\277\264\222\322\326k\376\337\277J(\022\231\264M\243\277\206\313tU\030\225\306\2777\236d8\336\245\233?\373\016\307\303\033G\244\277\310\310\341\312[\265\264?\216#4?\313~\251?\373\024C\216$!\262?c\264\034\367\237W\314?y\360\223\351\252\203\265?}u\035\311\244\305\260\277$\245f\367\211\"\332\277\016$)m\237[\246?b\264\201u\371\343\236\277\325W\215\370\272\007\261?c\364\256\322\024\324\322\277\200\372WV7\035\311?\230\020g\311\215\346\333?\217>8\2639\370\313?\016%\306\\\346\375\324\277\032\0162\367]\260\267?\270|t\037\271\022\327?\364\013\023\346\362\374o\277\024\022D,\024~\304\277Gw\003\rGG\256?Y.\360x\211\206\265\277\317\271d]\361.\266\277\341Q\247\nS5\273?\301\206w7\343_\304?\035M\251\345\3420\246\277[\221\301\300\302h\235\277\314\3044\353\024\215\261\277\260\347j\324T\272\260\277\344}\241\016%[\257?gh>\304\206\241\261?\\a\265\223\362\233\266\277_\2031\214dgx\277[\253\350A\225z\241\277;n\332\332\306\356\306\277\016\347\021\2366L\300?\314\023\226/\344\216\311\277r]\213w\000\361\177?\036\016\271\251\240\262\225\277\351<gMY,\271?\377?\252H\021\"\266\277\030(X@\275\013\263\277\2701\2349At\274\277\331\006\242\326Q\017\264?\275w\343(4\210\234\277\221\347Qa7\213\224\277\333\254\252\325\263H\307?\363\\\347\277\306e\315\277,\201\033}t\261\325\277\226\220\371\037\317]\250\277\234\206\217\316Cd\230\277\327\371x;\240\237\271\277s\361\t\310\036%\227\277\371\216\232#\017\205\202\277\314o/\201\376<\304\277\2120\351+\214\352\264\277|1\304\322\037\331I?$\037\223t\323_\210?\275,\276\034\202\216\206\277{\356/\277\234\265\265\277y\322\001lI!\325?\330\243\372\020\333\316\332\277\373tSu\351\242\307\277]\272\ny5&\323?8\026\023\317\276h\267\277\246k\376\020\371,\340\277;\376\332\377\027\006\331?\224\036\217\361\336\337\242\277\263\326h\362/\336\234\277mHm\302\034\254\251?\035\031s\332\242A\317?\217\241\252\027\251\270\307?\201\323&\2761\242\324?\007]\344Vxp\301\277\214\347\013\277^L\244\2779\220\205\221~\374\337?S\316\246\257\362\363\313?\365B\327\010*l\321?\230\261\206\376\0161\312\277\251\335\326k\240,\322?(_\374\022\006\010\262\277m*\215^\201c\265?\323\275\020\242No\302\277 m\240+\314\312\251\277v\013\341\226\213\241\270\277\253\216\0040\276P\254?\325Fh\275`\206\267\277\241P$\206\330x\310?\017\324f\302{\236\304?g\215,\243\255_\321\277Y\207yy\021\367\220\277\335he\351j\310\262?\305\371\255Z\307H\310\277\203n\266\367(\207\305?\365h\023\271l\374\310?{yy\267\312m\332\277@\222\325\225\235\276\312\277\310\'XDY\232\261\277\376\212r\224\316\232\300?\304\341T\213\355\321\231\277@@\3043\210\302\301?\241\324\356\033\277\376\242\277zD\212\330\312\222\333\277\312T\203V\372\205\320?\026\370a\031\217+\252?\305{\020\313\013\031\271\2775\363L\313\351\237\202\277\246\032\035\340t\232\262?\370\n\326p\315J\315?\212\313\211\237\353\254\331\277L\366\357\201a\201\303?\233\014\n\330\321a\343\277\237n\327\241\276\261\321?\375\225\241\361\231;\340?]\315\306\227\204\263\342?\204\325\334P\253K\303\277%\367\261m\254)\311?\214\244\353\247\333o\273\277~`D\301\203z\253\277\306\257+svC\302?wng>-l\245\277W\334\274\355\227\221a?!\256\200K\221\266\227?\022Z\364\316n\275\227?t1;YY\256\215\277,>\013\332&\262\275\277\345\2255\304W\333\214?Lz{J\353\377\321\277v\243\005I\265\363\341\277O\331\275\316M\227\330?Nl@)\200M\253\277\257\224cx\356f\251?\n\266\326[SZ\255\277\215\301\2209bb\266\277T\220t\223\266\177\330\277n\376;\356p\003\302\277a\360\360\231\215\006\304?\317\260\236<\332\211\317?\346\3379\351\013\264\231?\003\213\326\202W\313\313?1-\221\356\310]\275?\025\033\242\350\237\324\304\277\342\354>_\014\222\227\277\034Q\314\031\355\t\307?\350\316\264{\217\335\303?\277\333\247ul#\267\277<5\302\302\372\255\306?]\360\326\317\310\007\331\277\345\n\200\217S\230\306\277SU\272(\307\266\261\277N,\007\311\273\276\306?a\003\032\321z\227\316?~y,l\336\310\270?\255\024\345\243?\315\324\277[\t_\341\2117\323\277\200@\305\307ub\251?\320;\352\301\361\242\316?\350\307\225\370@\352\217\2775\355\033\234k\035\252\277t\251;\305\033\270\321?\231\025*\233X\021\303\277R\342@Q\024\330\303?\263\031p\001\274\033\260\277Bz\253h\024\276\244\277\024\352\037\033\024\350\300\277\343gO\030\235\307\312?\310\320\256\035\201M\301\277\260g\204|`\377\310?v\214/\323\033p\270?X6X\177\2639\247\277\334\217\r\3356]\306\277\374R\243\311^\264\312?\305q\002\335\3148\300\277\340\263\242N\277q\317?\304\200\350e\005\277\306?\343L\256\253I\277\256\277\212\307\"\207\010\261\322?\0061\342\233k\316\332\277\344\266\340\316\007\027\304?;\336%\035~\365\275?\272T\376\313fo\257?:\235\306Xd\013\265\277\020B)\333\322@\274\277~d\241\315Q\356q\277\207\341\020\226\210c\272\277\311\226\253R\275~\212\277s\234\325\272\345W\247\277\332\263slS\242\322?\271\013,V\235\334\276?\216}\345O\241\331\237\277\302\322\240\206\356\343\265?\001\231D\r#\347\270?\2140a\202\352\231\304?\330n9\216)\001\240\277\000\323t\232\304\263\240?\315)\035\244I\216\263\277B,Q\2524a\341\277\304\274\346\257(\232\343\277\253\274Eo\005|\264\277\262\341\235\250I]\267?\357o\307\002$\n\245\277cV\3015L\314q?V\260BT\365G\240\2777/Av\331\266\252\277\344\3620*\244~\306?-D\232G\0221\250?\034\220\351F\036\007\245\277\320\302\276\r)g\310\277d\243O\273FC\311\277\204\322\333d\365\224\214?\312E\230\323\275\257\257?\353\262CU%v\245?\030{0\2043%\262?~8\244\006\327\356\246?qy\205\347\354\006\337\277t6\271\030y\305\322\277\244\317\347\211:a\313\277Z\346\202\346\216i\300\277I\345\311\004(>\256?\357\273\217:>\354\260\277\"\275\333\350\223B\230\2774\177Qd\233\272\250\277\206r#\264\272\264\314\277\330\013A/\371\322\301?P\277\204\371M\222\264\277\304\257}\234$\203\266?\2316C\267tF\026?\241\374e\256\273\242\267?E~\3757\224\250\321?\264\301q\247\361T\320\277,\236\203?:\221\261\2772)\236s*\227\235?{\264$\215@\376\244\277\222\267p\237-#\307?\"\266d\277M^\315?\265\322\202o\307-\314\277\275\246\223\320\274\265\304\2773\336F\343\327\001\315\277\256\266dK\244\327\267?\262\377t\212Ax\261?\212E\216\300:(\305\277\027.\245\3243\356\303?\212\316\036\262*\241j\277\2263\206\177\257\033\246\277\271\304\023\276\351\365\333?\257\333\374,\302\322\311?\243K\031t<\004\274\277\'g\022\222V\006\345\277\231f\271\235f*\233?~h\216\'\226\241\304\277\310Wp\266\327\250\252\277\370\211\313J\356\031\271\277\362\000{\014\210N\255\277^5\260\366k\346\230\277S\240A\221\025\243\264\277/\260\217\276lq\313\277\330:\376i\224\363\277?D\250\333\355C\023\345?\37459\254\016e\251?\260\360\001fb\350\307\277#-L\3678 \326?Z\271.\220\\\225\336\277\367l\351HH3\317\277\022i6\356\312\020\263?\027g!\220\010.\260?\016d=\213\031\262\336\277\016\360\343\352E\327\324?v\250\236\275-\204\030\277\310j\"v\274\237\323?+r\026\2450\277\316\277\000\334\374)\353\366\322?\376b\275;l.\321\277\037\n\306\251\311?\244?7\3224{\361t\323?\027\301\340+\000:\333?\302\316ep\341~\326\277\215n\203pC\000\331\277\234n\343i\247\006\340?\353(,6y.\332\277,cbD\335Y\327?\220P\013\223\214\372\260\277\332\3000b\354\232\203?:)W\000)\216\307?\264\010-.\022\332\241\277;\003\357H.\336\201\277\030\346\373i\001W\273?SJ\317\025\322\246\205\277\376\037\307\023\202\206\310\277\314\t\236\332\332@\342\277\322\256\350\253\363<\333?\023n\260Q\017\201\270\277R\250\241\347@A\220\277\\y`\310\274\226\275\277%\034\240\221\331R\266\277\242\251\240!X\000\327\277\327\003\240B\207\017\237\277p\370\340P\331#\274?\222\356\233\005\033R\320?384t\005\313\263\277\021\377\344\363\251\213\215?\301\024\355xk\\\307\277\334\302\306\202\344c\243?\235\014\014\\\311\224\307\277\214\000\ta\311\226\242\277\260A\266\261\252\216\270\277\351\022\220\232\007\006\303?\356.\262E\202\236\265\277\223\033Z/\205\304\236\277\022\021\232\037Y\010\310?\017X\001\022\031/\323\277\001\373@\313\303\371\265\277\332\215c|\232\362\266\277\350\206\237\263\014\304\331\277\n\250\210\354\362\200\304?K\271G\016d\343\272?\006\"\026\207\360X\307\277\362y\3354\343\347\264?~\r\2075\254\201\333\277k\371\r\371\3466\265?\014\204\322\326\243@\306\277\350\232\252\336o\345\321\277\347Xsk\016n\276?\211\241T\025\004\343\226?jy\303\033d\n}?\340\375\333\306\202\314\310\277,W2\300\025\033\275?\203\033\244y*\216\310\277R\357\024L\350\365\335?\2528!G\177\300\317\277c\363\225:\355\265\275?\321\340n\2331\026\316\277\367n\352\243\030\275\320?&i3-t\021\324\277\327\247s\237\316S\314\277\227\3518\342\017\375\320\277\352\330k^\353\347\317?nG\177tx\205\326?%\316\207\315\035d\340\277G\250\217\r9\213\300?6\234\277\t4\214\213?\333\273i>\237\332|?S\300\237NK\232\215\277\007\321\376\245e\276\252\277z\326\226\250\301\374\271?\347\244i,\247\263\260\277\037(\211\317?\231\235?{Ai\226\000Y\267?\2343\205\225\204v\267?a\037\225)\310\014\302?\341\032l\372\207\025\304\277\212,gX\'\312\302?\027\227\356\244i\266\267?\t\250\345&GM\227?\010p\367\242?\325\300\277\"\271\031\213\177U\254?\030\207w\023\231\017\274\277I\211AoC\226\321\277\215\252q\023E\033\341\277\320#^\251\275\257\261\277\036d\360H\350M\271?\235c1\017`B\275\277\356B\211_/2\263?\366\036\330\3706\360\247?\227\241\366h\030}s\277\364iRP\2377\224?W{\220\206Yl\264?*\265S\310\336\370\305\277e]\254\355\nv\311?-n\3574w6\264?\357\000\216O(W\324\277I\030\274\312\032:o\277\331\353IS\274\211\222\2779W\241\370\322v\206?\373\023E?T\370\254\277O\216\212S1\n\301?\035\025j\310\207\335\220\277\350I\242\365\'sD\277H#;g$c\332\277(\203\230W\374\212t\277n[+0\225z\264?Z\034\371\345C\216s?\316_\330\226\226$\312\277BB\203\300U\033\302\277Tc\300\034\324\327\223\2773\203Q`\036e\347?\036\240\310tc\314\313\277\203\256\205\373>Le?\366\357ai|\274\353\277gw\323\311\025\t\301\277\260\266\367\305}\255\205?\354\334>\276\2026\244\277qV\252-\025\272B\277\365\206\327\262\000\264\241?\234\367br\316x\251?\262\335n\r4\013\233\277\360\246n\206g\037\265\277\333\307\276\305\213\323\310?\003\277\266%\004\000\335?\364\272\364\242\256x\247\277\367\361\363\223}\337\260?\331K\242\222\014\340\262\277\355\001U\316y\245\311?C=\310\030\276\031\264\277\207\000\266\230T\240\220\277\253\350NN\2077\315?O\014\336\265\307\345\303?\315\010\374=\234\007\301\277\026\312\272\t\"\177\253?_\236\361\320\323x\251?\215\237\240\272Jq\240\277\371\271+ mb\267\277\354\244f\217\252\214\261?(t\370\305\303\'\247\277\370\214\242\200t%\272?\320}\353|,\025\263\277&S\376\214\200t\330\277\333\213\253\231\033.\321\277\007wCO\2051\310?Wq\230Mw\364\300?v\t\'\335\360\235\202\277\"p\376\371\360D\205?\363\200\351\242s\211\316?\214\360J$\306\'\327?f\344\010\227WP\261\277\314\364lot\252\274?V\2642\360\322\341\303?\236{\343\234\266\375\327\277\000\270\262\346\234\200\205\277\236\315\370\035\235\321\240\277R\243{\2727L\330?:\375\330\210`\372\300\277\021\276\365\0254\254\300\277^Xi`\360\331\257?\246@]6\010\004\316?\303\003\202\325\352\252\306?\212\370i\203\177\345\252\277Y\334\330\264\267E\276?EE+\027\007a\263?\243e\336\002R=\307?+\272\360\257yg\324\277^\351\363\372\261\351\216?\035\177\314\357\334\374\266\277 \350\271Il\272\265?-j\007\377\302\214\261?%\246\214\241U\356\255\277q\024ge\312W\304\277\234\211\266d\340\362\253?U\014\310H\203\034\322?\376|\316\242\304\241\301?v\337<\177\225q\225\277\226\335\264\333\200\321\243\277\277h\243\342 [\264\277|\363P\002\326\360\244?\371\227\213\256~\326\246?H!\\\373\247\017\276?\372\031\204\351\023\344\264?v\321.x\030\215\321\277\207\347}\362\003*\332\277\272\310\342\304N+\221\277u\245\365\253\234\276\206\277\204{A\271\306P\207?\344cz\215\253\236\253\277\3442)\211\367\324\301\277\261\311\363\022\2558\304?j\354F\016`?\306?25/\204\303g\255\277\010\371\325\215t\250\263?\224\232i{\270\205\316\277\034\241\"\332\276x\244\277[\332\244\207\231\341\302\277lz\2004\361\210\200?C\006|J\n\366\311?\034\343\251h\225f\257\2777\365\210\257O)\227\277e9\222\0347\377\316\277\325d\313\324J\361\317\277\261\205\252Hi@\231?\270r+\016?d\320\277\353D\333f\310$\256\277\235By\001\205\260\303?\211\312\246\027\010\230\301\277B\243L\224\037\\\304??\2107-\354\311\266?\'\330\342\0149\263\301\277]z71+\264\302?\223L\234\362;\375\264?\232q\203]\247\204\271\2778(\n\'j\317\303\277\376\013\210I\177\030\323\277\r\306\225\017\242d\321?\007\246b\252\313\244\306\277\033\030-\375N[\270?\\0\374 \361}\247\277KL\004\352>H\317\277\023\321\347\n\247\004\324\277\220\206N\032\314o\266\277\323\270\022\n\3038\307?\326y\031\220\022\334\325?\272o\272^G\275\276?F^\\\236\257\322\301\277He\220\253Z\201\222?\323\251\312|\246]_\277\215\205$A+\275\267\277\343f.\365\276I\312?\261\236\023E&\300\302?=\2748\301l5\250?0\005\236\325\222\322\250\277\216\255\355\346l/\240\277\214\033RX\'?\277?x(\324\214\305\371\306\277\233\336\372\211\3636\221?}T\205l\234\037\245?\243E\021X\223A\321?\364\244+4\322\026\307?\223\353\316\026.-\262?+\r\356\236\227!\312\277\302c(\332#\200\305\277\277D\323\275\021x\326?\253{\326\th1\205\277k{n\016\307L\304?l\375\237h\232C\317\277\345\365Q;\006\205\264?m\254\376~6B\272?t\357\341\341\036\210\305\277^\201\273\253\262\016\260?\020%V}\257p\310?-;V\311%!\276\277\242g\357\213\221*\264?W\324=\306\374\352\305\277\326kM\270_\346\271\277>)\237\326\020K\315\277\341<R\204\311W\315?\300\364\020.\215\264\220?\010\271)\211~\316\206?\\\323\325\013n\034\313\277\211\355\215H\354+\244\277 \315F\344\337\227\277\277\222\305M;\360\033\246\277\354>\263\365el\321?\321\373s\257ZS\271\277\366\362\037\223\310\266\316\277\263\276(\n\320\177\250?\374xSN\035~\243\277\340I\352\217\251\376\201?\007\210\n4`\254\332?!\016\'O\276\267\306?\275\177e?\346\264\304\277\201\317\266H\340s\340\277\3664\203\321\314\246\267\277\276\210\341\343\365<{\277hp\004\350.\354\246\277\305\276\241 \310y\237?F\205\250[9\350\264\277mS\314\334\372\251\211?u\204\267h\006\224\270\277}\376~%3\177\306\277\325\325\261I\271~\243?<HXGvb\336?r3=\341\212\021\305?\242\266\005\260\245\374\246?cH\233S\361,\272?aK\350\006\366\204\252\277\211\343X\356\201k\323\277,\0341D\332Z\300?V\243P\275\221B\310?\347\363\231\227\006P\277\277@\305\3433t\376\267?\\\202MW\207\376\263?\007\027\374\352ee\310?)\230\342\343e\373\320\277\351\267\230\010TB\264?\273\316\243\361b\267\275\277\355\\\227\346\327k\245?+\010w\230\236}\324?\"\002\266I^U\301?y\375\372\277(_\306\277\325;/\324$9\314\277\031$V\236,\261\315\277\007o\240+\356\220\253\277\256\356KP0\364\320?\367\3638\305\032\323\351?b\000\232\004\317\277\343\277\'\307>\340\'\205\305\277\000\024\356f\nf\343?I\265\322\034\376C\343\277?\217\211g\201-\343\277d\002\212\275\217\304\337?:\200$p&\261\356?6\020\361\000\206\357\340?D?\345@\370V\276\277\267.Bw\356\230\350?\276\261\255\323\3203\342?\023Gd<\rB\350?\335Ci c\'\302?I[\002\021+\004\354?\357\307\203zT\304\265\277\306\357\253\204,\374\357\277V\301\241\007\204\273\352\277\315\310\203\'\235\247\342\277\206\347f\017\350C\320?V\237\330\000\217\177\274?\263\0344\250D\231\273\277\254\237\206.w\345\254\277\256T\373\244\020\373\260?VF\036\004\366\230\300?\016-/\274\326(\314\277j<&\260l\266\253?\217\374R\313M\227\311?\240\276\022\375\276\377\316?\026\024\255\202\376Y\311\277-<\361H57c\277Dw\261%\371\333\260?T\030V\177]\\\315?\003\243_\206\363\016\307?H\235\002\206\306\326\273?\n\233\377\226J\034\271?\260\376`\343l\316\312\277s\310\250\274\270\240\342\277\321\304\220Q=\014\306\277\220\341\256\300\267\267\264\277_\247\334\3728\005\272\277\225\034\377\234\006\361\266?\270\357\340\250\321\300\254\2779\316D$\271U\305\277\306^\357\321L\344\331?f\002\304\025J\263\304?W\312\372u\241\217\222?\363\002B\002\375|\334\277\204f\036\032l>\307\277\356\343M\332\214\206\263?\235P\263o\240\310\306\277\277\243\353\267\2531\251\277\201\306;\312t\252\317\277\323R\376\346\315\317\224\277\034\023)\016>\027\322\277\363\350\221L{\200\320\277^\304b\300#\246\323?\226\271\231\277j~\355?q0\254\224\365H\303?c\211\324\374\370\023\254?\251\023\367+g\330\305?:\310\240\350\272<\240\277\241\311{\214d\213\305?\214G\232\273O\235\307?\203\363$p\'\035\271\277\3361wLi\262\274?S\304]\340[z\262?8)\276Ef>\307?\333\322\247!\014Z\304\277\271\036\005\346e\033\313?\325\327\230\225\205\312\216?\316\032\272\267\334\272\325?\022\320\r\017?\351\276?-h\260\324$\247\321\277u\240\237\314\033/\320\277\021\020]\364\240%\316?v\347+=\361Hu?\347\031Z\2743Q\340\277\200\001\265\033\330m\243\277\263I\235~\314D\264\277\024ej?\312@\313\277H\2535\2261^\263?\300&\014Vv\021\302\277DW\3560z\233\273?e_G\026\215\314\316?\332\227[\371\336\260\243?\013\223\024X\361u\300\277}\262\3738)i\307\277\301\344\320RC;\257?\014\316\371\310\234\"\307\277E/{\330\243]\215?\235\262\371>\0077\227?3\0250o\334I\232\277pZ1i\n\223\323?\321}\270t,Q|\277+aY\367\350m\270\277\224\374\342\002\t\263\314\277\200I\357\020\2573\333?\337\305$\3571h\277?\004\247){\037Y\270?\322\365r\007o\317\336\277\332Q\241\226\201\t\344?\323\010X\223\3350\352?+\277\360YK(\340\277\n&\361\006\336\275\000\300\001\232\200#O\010\345?\003N\213`j\177\350\277z^\2244\363U\371?\306St\377u\231\343\277Hh\317$\034U\351?.$\236\325e\351\350\277\367\025\303\377\247\"\366?1&\234w\371\270\322\277\221\242\354\252\267\304\355\277\312\304>c\014\034\346\277\340\266!Z\320\223\312?My\263\343\023W\267?1Pr\376\341V\364\277\002\275\3008\374\024\350?\356^\201\366\223}\353\277~\332\242\022!\230\250?\274\304}\323\"S\276?\014A\202\266\221\322\322\277N0\310I\353<\300?\257{\3646T\264\321\277\271r\251\331\026z\301?}\271<\370\332#\214?\n\023\225\335\0366\323?)\224\207\333O\327\336?\004%\362p*\351\314\277\275NoE\265\315\302?\235C\\\210TX\331\277\\\026\264~\005\330\252\277\271\336T\362\001|\326?8\255\025y\313\017\357?\373~B\277w|\342\277\206{\200M\003\312\303\277\217\331R\020<j\352?.M\327s\317U\224?\033W\2011\232\233\244\277\350\223\305j\225\307\331?v\353\0304\350\275\341\277\203\275w\241\331\207\304\277&\335\031zq\341\323?\364\355l(i\005\323?>#kM\207\030\341\277\251\n3\277 \245\326?\262\351\312\224\372\205\336?\341\333\3359o\256\313\277g\275O\031\275X\276?\276\004\234c\255\260\342?\363E\373\375\023\014\305\277\r\2770\016\263&\345?h\347\266\321\352\253\257\277\t\n\035\275\313:\306\277\373>*\254\243\r\351?\243\206\023X\n6\243\277\216\231m\342\363\227\333?\272\205\316\023\312p\341\277\351\220\306\327Qa\337?\310a\005\245\361W\337\2777\233\230\036\260,\330?R\252p\266A\024\352?\307\036\364\253\331\363\352\277\027\210\325\304\265\242\374?\t\330\nt\2714\332?\257\234K\210\005#\334\277\266\304\231\354bS\356\277\025\013z{.\036\363\277\255uV\177T\312\360?E\317\374\357\237\343\351\277\n\005\320Mh\275\326\277\2651>#||\342\277\264\333\242\370%\023\215\277\372\361\005\263\313\331\360\277\347\334K\221\037u\250?\213\352\017x\030\025\372?E\024\204\322:o\336\277\360|\001R\223\302\341?\024\356\367O\364\326\336\277~r\ra\216\332w\277W\3457A?\331\311\277\223\'o\024@\205\306?0\010Y\010J\322\263?H\016NB\215\221\373\277\312\034\262&\346\266\300?i3\343\3458\276\256\277\267z\335\260\225$\367?\352|+\357~w\303?9C\244\226\246\303\262?d\331;K}z\270\277\302\263\230]T\225\334?\366P;[uV\266?\2217\026\004\235\000\274\277\002/\351\017\231\021\271?GbX\271\213;\304?\305qR\2170\007\325\277\211\251&\2636\177\363\277\356<\335\024\365\275z\277\323X\031\210\254\320\230\277\273.\344\333fi\321?\342lq\355\377\306\265?\251\333\310\361\211\013\335?-\006\003H\206\252\303?\323\222\324rj\204\365\277\004\3503\345F\252\251\277.\264\304\350z\267K\277r=\341%\303\346\374?\251\352\315\216\361\340\334?m#>\203\327N\313?5\036\205y\021\013\265?\206\024\371\263\351\'\360?\216\000@`4\030\275?u\263\334Fr\313\331\277\275%m\341\273\'\355?i\247(\370\301e\350\277\347\\a\232S\'\001\300\013\323$\362DX\350\277\325\302\245\035\245\354\226?3\200\327\231\337\356\340\277\0336\234X!+\350?\363\247u\377E\217\357\277Y`\310\216\366\024\364\277\224\026\354\200\272\255\347?\256\247\222\264\261K\365?\221c\264y\236\373\357\277$J\237O\363\301\355?\307\363\355+\362\214\362\277M\004\037D\334\312\357?\326\363W#B)\361\277\254\251\370\224\220\322\352?\352+\227Sx\236\364\277\343\364\010\301\2540\332?L1.1\234\345\365?mP\n\220\202\007\361? \344\222{\245\313\307?`\344\251\214k\256\352\277\334\243TR\274\307\321?/\223\017\217*J\357\277\234\217\266\004\366\260\355?\350\323=C\n\030\365\277\3152\214\026%K\364?ok\324o8B\353?\312\263U\r\265\256\364\277-\305\253K\233\334\307?\271\332\376\301;d\357?\236\240\265f\'4\361\277r!\033;\231H\320\277Q}\255\272\271Y\365\277l>\225\322\241\234\355?B\275\363\341S^\356\277}L[Y\250\"\322?,\357\304\263~\240\360\277\352\001\007\000\274\326\350\277MfQ]\333\262\356\277B,\360\316*L\336\277 1\356\357\257\013\001@\230\2271\376\317\014\004@\2351\037Vc\030\361?\375g\354\316\333|\351\277\026\323cJB\367\333\2779\316g\330\345+\321?v\027\377\013\304,\346?j\366jQ\036n\323\277?\312\312\353O\330\375\277o,\260\210\264\306\335?\336\024\366\343\245\261\327\277\261\352\005IP\226\373?\324\207<\026\227\024\342\277\366\222o\347\273\314\342?\215\356\211T\3017\342\277\344{\361\375_\010\357?F\311\217e \204\310\277\227\301(.\335#\354\277\373\220\313\342V\376\342\277\371A\026\000\255\323\240?RA\222\237r/\300\277\302\333\301\357S8\362\277]W\023u\262\000\340?\205\262\300]GB\343\277\311(\252\376\335\261\325?\262\327\231\350\200\320\327\277\353=\201\020k\220\303\277h[\355\027\"\333\300?l\255\335\306\013\265\300?J\343\356\013\245\252\334\277\0328\013\365U\027\323?\345[\010\032\025\016\245\277\374P\024\'r]\320?\'nH\233\255\361\330\277\014\270%\311\"c\324?\032O\263\225}\247\325\277\020\334\316\032\031T\305?`\257\026\343\236T\311?_;\215[\3152\321?\356\305\353\276cX\321\2772\276\303\367\251\001\320\277g\3715\207%\365\341?q\243\271\233\221M\326\277\200c*~\036\364\314?\263\026\255\006\033!\346?p<\231\021\317\256\342\2772\311NX\375n\243\277\352\000\014\222\225\211\344?\333\370\251\352\367\'\344\277\265\307=Ceu\343\277<\374R\\\245\277\341?\304\275b\303\265s\357?\n\237\024y>\242\344?\225&\377.\203\211\253?\305\252\006\201\356E\344?\341\375\352}\261\334\336?\277\324Z\361$y\350?\3608u\311y\371g\277E\000dN\354\246\343?3\023/\374@\314\270\277e\261\270\003\246\231\361\277$\252\277\354\030}\350\277\365n\020\036|\245\347\277\304\2551\354\374w\321?\320\320i\306R\270\334?\"\376p\305\204\271\357\277\335?\300\273\271{\361\277\310;r\200G\032\322?$z,\322t<\006@j\226)x5\177\351\277\217\354\2633k%\350?\024NK\204\300\232\004\300\3778tp\027\303\327?\227\266\302\303\005\207\336\277\214\303x</:\345?C\257\206\246\214,\001\3006{M\013\000\322\326?w\007d\3752\236\375?n\223M\372\267\311\316?Up&\317\365\014\350?u)&\000\225\222\373?8\024EkA\376\330?\022,\201\276\210\007\351\277\027\016L\225*\377\355?\261q\224\347\206g\341\277vz\271\363\034\300\336?\311\217x\0274\314\335?D%\361\374\000\204\330\277\244v(\266\203\277\374\277\276Y\232\337\342\204\344?\025\272\007L1K\345\277\373\325\004xdp\363?\241\377\213f@\351\333\277\275\366\'\274\r\240\336?d\213=\221f\227\343\277m\357&\265\267\267\354?\375\366\252\006\225J\274\277\374\2348\'\243\251\344\277\210\303\262\362En\341\277\243g\'\024\367\312\303?\023Z\226I\277\227\306?8!\247\035\326f\361\277\353\2656\327\266\324\345?DcR\253\315\302\343\277\003\022\347\320:\261\344?\331\335\247;[\200\356\277Y\\\274q\021\304\350\277w\267`\033C\215\324?\224\314\302\001)\025\002@\262\227\025\013pX\360\277\3008\035\303\323\343\351?\265pn\242;9\373\277\376\222q-u\320\346?X\216^q\031s\352\277n\022\307\300\025p\341?bM;\021?\311\357\277\240\314\323\006RG\217?L~X-i\004\357?\034\207\025\346\022\021\345?\375`\374\237\2752\336\277^hZ\202\252\362\352\277\000\177\34417\333\355?\220R\356\270l2\344\277\230I/\353\177\312\345?\360\255\306\347\372y\362?\267\275\357\005\232\230\364\277(t\200\205\374\013\371\277\261%\251\327\2475\361?\016b\377\221\330\021\356?\370F\232\260\372b\363\277m\303\342\212\372f\362?c\020{*\326s\347\277\n_w\346 6\366?o\373\234\347\206\332\365\277\005\017\177\333\231\'\361?\303\357\342\220 ,\371\277N}-xo9\351?\362PT\263\311\307\373?@\004@\266\246\256\371?\246\355\\\021\255\313\341?\202\257\321\306\2759\371\277N\366\023\361\241\320\275\277\272]E\032&\253\364\277\037\t\333\"\351\'\365?\263h\217\252\350\242\362\277r<mW\234\205\354?\310\373}t\261\361\345?d\014\027\224\030c\364\277\3522hb\371I\336?\033*\222\370k\251\353?\356\307f\365\'D\356\2779\363\0370C2\356\277\363R\002\326\321\233\362\277\312\016W\306\3140\347?\034&\350\201\267F\353\277\t\322\337i\235Z\264?\352\372K\354\310\n\360\277T\306u\027\2736\332\277\261\r\010\021\037\034\354\277\274\2712=>]\311\277,\000\036\332q`\000@\255\270H\235H\210\005@\235\370\311F\364O\355?\232\325P\224>\350\342\277\245\'#x\370^Z\277,\357U\346\333\266\301\277\n\035Z\265-_\234\277\326\266\344=\240R\246\2778\304\216\025Rj\243\277\304\333\370\372\277=\272\277J\340A\214Y/\261?\\\017C\004\021H\244?v\343S\263wp\276?\276\305\256y\024S\276\277\353\203{\320\376\332\265?\343\330x\241\356\003\243?R\275\232\3227\t\225?\177\231\206\312\251M\246\277e\0303B|.\315?7SA\326\265o\323?\234}\372#\206\345\301\277\331+6\217P\343\235?\374\001\353I\nf\266\277/\214W\245\234w\261?\252\300\225\376\241\265\276\277s\245\333Z\320\271\314??\315\3371\031\347\264\277\312\247\021t\037\330\332\277\310/_\366\363\342\272?\347h\014\021\353\016\315?ET\230\246\306S\306\277\333\031Z\244c\335\313\277\216\274\275\234\021\353\216?\215\337;\302\334\257\274\27732>\306\371K\320\277\317U\'_\016\223\274\277\214`\341\325\231n\325\277M\320^?\201\231\320?\213\310^g\010\030\242\277\336\205\351\242\222-\361\277\234\274\254\272E\244\312\277\330\247+([\010\321\277\311\357\031&\340)\313?p\020\342\225\'G\272\277\231\250\207\213\026\300\227?\246\315\202\230#\325\300\277\000\001\263(`s\240\277.\030#\357\nh\313?\240\024M\"\'\356\302?f\037\3677\335\232\311\277A\0029cq~\302?\240\033a\333F\332\220?\244\200\003\333\200\341\312\277 \366\340D\332\202\300?\"c\273\276X\361\243?-\r\212\244\207\"\263?:\362\341\304B2\303?H)\344\317\370!\300\2772\256\335\310{\213\335\277{^\2041Y\321\307?\177\020\3733\320Y\320\277y\352\226p\263O\274?\212\001\rZ,_\267\277y\227^w!\027\255?>\311Z\230A\224\301\277\277\255tV3I\273?F\220\302\2457k\321?\"C\220\324\203\024\263\277<w\230b\217\276\302?\031\214\224~s\276\241\277\313v\'\017\365d\300\277:\3765\233wc\321\277xBV\341\260\347\323\277\000\000V\271gP\312?\350}\025k4\006\305\277\004\343\242\013s3\324?\314\001\373\307\034\\\305\277\261fz\247\t\360\330\277\360\361C2n\373\326\277a?\247\341\004\214\306?\372N\224p\354\257\322?s\241?\261\320\330\300?\377\273\245{U\000\302?\351\326\374\205\365:\207\277\302\202f#\331rs?\365e\027\037\005\010\207\277\332lC\324L!\253?uH\010\353\253\213\263\277K8d\215@\211\240?\036v\334\th\371\301\277G{\006Z\325\244\254?#\250\254\273\200\336\233?=3\372~\3724\274?\251 fs\335\250\277\277\330@;\216\210\236\240?;\321i\351\230\364\245?\300\206\210`\366\177\265?\332k\tjE\305\300?\375R\001\237\344\316\303?\266\336\221\321\270\236\232?u\201R\023\340\346R\277\361\037\034\217\232}\313\277\262.\215\366\017\217\240\277\351\305\001\243\367T\211?\3511\004\247\263)\267\277\300\313Iu\0320\307?1\025\355Y\367\253\230\277\236\006\340Z+\342\312\277\274{\347PI\263\217?\227\270\377m\357\332\307?\314\206W\035\330\010k\277b\327\366\316\352\313\317?\350~\210#\027V\272?{%\030a\337\010\270\277\274(\275\033\367\332\240\277Dq{1\301,\255\277D\271\247\361\027\336\226\277Cz\370\250\362\233\305?\000\216\272\277k2\321?\311\020e\356vY\276\277S(b\276w\341\245\277>f\232-\233\313\322\277\230\260\213<\rb\263?\323v\r\214\344\331\313\277\247\214\251\000_\000\300?\261%\024F\275+P?\310\201\217k\320\263\251?\010K\211\'\226\211\300?\212\202\246\001\321\301\315?\341~A\222H\032\257?0\307e\t\237\312\264?(P\221\220Q\213\322\277d\2629\347\350F\327\277\350\344\236\257\366<\340?\024\346\033\247VL\314?z~A\372\344Y\317\277\231\270y\016\332\253\333?\374~i\031;#\260?\361\365\300\205\211\352\317\277\272O\324l\301]\256\277\373\342\257\201\251|\252?\024\345\330eL\347\324?\3321\304\364\016\201\272\277kp\030\3736\236\303\277\205{)\220\035\242z?f\030\330\254z\250\263?T\274\036*\243P\204?\232o\307VW\250\266?;a\315\031r\206\325?\360~Y\3235\030\225?\207e:\370\304\334\224\277y\377\022\221[\035\321\277\371\242\0014\0222\264?\335\271\356\354\305\243\303\277\351r7\353r\351\235?\217S=\210&\"\260\277\203\224\345\025\206c\306?=\327e\330\307\360\244\277\304\230\345%\235n\267\277&y\000j\325\373\307?\334tI\376_\024\236?\002n\240\243x\246\327?`\310\357-\320\362\235\277\210\277\323((\363\255?8\244$\343\021k\257\277/\021{\317\372\330\304\2778\221\215\003L\241\276\277\322\303\217\346\357\355\307\277J\253\314\325*\r\275?\036}u\251\233\245\301\2775\225\275fg\342\227?9\340\r\032\263\301\313\277\030\3056\177\367\007\202?\224\306\\\033\355N\315\2774h\251Z\330\316\223?\014;$\273\347\327\236\277\221\307\177\360\256#\274\277\312\205\241\347\335\277\264?r\241\213\275M6\221\277\2229]\252\313v\334?\353\001c\262\375\347\325?s\324\205\376\207[\321?:a\007\270\177\026\216?\327\334\r\206\n!\177?m\244\223\006+\210\205\2774\037Z\371\261\347\201?\362`\2362\375Cf\277\"\335\025a*\227\222\277V\270k@\312\377\270?6\033\315\364\241k\213?\010\311V-[r\271\277\237\033\375\255\363V\320\277*\003\273\260\252\305\334\277\336\334Pdg.\324?[2\212X\357\007\266?C\315H\224\342\333\300\277+;\206\373\354N\300?|\346\331\253t\317\244\2774\323\274\244\267w\327\277}\222\350\226& \266\277\222N\240\321\362\335\304?y^\255\261\346\256\300?\362\332\331\317L\263\242\277;\032:\326 :\256\277p\224\251\244\304?\302?8\236HC\211\311\307\2778.\233\030H\310\235?\262&f\300<\330\253?Dm\004s\027\211~\277>\350\244i\365\224\246\277i?=`\345T\234?\'D:\307t$\311?y(1\336{\273\326?>9`\014S\224\316\277\313\016\027vn\037\204\277=\250D2w\354\302\277>\017uU\370\337\303?<\321\354\263\237m\225?)W\335\032\024\t\312?^\302\035\262\211\016\253?\264\213\226\337\375\"\300\277\225\237\36656a\342\277h\354\211-\013\374{?\330\222\231\t\220)\210?\001\246O0\006\200\344\277\255\237\033K\206\355\341?\200\225\202\2318L\337?\372\271f\215\320\023\326\277z\272)\352\0374\375\277\374[\237\277\233\265\340?E\0038:\025\214\345\277_\352 \257\2342\362?E\372Xx\022,\336\277H\315\"\372\337$\341?\274\273\013\333\275\323\341\277\363\337\035\331\372\200\356?k\200\036\371\346\373\315\277\214\002,\r\341\260\344\277\215\201\224\027\317`\334\277\254\241\327\313#\205\322?\351\203\002E\344,\302?\256H\213\251i\027\361\277\327\320*$\263\365\346?\322\354\312\311\210\207\335\277&0\254\354\360V\263\277\321\231Y\032\'1\246\277\302\030\202\277\261J\306\277\233\352g\237qp\267?\215\305[\"\336\n\260?\305j\366\255\235\234\307\277|\331\252h\333X\303?\373q\024\337\216\326|?&\224h\017\342o\315?\033\317_R4\347\326\277%\335\355x\254\261\204\277\207\242r1\212\222\200?\305q[\316\302Y\214?r\004\210\335\300\325\273?\274\002X\372\026O\330?\352\177\006\237\221(\320?\251\214)cDs\275\277\310\273\236\335\201\310\317\277\2649+\365\314#\264\277\273\370;q\352\036\306?\342\013[\224\253\300\203?\233l\002B\030S\273\277{#N\235w\215\300?\222\351\211\272\246\"\254\277R;]\227\345\000\300?\004\226\314\035Q\202\252?\226\331\362\201\333\000\262?6\013\245\246- \261?p|\370\310?`\333\2772\220QyR\344\331?\231\227B<\375\003\255?;\002<dj;\263?=\030\212\202\277T\246?\255\255J\323u\314\306\277\370\205\036\233=\032\326\277\004 \007\240\356%\260\277\240\324\262\351\355\275\222\277\2252\243\305D\226\326?\256>\244Q\376\250\272\2777\"\343=\235\312\255?\351\332\200M\211\356\322?\253#\235\235\266\350\304\277\204\004c{f\336\333?\027,n(v\r\332?p\367M\355G\030\312?_\n\ne\254\223\305\277\243f\246\315\320\323\302?Y \314C\307\310\332\277\277PB\267\206\033\264?\311\310\033RVgs\277\216\301\275cy\364\321?\222\017Cnn\363\321\277dkUF\247\335\341?nv\177RH&\322?\020,\231A:\205\242?\241)8`\331G\257\277y]\275\304f\275\242\277\327@$\270W.\334?\247\354H\304\367\243\310\277\270\326\363\324\256\302\272\277Oo\344\244\240D\300\277\334;n\244\337\227\264?\324\004\243{\350\035\251\277\'\002H\321l\"\255\277\356\311\034_\037T\310?\303G\242\261o!\303?\016\230Q\215\213\240\302\277\336z\230\355\205\016\314\277h~<\310\243\372\261\2778~7ER\356D\277\007e/\231\034t\272\277\262\025\303%\205\004\235?\323\316qF\034=\204\277L\251\253h\247\202\237?\017\003\313xZ\271\270\277\210\372\260Z\214\267\262?\304\324\277\236\023e\244?\323r;\'E\323\326?xz\336\023:[z?\220\t\265J\021a\234?\023#@^\203B\236\277\346\275.\204`\361\241\277A;\337\020\347N\322?\361\0056\024\303\032\266\277\020\256\267\r\033\327\250\277\026\331\375\246>\362\250?\337Y0q\222\036\264?s\302\031g\177\251\212?\207\264\3058\256=\336\277\027\256\225\214\036N\330?\301~wg\202\270\306\277\350e\273\234\210\323\254?Hd\303$\255\024\262\277y\030\255\034\'\211\320\277L\370i\365\035u\326\277;\216z\273K\223\267\277q\0338\266\337\313\270\277\375U\322\276}/\301?\341\276\337\367\025\210\267\277Brq4|\006\262\2777h\270\333[K\275?\200\347J\252{r\213\277Y\337J\252\263\n\326\277\320\324\013\337\026b\331?\021\r&\347\313}\310\277JJa\026g?\303?\363\202\356\006\204A\263?\207\264\374\031\255\033\325\277w\242\033\240\351\305\327?cB\201V\214\002\322\277l\326\311_\210\232\331?\017\254\037\004\345\361\316\277\227\275\0273\n\266\332?\216\310\332\353hT\312?\266>\227W\376\024\314?\032~\016\232f\255\343?\014-2\021\320\020\343?n4Do/\340\344?xj\007S\367\213\306\277\375\322^\021U\352\332?\372}h\370B\265\320\277\343\002\243\351_\320\307?\002\276\331\335\370\361\264?\210\240\351h\340u\322\277\347\001\257\017\371\200\256\277\342tn\357\036\014\303?\204\311o*\032P\246\277_\\\365_\3045\324?:\242\346\257F\202\211?\345\364&j\220\014\264\277\266\305\304Dj\273\312\277\373;S\320\310I\302?\020sJ\251\3362\332\277\3055\000\315\333\211\243\277\343\313\344m\300\301\260?\302_i\332\261\010\345\277)\346k\17733\302\277m\352\2156\020\007\303\277{!B\265\222\333\305?\035\217{?Q\006\225\277-h\370\200St\327?\350\227\374\212\367\230\314\277\370yb\304\227\'\335\277^(\233\336Z\326\341?\020\267n\314\217m\302?\354\334>\036fA\325\2772\\}\237\020\360\316?^\247\325\222\004\346\256?J\307x\0010|\343?\2607\255\301i\345\333\277#h3\341\216Y\337?q;%\037\247\353\332\277\270`\371\342\217\244\336?\341\234\260l\364\260\342?\037\3773\332@?\351?\237\22296\300]\303\277Y\366*\363\007&\340\2776B\332\321r\267\224\277\037\275\0028\241\270\324\2775 \003\261L\333\320?\300\264\302\\\2610\317?`\023@K\342\016\255\277\313x\203x\"\337\246?\273\320\3412\263s\305?=\356A\264E\314\225?K\373\304\355\000P\276\277\201\336Z\217\257\020\244?\306i\334:\272\271\302?\263__\262\262P\317\277-OC\315\324\334\323?-\020\024\245\355\251\320?-]H{\217\360\260?]/\025\233\262\375\321?\210*\321{\026\243\315\277\350O\331::K\276\277\304\234ll\272\315\317?J\265\312\025ZG\227?\315Q\362n\373\024\340?\356VO\342z\212\256\277%5\037e\360V\300?_\022ET\001^\311?$\020\367\304&\030\320\2776\367\201\234\357\342\242\277\231\356\033\244g\217\300?\361R\217G9.\247?\253D\273\222\226\027\302\277\326^\352R\371\"\306?\024-\365\034R\327\262\277,\262\344\006\333i\307\277rs\212S\000P\263?u\357\323&\363_\250?\363\346\346`\237\"\311?\306\033\266\270\344\315\276?\267\243\323l=[\330\277%}\316\274/ \332\277E\022\024d\235l\325?T7\357\207\277\005\324?\003FG_$t\241\2776_\350\201\'\263\303\277W(\033\240\023K\315?\202\023\001\346\254\350\333\277R\256\343\226\210P\312?\226!\354\351\270\020\313\277n\242\351\\i-\307\2779\371\250\373\035v\315\277\n\373)PUp\256?.\237\236\034\034\021\300\277\264\025=\346wW\317?\304O\234\0377p\325?\203c\000\274\334\202\321\277_3\365\303\274\230\321\277TQ\341?\361\265\225?MF \332 \224\324\277\022bd\'\025\227\274?Kv\034|\305\277\302?\303\014\361\326W\317\211\277U3O\306\320\020\337?\341\210\021\302Q-\331\277\323\350\326\233\230Y\323?E\272\032F\375\334\301\277\311#k,\326\200\251?\036\333\016\356\304\304\263\277\355\2318+\251z\275?\305\3010p\023\226\264\277wR\364\310H\307\310\277X\245\'lz^h?}\200-q;\331\237\277\336\260%0JH\325?\371\335|\267\271t\331\277B\375\375)\355\340\315?\344zxb\226=\310\277\204\021\013\227cq\271?\272\214w\322\301\233\327\277R<\354|\340a\272\277\216a\205\375\270-\335\277\207#\007\271\250\205\343\277y\001\342\261Z&\344\277\334\267-\272\346U\341\277h\232:C\036u\262?\256\274\000>b\253\221?\356\347,\351\265\360\311?N\303\371\220\270\025\245\277\361\365?pq^\313?\314\022\2744\362\021\266?\243\021\243\226#L\262\277$\366KM\263\'\227\277\364\031\002@\202H\234\277\351\226U3{%\317?\260G\320\214\230a\340\277c\227\253\240,V\332?_\331\257\322{\021\306?j\326\332&Y\363\304?\204\224G\245?j\302?\3729Mv-Y\330\277\207\337\356l\252\213\343\277/w]\361\356\357\303\277\200\323H\225\3168\334\277\234\235C97\332\253\277\235+\000h\364\304\215\277j\220C\210\375]\263\277m\232;B\237\\\300\2773\244!\234\355s\307?Q\207[M5\034\301\277\207\033\215\205\255\221\312\277X\243\213R[\234\261?S<U\030\233\350\277?\325J\326-\336\301\245\277\t\340l:\304u\310?d\243Z(\266=\314?\307\203D\023t\357\320\277K\237x\035~\362\272\277\211\362a\235\250\270\201\2772\010|-\346\341\323\277\312\007k3\027\224\316?HRP\274\224\253\321?\313\341\331<\020\366\322\277kM\2741\257\034\304?\222X\300\320\304\200\334\277-nwy\261l\274?\251\367?DE\347\251\277\335\2730\230\207\341\274\277\t\253q\355h\366\301?VD2\2772\206\256\277}p\341\265\022!\274\2772\025,\372:\301\326?\376\3257Jb*\272?t\256\226\373n`\206\277A/\332u\033h\331\277\006\304\n\250\360\210\274\2779\2774H\220\313\302?\274\312\305\265\246n\243\277\346p\000\221\321q\273\277,Y\210w\362\260\322\277*\337/W\241\232\265?\036}\007\246\334r\310\277\315\216\356\345*\350\323\277\330\310\252\275:\266\320?\0219\350\022\003\246\360?\004\025\315\347\003]\267?\204)\002\014|G\222\277\207\243UN@\030\345?\371\311\255f\3269\355\277\215\016\336\373^f\355\277\367\353\034$\252\225\327?(\327Yuxv\002@{\300^~S\177\360\277\372M\007\301G\365\346?\017\037\233k\t\276\373\277z\020`,\016\236\347?\3243jR\3417\347\277\354l}_\320\237\342?(>\262Yj$\355\277\037\016\\\002 w\267?H\023[-B8\356?\214\337\364\346>\276\351?\033\224\3243\335\007\340\277\256\243\214Ds\365\347\277\202\023f\372k \356?\260!\337\035*\\\347\277z9\277Y\2520\350?-\276\"8-;\232\277\262\365-\031{\002\240\277\306\232\005\204\006\231\266?\226\207\001\304\314\017y\277\327\334\3535[r\247?\262\014|[\r\273q?r\004S}\262\212\257?j}\225\0075\311\261?\216\3326\224\t\352\334\277\034\361\330O\212\003\326?\355i\206\245P\345\200\277\324\302\304\333\340o\222\277&\330U\336s\032\232?\237\235\312u6\315\302\277\024\2639o\227?\323\277\271\261X\375\025\251\306\277\233\352\371\211*\016\242?\377w\323\223\312\353\334?\313\327\213y\333\217t?\347\220$9b\273\245\277\212\346\244S\003U\304\277\275\374o\2227N\306?;e\274\004:\226\264\277\\\"R_\200\214\304\277p\376\337\234Y)\224\277\231\264$\375\203\346\246?\367\340\253}\330\302\303\277\224\305\3533\2403\254?\273\005#\001\320\204\317?\366\205v\\o.\322\277;dR\200\341\335\307\277\227\303a#\240\321\272\277\341\014\347\213)-\323\277,\336b<jk\307?\204.\347\324\204\244\305?A:c\232\203\242\303\277\0052n\310~6\330?\217\033Vq\364\343\344\277\303vOgI\277\317?Y\344\037\237\022\355\202\277y\200\372\231:\307\324\277\277\326\334T\372\365\317?`\240K\234\023\034\325\277\037\313|\250{\ry?\224k&\351c]\324\277\r\334d\017\r-\323?\340r0\321\367/\266\277\204XA\214\276\215\321?\275w\363f\265w\271?4\332*\246\nQ\325\277c\311\007\367Eq\247\277\276\271\262\307-~\255?\211x\032o\003\000\307\277,\020\373(+1\274\277\244~\'\277+c\316?\204\373x\021\025\032\300?q=\304Q\257\260\341?\374\316>\224\315f\326\2773\344l#\230r\315?\205\235[\256\007\340\326?RH\312F\2567p?:\202\2366\375`\254\277b\2248\202\345\310\232?[\315Lvc\241t?1\323B\263\024\024\261\277w~^K\t-\245?\n\304<\327\000\006\253?a\016\222\220\357|\326?\360\256D:\316\370\315\277\232a\360\257\006\354\246?\347\344t|\267r\274\277\240\307\323\214\241\316\276?\030\372\313\304\334d\307\277\313\201R\231|\210\270\2779r\225:uD\341\277D\232\320\313V\350\336\277\007V.\023\037\340\332\277e\021\000\026\310\253\341\277\227\223\244\266\"\005\244\277X\010!\240C\327\254?\363\325\035\242\216\353\271\277H\226F\307\261\224\236?H\037\233\006\234\013\273?\331\270\237\013\352\302m?\366\271\247\370\006\210\317?\222\355\213\375\2570\243?A:\310\241\313\222\232?bb\265\350\037R\341\277v{\365\237\253\322\313?\030!\013\004h\203\271\2779\306\200\030\317\337\275?\273dFm\346R\330\277\335\262\006v\370$\340?*#\026\203W\321\323?+\215\017b\374\312\301?\025\233K\332\334j\326\277\024\001\262\357(\343\205? (\266\355~\356\334?|\234\017\335\312\304\216\277\252\331\325\\\376\014\315\277\2655\344\026\014g\240?^\331\027\202\231J\253\277\203JQ\240\225\371\337?\023Z\330\300\205\354\300\277\376\'\261\236\022>\317\277\017Z\362b\360\237\310\277\300\023\03405\025\300\277L\244dh\3055\330?\037\215\307J\001\320\331\277\264\3470b\206\375\345?\310\206r\227!\305\320\277Y}\221\005N\212\331?\314A\220\271\346C\302\277Z\324z\372\303t\333\277BMu\235\345\272\340\277\333\331|\275\241/\265?\233I\373\361U}\302?#,\324X2\030\343\277@\225P\"/\035\316?\200\336\237\035\366@\324\277.\343u\031A$\310\277(\004D}\265\317\261?-\306\252\240x\315\335\277}\026\302\r\305c\265?\345\222aP?\277\276\277P\325\245h\037\315\263?\203\031\376\311\244Q\260\277\347_\014\035\253@\304?\007\026\367w\002C\313?g\225\330\374\273[\305\277\207b\257f\005\262\233\277\250UlD\201a\276\277\366\374\307\330\255\312\251?1*\001\222\225\206\320??K\266#\t\322\325?\341\000@~Z\262\244\277=#\326Y4\230\333?\246\232\234\312\356\343\306\277\256\237\307\'\312\220\256?\203\230\341Y\277\363\301?96\230\035A\241\322?R\365\036\235\233\200\275\277\270E#I3a\333\277O\323\002\031\023:\323?<\264@3\205$\303\277\032\304\374\325\204o\312\277\322\020\224\260Vb\314? a\320h\234\225\305?yc\272E\375\352\341?S\357\335\343\331:\334\277\345\323\000[\3637\321?\0045\350}ts\322?\3705\250\217\204]\243\277\n\210\034\252y\026\313?_\001s>/\004\343??a5\261\024)\352\2779\224\263\0235B\352\277I\'\212\303\346\361\264\2772\274Nu4\010\203?Ua\023\300v\361\322\2773h\0131\213\303\307?rO\022\221\004\353\254\277r\322\363Y\356E\330?~P0\340\027\324\301?y\026YHU-\305?\203\307jJX5\207?\202\306\325\367\322%\261?TB\211\216Or\313\277bW\030b\211\331\251\277\341\362\232P\302v\326?\331q\257\010b\256\322?`\363M\207T6\321\277\354\360\003q\370R\324?\253\213\003\3004\367\302?J\242\200\351*\340\305\277\373\372\246C\362#\304\277\211`<\2119\216\302\277\324\307\235\312\360\014\311?\307R\256Z\2549\262\277P\255\221rq\031\246\277\260\201\363\231G\352\334\277\347b\207(\214?\332?\365]\367\024)\020\352?\211@7\200\235_\326\277%{\3611jx\254\277\211\272\252M\362u\337?^\245\227$\344\007\335\277\037\206\3317\373\372\331\277(\266\246Q\021\\\344\277pMb\354k\215\343?\301\037\324\243\3228\340\277\"\211\370EI\327\323?\206n\364\273\261\271\316\277\322q\010\026\316\371\331\277\377\363\325$\304_\347\277\265p\3311\334\003\250\2773s\235\033\026\367\345?x\301?$\253\276\275\277]|p\301\0170\344?\255\271\306\000\375F\337\277\310\267[\355\237lz\277v\036k\033\375\363\260?\377\332\275Wj\242\335?\031\336\213o6\304\232?\250,\0303\003\321\335\277\000hD\340\206\275\300?\306\014\317_?\202\263\277\211\213\320h\360\014\345?\006\226\220S\306d\332\277\326d\020\344\206\351\336?\034c\031wS\366\264\2772\240\232/i\336\324?4\036\264\356t\246\303\277JJ\022Yp&\322\277\303\344/F\347T\340\277l@\206sEo\244?m\311M\300\365\n\320?\274!4\020Q\345\361\277\354\3541\347\3350\312?{\234fNZ\236\312\277+\312>$\030\311\261\277!\322 \032\260%\220\277\262\305\352C\345\246\307\277]C\207mm\273\301?\257\335c\2447\247\314\277R\245\214S\337\214\271?\317\334\032\2139\230\245?\371vN\342\376\034\322?>\030\323\244?J\325?Y\215\013\330\335\255\315\277f[\375+`\361\270\277\2450;Y\251G\250?\343\222\177\300\314\350\272?h\226_\345\325\272\301?\177\233\347\362l\265\334?q\343\323\250\367\022\247?\307 y\226R\315\317?\033\350a)K\215\314?`\366\351K\017\027\265?\377\315\313q\251\r\266?\215\031\344]\377@\201?\220F\017\340cx\277?\004\301\375(\022]\260\277\271\334\243\265\265\254\265?bj</\201\312\316?\350\002rB!\345\214?\223\205\247\250V\272\244?d\305\220\200\211\213\321\277\030\232\326c90\317?\364R\240Zf\006\300\277\301:\010e5\303\260?K\225\202@\220\340\337\277X)\206,\313\022\265?[\271\325F\345\262\340?\000HZ\365n\236\277?\360\373i\325H\271\323\277\355\030\351\365\267M\227?\320\265\227<\366L\323?\200A\310\035\244\333\313\277\300$\360(\020\026\302\277\341U\2147\343\312\272\277\361\251o\303l-\300?\313\366-\207\357G\274?\262\311\305\013\260\356\302\277\256\031\365\300\344j\311\277\356\3403\010\202\323\303?\'\377k5\303\267\306\277\312\275\035E}\030\323?\0141z\212\320\024\312\277X\306\300\305,\233\302?\317\010\306\033\273\306\316\277\243\026\227\003\243~\311? \375I7\273\321\312\2773\370\007\244R.\322\277iV!\213\242\027\304\277\374f\013\nw#\322?\360\0362\207Kr\323?\376\234\210\203\202\000\336\277\277\316s\326\331\025\325?\305\337\022\306\017\220\230\277\006^\351\246S\014\266?zq\313$\363\022\264?MQ^p\034\033\265?\366\217;~(\300\310?o!\242\234-,\301\277\220&\267\013\200\r\256?\315Z\022f\204\002\272?-1\356\273\004\223\320?\266:\277d5L\271\277YsR\n=\326\320?\267\203$\034\351\364\267\277\3104\332\010\350w\315?\336\372\263.i\376\303?\2010\276\304\013;\324\277\201\002\327UJ\354\322\277\323\217\341\366\013\234\302?i\314\371\356z\365\247\2772\002\306\267\237\321\335\277\022\003\006\330\027D\234\277\037\276T\256<\314\241\277Pn\312\311\316\033\362?[%(\006\307.\364\277.\234L\242G\220\370\277\323\250[\332\374\027\361?&\t\217g\230\023\361?\332\202\376Kr\373\363\277\273\356\235\'2\246\364?_\273\232\025\rg\351\277\264D\202P8\321\366?O\000\202\324C(\364\277\213\237\217\346\242\243\360?\353E\035\341U}\370\277B\270o\317\221\322\345?\n}\364\023\212\342\372?T\236\222\027\355,\366?jqy=3\370\341?\342\245{A*X\372\277\277\262Y]\r\222\254\277D\361\240\207\354\242\363\277\315!Q\023\371\254\365?\007\263v\323\206\300\314?\215eG%\364:\260\277\220\032u\200\260\371\331?-\213\323\200\010\310\332?C\234)\025\320M\324?f\302\355\254\212\216\253\277\2413>\261\220\251\277?\031\255-<\001\035\335\277P{\366\307\230\013\261?\0163\206\036+\"\257\277\374\235\252\334u\314\322?\346\252C\225\334\321\324\277\320\372\323\016\251-\341?\2407aVy#\321?\0031\366\323\260\257\270\277\322\262\356\327\005\245\310\277\202\305[\000-\322\203\277\r\302\343\266\314\315\332?\267\240W\313M\253\306\277\372\227z\013\356\264\247\277\321\366\227(o\315\323\277\317\220J\245#b\317?\300\370@RK\250\312\277Z\322\222\2745\021\275\277B8{\211\244y\326\277\307?\330\247\014\222\330?Y\244oyQ\274\315\277\316MI\243\302\206\326?\237\352\363kx\375\274?\252\336\007\372P\264\313\277\345W\277\203\345\302\253\277\372!C<x\276\255?\241\313\313\373\310\252\312\277<\007\232&\234\346\261\277d\325\004\251\360\225\252?#\"\330_\3613\265?\252\236\030\304`\227\343?\030R\335\371\317U\323\277&o\355\352\255\303\322?\312#@\231u\224\322?\211\032\335\203t\265\303?TG\313\215FN\313\277Q\247\377Hx\247\321?\rC\340\'.\357\270?U\025,L)\213\314\277\266,V\000^s\322\277<{\343\212\020\251\307?\336\3064\3515\037\340?i(\335\264\250\030\242\277\221\325\271\356\316\352\307?\345\006\210\376\317q\261?\257Hb\266\332<\333?\314\373\337\210\226\344\275?\332\203\030\310\'M\321\277\010\315V\224\022\022\301\277\020\312\362\210\313Y\314?\206\006bl~\335\271\277\211\251\025\024\271\220\362\277\277\030\352\210\017m\303\277Ju\316C\274\005\306?aQ?\014\254Nv?\240\tuX\263\362\235?\026\317\003\341\334\004\320\277\270\333\276\374|\363\300?\273\3424s/\312\320\277E\322\223e\027o}\277Y\341\000\357\212\347\251?yn\312f\275\260\307?\235\003\257J\214\232\325?\311\032o\343a\362\325\277\023`\01011\230\264\277\377\342\274\254 4\265\277\321/\355\027\317\373\263\277\310\266\017\243\r\316\321?}B\304\241\244\326\333?\003\222\035\226\017\356\250?\260\335\321\312\354\211\242?\3105\302\2120\005\316?\031\007\342<\237Y\236?|\225\312\264\031\227\262?v\244\300.\3400\242\277\253\027\236\367l \260\277\232f\211S)\230\202\277\312\234\271:\232\336\236\277M\001\342J\274\270\312?~\250l\017[\216\204?\006RZ\255AC\303\277l\224\371?\303\214\264\277/<\235\370\215\310i\277&f\325\305O\027\200?9\254\270\274\304e\262\277\355Z\352\021\262\270\243?\210\250h\366f\323\230?\366:\036\273X\023d\277\237\344\334L\230}\307\277\014\235n\361\314\363\272?U6t\257\rC\303\277\363\242\375\361\2578\321?8S\242=v\253\224?\366A\267Ks>\271?\177\017\233s\236F\276?\233-\217.|D\301?\361\332\327\220\177&\321\277thYi+\254\325?\2369\351\357\252\313\272\277y\013\242\371\347\355\263?\2743r#\235\334\256\277@\204\321)\233\255\313\277\273\027!\312\234?\343?\303G\003\341\222h\332\277(\020\227\330\034kw\277\tGG\243Y\026\301\277\266-m\036\\f\336?\004q\001\250\225k\332?\341\210\247\246\354$\344?G\317\331=:s\325?\254\354\334\255\006\004\355?\330\334^\333\246G\325?\240\031\033S\351\274\261?l\357\264B\003\206\267\277\2139\003\375\307n\263\277i\300Q\267\347-\273?\323\303\317I`\270\231\277\264\336\350\260\373F\274\277dK\252\025\003\036\244\277p\007g\335\212j\237?\324\306\211cb$\277\277\325`\337(:\330\317?\203\244\226\274a\352\312\277\345\022\026\260\2153\321\277\301\372\302\347\233\240\265\277\343\322\354t\362\311\244?\2359\232\307\'\251\276\277\331\252[U\346U\277\277\342\016\266\270*t\325\277\266^\010\001.4\323\277t\211\315$\325\217\327\277\212\206\344\351\243r\316\277\324\033\377\332(Z\213\277e\244\352\373\2117\265?\204\330\n\347z\323\316\277C\323\261\305\342:\305?\022\300\350\233\265Y\266\277\220\023$\226\265>\276\277\017\214\272W\336n\344?C\331\226P\274Z\246?v\2464\231\325v\302\277\277\n\361q?\215\357\277\027\205A\367_\316\337\277\273Z.\322;\375\307?\244G\360\367\250\202\255\277\310\2126dF\260\325\277\231\nH\035\221\255\320\277\200\205\351\022\324\204\314?\227%\022b\022E\335\277\320\303W\352\267\207\304?\366\036\025\255\023\014\353?.8\213\271D\320\350?[\\>\215A\373\300?Ur\360\"\214+\251\277\240!\221n\366\"\247\2776y\020G/\347\244?\002\376\036\177\230\255\256\277\202\273IB\354\341\253?\003\333C\225\310S\316?\241\273N\215\361\331k?\307~\222\032X\326z\277\255\3765i\230\254\325\277U:=\264#\025\240?\013\205*c\311\277\265\277\276)\337\367\"\365\255\277^\234[\206\271\242\261\277[\360\307\337\004Z\274\277\nsJ\257#\321\246?+\203\201\315\200\315\271?\317+\013\240\326\227\217?5\024*Uox\305?\200\304/\014\227\207\337?P\324\314\010\314\253\263\277\205\212\016\317g8\277?\204\002p\0364\303\337?d;\351\254\332$\340\277\313OY\312\030\203\303\277\2704\220)\013\355\336?\314\371\205\371\206\254\271\277\270\272\273\321\345\004\336\277\224sJ\332\256\177\334?\223a\333\200\014|\321?9o\221e\274M\231?\313\010\0379\201U\301\277<\354\236\212\037\'\330??\032\203YRv\340?I\335\371R\224\354\347?\020\341\250\304\303\247\332\277\375\317\314\305\030\334\245\277\026\301\006F\216\210\343?\364\364.\364\345N\337\277\205\264\356\266\301\336\351\277\224\276\203\315u$\337\277\013T\376\231\347^\335?\315\262\264;E\260\304\277\024\345\241x\2207\255\277\006\350\260\330K!\236?7@\203\315GF\275?\r \032RS\035\307\277\214\257\302Om\021\261?\202\205.\025GT\300\277\2249\341\037\027\257\312?ow\300:\340\252\254\277\211\037\r\232p\263\301?\340\214\267\317\321\014\261\277\201\203\2154\241\026\240\277-M\333\200]/\271\277\321i\346\201\322K\243?{B\r\314^&\304?A9\223\025\200R\243\277_\"\367\215\201\242\304?G:R\003i\272\313\277\340\033\343\334\310\001\265?\325Sy8\245\362\224?\221j\335O0Z\300?\264a\362m\3565\261\2770\323k%\262\"\244?\200\223\220Kk\343\300\277M?\3530\311+\271\277\214\331*\312\257\026\232?\032\374\370\216\370@\237?\345\006\257<\302\016\304?\013F\254u\004\353\334\277\301\350b\215\307\354\274?G\244\326~\360\342\264?\264D\264zf\267\277?\310\313\206xl\013\244?\341\343\272\377BR\326\277\362\025)\033\257\201\354\277\215\260\006\211\366\375\243?\2368\030;R\353\330\277\re\0378\276\327\347\277\301\311\027H\231\224,?\276\376w\374\253\222\225?j\252\324!\365\346\204\277\220\336\271\214GEX?:\325\032\246\360\373\242?\000\324e\370#!\220?g^\273D\221\350\276?\322\241\3604\257v\204\277w\370\n_G\332\261\277ah\332\003\220\014\251\277\324}\376\352(\033\252?2\266\352MY\317`?gq\3412\264\242\262?v\233\370E\236I\277\277\223\335\214O\277\351\225?2\202\213\235H\225\230?Z7\265\204\2406\240\2776FO\006_\265\303?2\210\217\203(]\322\277+\364\031\247|\017\257\277\2310\241\313\314\266\246\277\335\314\361\310\013\324\271?l\277\267\006\334T\276?=\0342\330\350\222\277\277\021\302\\\324t\207\242\277S\220\352c/T\303?\036\353\301\034\271\364\260\277\331\225\020L\317\377\300\277\3371\034\345X\230\272?\274\272\007\024]s\324?\305DW \370\030\273?\266x\275\000\300\210\275\277_w\355)\3100\267?\333\267%\2141\223\214\277\222\327\214#=\266\252?*\350\262\221=B\301?\210\373=\353\275W\312?^u\374\030\336y\263\277\243\214\031%Da\334\277$\034\025\245\351Z\337\277\211\007w[\341\242\215\2770\370\010\245{\234\260?2\240\0239P\037\246\277\002\251H\344,3\251?W\274\352\261\2171\276\277\306\024\203\207\001\032\276?F\342\214\233\302!\327?\2528\317+\322M\255?k\3268\240\252R\263\277\025\356k\235\275\026\320\277h\267\234\264QL\267?\202\021\367N\276,\324\277k\242O@8H\272\277\2023\371\002/J\263?vQ\\\222n~\311?*\350\331\032AA\302?\302V\002\"\361\002\234?\345\346\257E\036?\303\277J\020\222\356DZ\277\277\362\353\301pQ\353\325?#\3261n\240\037\275?[\002\201\312\275\"\301?\237R\302\032\303\225\363\277\320\231\211)}}\357?\332\352\356c\354\013\344?X\222\007\277\241;\365\277\253\212\341\352\206\307\341?\345Y\231\001g\373\355?J\222E\307EJ\354\277WK\2312{u\354\277]!\250\014\347\010\362\277\244\037|\360\326\n\352?\270\232=\272\360\277\354\277\363pi\255\2701\300?\353\023\322\324\252\325\357\277l6\363\204\361\030\337\277wz\370_\373\247\354\277\300\027\271\375\316\004\336\277\217\002\256\225Rs\000@\245\302\217\304\2442\005@\345\237\3553pQ\353?\356\254k\"4\241\344\277\207\351\251P\320\010\210\277\361:A\016\303\237\221?\246P\010\226\334\361\212?\367M\000\\\266\236\237?\306< P\352\247\275?\357u!e~=f\277 \257\333\347\204\256\253\277\013\304\352\350\226\003\276\277j\203E\332\3307\271\277\321\202\210\2731\353\265?\2157\r\316\231]\241\277=\211\t\327\277?\252??\367\314zK\311\246\277\305fp\304\017\213\212\277@\205%`\253\205\310\277\031\367\202gX\363\251\277\343\004,\224\252b\301?\367\240w6)\320\335?N\227\300h\207~\236?+\221j\225\246H\246?K\217\004\371\0314\241?\227/\312\266$\r\212\277\327\256Bk\335\342\265?\267\033\371\013x%\300\277!\3225\004\027(\310\277\002KKIEl\233?R$.L\027\222\300\277\223K\275v<\346\323?Iar\200,\372\317\277q\366\000\n\344.\316?0$\263\272\027\031\232\277\320T&<g\354\307?\226e\372\357\037\343\321\277h.%!\315[\232?c\244\333\\%\337\330\277\234:e\253\335/\334\277\237\3634\273E9\325\277\225\332\352\254W\020\333\277\300r\365\342+\205\222?\270\215\376\253\035P\246\277\013#I\210\313\331\265?h\t\347Kn\320\224?\223\262!\020RM\301\277\274T\352@TI\307?yh\321\2456\335\300\2776\264\210\013ds\233\277\241\225{\206\344S\240\277\375(V\031\326\245\305?\277\310\220\203\270\022\325?7\034\365Z\\=\320\277\253\273\312g\240\214\223\277\004\207po\376\267\241\277w\036\2740\rxa\277\347\217\325\006-\220\311?\332\222\032\r~0\342?\222\233\013\tZ\323\301?\005\360L\301p\243\307?i\323\017\031\363\227\324?\205\304\357\337\277\235\263\277\364\342\320\344\326\331\220\277l\206\242\245<g\254?\376~R\300\017ls\277\305\020/\274\315\315\273?\313\024\030\243\360f\262\2779W\336\277-R\300\277\"\373\356\241+\263\245\277\213\360h4GD\275\277\242R\325M\215\325\274?\373/\307\311\003\005\324\277<\004Kg\327m\263?\221,}\3675]~?\273\272\004t4\341\277?\220\244RE\2219\277\277\304a.7{f\316\277\226+H<4\250\347\277S\314m\243\224G\240?\347\377\366\022\005\251\267\277<\302\026A\351\274\341\277e\265Us\037\227\203\277~O\275YZX\222\277"
      }
    }
  }
}
node {
  name: "layer_0_type_0/matrix/read"
  op: "Identity"
  input: "layer_0_type_0/matrix"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_0_type_0/matrix"
      }
    }
  }
}
node {
  name: "layer_0_type_0/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\267f\005\024\325[\300?\251\376\203%\252^\317\277\217Wx\377GK\330\277\301\330\312\224x\367\317\277Q\370R\366\022\266\366?|\233\212Q4K\311\2772\372\002Dj\314\315?[\312\222/\233\022\364\277\014\362\244\2423D\332?\347\334\360*\303\202\330\277\266\222%\221\250\363\224\277\004\266\\mr\375\342\277j\261\347]7\260\261\277Z^\004\306k\223\357?\321\205,\2519\256\340?dc\250\230:\335\332\277g\301\033O\013\310\344\277\n\204\374\030#\236\371?4\003t#_~\303\277?\037\210\275\177f\325?"
      }
    }
  }
}
node {
  name: "layer_0_type_0/bias/read"
  op: "Identity"
  input: "layer_0_type_0/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_0_type_0/bias"
      }
    }
  }
}
node {
  name: "layer_0_type_0/MatMul"
  op: "MatMul"
  input: "Reshape_14"
  input: "layer_0_type_0/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "layer_0_type_0/add"
  op: "AddV2"
  input: "layer_0_type_0/MatMul"
  input: "layer_0_type_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_0_type_0/Tanh"
  op: "Tanh"
  input: "layer_0_type_0/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_0_type_0/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "layer_0_type_0/Reshape"
  op: "Reshape"
  input: "layer_0_type_0/Tanh"
  input: "layer_0_type_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "layer_1_type_0/matrix"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 20
          }
        }
        tensor_content: "\275jV\331\210\305\363?.\034z\261\372\204\333\277\010\221*\321\204e\343\277\014C\004\203k\371\341?K{\005\003\200z\333?ve\333i\326\215\345\277\330\250\242^]s\337?`\367xu9\306\326\277]\330\036e\275\372\343?H\362\021^:\225\344\277\014\271v\346\n\347\245?\'S\207\274,\255\313\2772\234\017\324\355l\354?\030\360\275\341\310&\321?L\273d\200\317\213\331? \306\355\315\351p\327?mIV\266xM\337\277#\364l\213\303^\344?\032$:\263U\351\346\277\321\244\240N\213\366\332?f(\003xi\312\321\277O\216O\022\nr\324?\231\357\210\242{\346\307?\371\361\376\217\214G\332\277\276\270\300\205/T\327\277\344v\343\2735\206\330?\260\210\232\302o\353\315\2771\265\347\371\231V\301\277\357k~\331\263 \335\277\224{?\032d\256\311?\276DB}c)\304\277|I\305!\201\221\331?B\353\227\202\326\246\335\277k\2076Y\325F\340\277\300\367R\354%\220\321\277c\261\'\335\305\032\340\277\002j\232\341\377\212\344?I,\204\312:\353\242\277E7\230\330\203\304\320?\375Q\255S\277\335\325\277\027`\272\206N_\304\277K\335\364\304YK\324?{ol\005\332\315\300\277\320\260{Y\353\205\323\277\306\307\352l}M\344?\307\342\016\203\256-\242\277|\361s]\332\277\320\277}\367\266\233\207\365\342\277\037\343v\327H\\\200\277\307\n}s\325\255\317?&8\262\3745\242\275?*6\375\3150s\336\277k\266\235\202\027\013\322?\352\035Mlqk\340?V\246ju)\202\326\277\361N|\325\204o\313\277\241\031\023\375n\324\307?\236\3407\\\023\206\341?\314D\031Unp\304\277\004\373n\341\274I\256\277\230\017\000\355\363\277\331?\265\376\261[ \373\332\277\241l8\'1{\353\277}\261t\230%\375\326?d\212$\233\323\310\201?P\035\340\\\301v\313\277\264\276R.\003S\324?\276f\376\006\374f\266\277<\345\322\235`\241\335?\213\230\230\240\377p\245\277\246@\324\314\236\251\322?\317xA3`[\304?\310h\314`H\372\263?\036\t{~\312`\242\277\357\254\370\327Cb\346?\204\311\207\213y\265\317?ilz\177/\224\321\277\210&\3573L\360\263?\037~\014A`\207\276\277\372\371\221#V\372\341?\377[\273G\"\257\273?_L\007\025C\352\305?i\226\003]\320\005\261?o\317\373\231\025\215\302\277\304@\255B(\306\326\277_\230\255T\344\262\332?\356nxE%\035\214\277F\242\3349\306<\323?l\233\366\004^;\322?\306Q\007\032\t_\322?D\207Jb\035\034\323\277\303\332C8k\255}?|\013\252\213\026\353\263\277X{C\307@\267\303\277Vd\250\274\n\030\320\277Y\302\275\'<\024\227\277(\315=\224q\271\321?A\n\330\247\322]\315\277\216\225\335\372S\203\336?\237\021&n=\245\322\277Z\rY\370)\231\327\277?\235!\343\224\230\315\277J\355\003/d\314\266\277S\032\3074:1\314\277\314\020>\313\342L\336\277d\030]\232\021K\272?\315$\205\275\323\020\314?\316SW\\\372\236\266?\010\362j\324\357\255\302\277\371\261\t\244\304\275\314?/\356\004\2446;\327?)\321\362\350\312\241\334?\302/vc~\353\316\277?\345\241\274d\"\306\277\303~\221\272\207\320\270?\332\020\037\203\301>\333\277\007\362}\311*k\326?=e\331\257\243\216\340\277\007a\037<b\014\213\277\227\224\276\374\254%\255\277\252\332)\031B\235\330?\235\330V(FV\322\277\026F\230Z\004\021\264\2770,Q\234\310\263\326?}p?`\360R\312?\244\373\037\276y\025\307\277;\325\240N\313=\310?\276\256\325U\215\221\271?d5\031a@\261\310?<\253\203\272DU\324\277\342\273\337\025\034`\244\277\263\227\3438\337\242\251\277$\362\013\324\241o\331?)\205\220[Pd\273?\266\201\376\223>\355\270?\364\231\261k2\361\336?\363\024\277\355\371^\330\277J\307\316\204n\202\322\277\255\265!\263\353\211\334\277\302\304T)\302\235\305?-\304\241U\357\333\316?O1|\2776G\253?\353\270\353+\223\352\327\2779:\231fy\256\313?<\3311\307p\213\314?\315\020!j\237C\274\277\251\356\225U\031\216\313?A\004oG\316\252\324\277A>\323\245$\350\260?1k\373\340\216\201\302\277?\344%x\235\203\313?\207\344\260%h\231\310\277\241F\331s\215F\323?)e\337\370r\232\325?\242\327\242\337\335\027\247\277P\275\002\276\267\010\303\277h\005\3702\2179\327\277\231WO2\006\021\330?o\004\023\200/\213\270??\373\270\375\217C\276?91TZ\227}\336?\016b\245!p\232\217\277\201\213nRG\333\301\277m\266\030\373\362(\255?\246~T\246\315\366\336\277_\2128Rg\376\303\277\350\315\233\007\007\276\266\277\3266\305Y\021\324\344?\016a#\3234 \322?\365\007RV\214>\303?\n\340\2374\375\216|?\236F6\345\313\304\341?\036\023\207b^\336\334?\233\353@\217}\016\343\277h\356z\3166\363\276?\223\244\030Z\243\367\271?\2236(\312\206\016\215?Us\335\363\036\332\347\277\206\177\207\304_\210\260\277\302\020_\202\275\347\252?\262\327j\227\013\206\322\277\007yQ\232ku\322?\217\363\032\316h:\332?\300i\270N\021?\310\277>\364\023q%\256\344?\203\n\036\242\242c\305?4\307\307\323-\327\332\277\343\322.\244\264y\340\277\235\226\263B\213\221\324\277$:\233\200.&\324?0\237U\\\337\374H?\362\000k\252\227$\344\277\267\326\013\373\035\232\266?\302\255\257cG\243\343?#\337}\2153 \324\277*\302\351\"\275h\336\277\\\356\353\2225=\270\277\215G\320q\030\031\342?^\343&\215\346\351\256\277\325?\256\272H~\223\277CI\266\224\274\302\331?\223i\300\247+c\311\277T\2750\202\303{\355\277\215\t_?\342\352\350?\272c\214!X\322\321\277\017\376\024\364[\320\331\277\212*nA\341Q\326?T\0064\322K\000{?Dj\322\034\027\"\347?\374\021\244\007\263\217\347\277\230\324`\032dO\260?@5u3\353\002\205?&\024\264\330\342\r\311?pl\326\210\244\377\260\277\306\377#\245\311w\324?\350/r\0175E\313?\231\335\323\324%:\240?\'\014V\304L\031\317?\3130AQ\301f\322\277\304\0107\03163\247?\246\033\375\200%\347\322?B\324\010:w\360\257?z\032\214\010{=\325\277\221\025\020\036T\032\256\2770\237\355\024!\322\342?/\376\333\323#,\306?\376\243\021Vx\024\210\277\263\235\002\033\223U\315\277Q6\224\210\323\216\261?W\211h\253\270\355\235\277\326\364\256+\330\312\304?p\337`\270\303\215\274\277\017\332OY\330\274\311?\347H\327T\374\352\335?\304F\270\020w\177\257\277]\022\r\n?\371\303\277\264\347\316\204,H\302\277\321j\373\024H\250\337?\005\315AHHV\320\2778\263Y\273\376`\225?)\351Y\273x\351\343?7\367C\213\3607\344\277\347\373\210\"\247C\351\277\210\221<\221\233\275\323?\211\237\362G\307\232\303?\364\235>\177\255\257\322\277O\355V\360-K\345?!\'\2672c\257\230?p\022\301:\337\000\337?t\372\234\302\361\206\351\277\023\243@\324\211s\332?\271\rdx\256i\302\277R\020\300,\317?\353?\036\034\376\300m\023\310\277\367\237\345\007NA\325?\240p\254\233A\177\345?\025\341\345L\245%\265\277=;\321\351\315\331\321?$\361n\003\344\030\333\277\303\364\311\342\374+\342?\003\255\345s:\253\245\277\271f\217\320\330*\312?\027\023\216\0234\370\304?\230\225Ed\354\'\267\277\365\371\265\3425\272\344\277U\377q\013\202\177\264?\031\350@m}\"\272\277-\030\243\202\3234\342?:L\373\233o\204\246\277fg\007(\004\010\260?=[\315)?\020\314\277w$79w\362\326?%\257Iv`\272\301?W\225\222\212\300.\335\277\375a\226\024\0232\314\277\231:_t\373\270\244?\364\3006\301a\324\270?\305\257\224Jf\024\333\277|V\232\247\322\320\307?\275\"Y`v\371\264?\326U|4/<\317?\307\231Nep\307\307\277m\342\362U*R\312\277D\246Kd\177\361\307?\324\033\2501\253;\350\277\272\324[\346\210\266\321\277\214)\'1\t\347\244?\r\376\354\021\370\241\350?\361\016\256,\203\245\224\277\262\0103i:H\322\277(\376+\013?`\301\277\346-&=b\004\340?\266X1\245\254-\333?[\374\022\252\243\264\336\277\357=\374\314N\034\274\277/\340\205\3124\341\316?\n\233\255&[V\300?\263\201\206\221\365\226\340\277\323\256\252\213\t\233\202?\372A\374\224\316\\\323?\323\347@\345\363\000\200?\273\332\311\341\243(\341\277\2476\270L:\256\312\277\254\360dei\305\300\277\006\273\336M\334\263\346?)\340#\377R^\315\277]G<w\353\377\334?\000)]\365\301\313\353\277\250\276\352\367\n\204\331?\247\336\t,\354>\344\277\003R\203\206\004\366\350?\241\332\271}#\210\310?\247W\024\256\3566\256\277;\262\020\033\262\324\330?\243\227\023\234\231*\346?\014\224S\251\212h\324?\226\257\225\251\330\300\303?\304\273\r\340\r\321\346?\227L\366\364L\225\312\277\311\230k\264x\027\342?\265\364\n\333(A\334\277\227FF\234$o\323\277_6\315u\215\267\276\277W\375\260\227\331\256\326\277\306\2054(\317\231\320?fC\014\271\267<\246\277\235\216\342\241\272\257\317?\303\317\312\324W%\324\277\301\360n\213\267\264\246?\r\314\270\266\350\207\342\277\354\267U7:\001\355?\007\245\336\217\216\035\317?\350\203\021d\201\310\335\277w\033\237\323YOc\277\002\212\301H\303\335\351?\274\325\003nx\323\331?O\371/\355\020\355\347? 4\263c%\202\341?)\313\245\345\321\026\341\277O\314\025\332\234\272\325?\027\002\325]\0036\312\277?\241`\"V}\270?\271/\023\217\024\372\321?9\375QV}f\250\2776Z\277\223h\216\304\277l\233\2249\332\002\302?\031\346\267\207\267c\276\277i\265!\374k\345\306?G\301\332\275r\025\342\277\023\034\335\032\323o\323?\345M\241\255\376\215\331\277\263\003\236\3471\366\304\277<\027\271\235\2731\322\277fA\360\221$w\241?\355\210\347u\262\007\325\277\257\\\326\237l\244\303\277\357\261\365>\325!\314?\310\031!\005\230\350\315\277\302\364\222\316\317\235\340?fr@\341\375V\274\277F\310/\347\032C\343\277mf\201g\035\222\315?\303\354\t\251\341\343\307?\276\215\225G\300\000\337\277\236\354\000\313\377\354\230\277n<\n\266\264\255\267?\3074q\204\231\310\266\277\031\266\205\347\335\224\255\2777vnrc\253\336\277\254G6\360\342o\312?\273\220}<\021\035\265?h\014\226I\021C\246\2775\223\204\332\375\n\343\277k\322\220\177\266\'\307\277}1\024n+\236\312\277i\215\207\014\272\220\331\277i\332\242.\314\350\313?\025\257\311)h\244\334\277\247J\331\317\326o\312?,Q4F26\327\277(\002\t4\013\000\305?zCL\242\031V\300\277i\021-\244\234<\310\277f\000XH\260\272\263\277L\374\330\361\247q\300?\321)k3M\350\330\2772V%\312E\301\322?\242k>\227\345y\325?\2661\177\034\036&\321?\r\016\\\257\025\265\314\277\350 \236\344\3457\264\277q\003\330>!\343\247?%0\200g\332\255\272?t\000a\212[\304\334\277\037\203\277\260j=\311?}\266\242\236\350:\332?j\201\333O\024\212\326\277\240\366\273\003\001\351\333\277\206\315b\315\376\361\247?\345\232#A~W\305?"
      }
    }
  }
}
node {
  name: "layer_1_type_0/matrix/read"
  op: "Identity"
  input: "layer_1_type_0/matrix"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_1_type_0/matrix"
      }
    }
  }
}
node {
  name: "layer_1_type_0/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\217-s\241\353h\304?\266h\312u\323t\302\277j\351\264\261PV\345\277h\002\304_\273\261\322\277\216\376\227y\270\255\373?_)\332S\254\002\320\277\366\374\334l\366F\311?7\244\235\200\335\324\366\277\344 \\`\327X\343?\264twc\026\255\345\277b\244@\364\201\265\264\277\002\370{\006\212\204\357\277Z\000\372R)\276\224\277\366\215o\201t\202\366?\347\037\303\230D\216\333?]\307w\274\254S\322\277\255f@o~w\351\277\351\235\002\271\223^\000@\340\\\210\252*}\255\277F\310\256\3271\036\327?"
      }
    }
  }
}
node {
  name: "layer_1_type_0/bias/read"
  op: "Identity"
  input: "layer_1_type_0/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_1_type_0/bias"
      }
    }
  }
}
node {
  name: "layer_1_type_0/MatMul"
  op: "MatMul"
  input: "layer_0_type_0/Reshape"
  input: "layer_1_type_0/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "layer_1_type_0/add"
  op: "AddV2"
  input: "layer_1_type_0/MatMul"
  input: "layer_1_type_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_1_type_0/idt"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\021\207\235\335$\024\347?\334\225\032N\224\305\321?\2461e\256\316s\332?7\341C,N\201\256\277\216+\350\262&B\322\277\271\023\'\250\006\202\326?V\021@\333\360\374\327?\021X;\360:E\316\277\312\253\003\230\252\335\324?\245z\352\020\245O\345?]5\247\321\313\211\335?Xh\214\277o\303\326\277_\311\311\323\344\254\361?\'\346\324 \355V\326\277\265\007\320Q\363\014\326?\216\202L\014E \330?\3139\3614)\311\331?-\255\216\314#W\326\277mb/,s\342\327?5wU>\366\230\323?"
      }
    }
  }
}
node {
  name: "layer_1_type_0/idt/read"
  op: "Identity"
  input: "layer_1_type_0/idt"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_1_type_0/idt"
      }
    }
  }
}
node {
  name: "layer_1_type_0/Tanh"
  op: "Tanh"
  input: "layer_1_type_0/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_1_type_0/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "layer_1_type_0/Reshape"
  op: "Reshape"
  input: "layer_1_type_0/Tanh"
  input: "layer_1_type_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "layer_1_type_0/mul"
  op: "Mul"
  input: "layer_1_type_0/Reshape"
  input: "layer_1_type_0/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "add_3"
  op: "AddV2"
  input: "layer_0_type_0/Reshape"
  input: "layer_1_type_0/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_2_type_0/matrix"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 20
          }
        }
        tensor_content: "\312\234\033\311\315\177\365?\'\273\021\340q\321\356\277x\252\350C\235\251\362\277\323\211\364@\014+\340?R\020Ch\210\007\251?\214\232\321Y@C\345\277\307s\233\337?\230\354?\340W\203dP\263\323\277\227&1\250\250~\363?\372\332u\276t\373\362\277u\005\007\037K\372\346?\027+\272%\340e\304\277[Xa\324\253\302\367?\234X\3654\257\006\321?=|\014\374\257\t\362?\277\275m\242o\324\262?2\267\234:\023o\317\277\364\253\314\233P^\300?^\340\342u\0238\365\277\242z\177\301\347\260\361?\327\277w\010\027q\323\277\023\007\260\013\233U\331?qqy\222L\227\325?\032\334\225\255\021\377\332\277\205\233\373[\"\357\311?\362l\257\205\033@\321?s\341\307\216o\r\323\277\373\247-\324\177\226\276?u\250\255{a\252\340\277wf\217\\#\252\322?\357<\264`\314\302\333\277W\336\260\344\2165\222\277f\361+\254\204_\334\277+\274\030\332\'\267\350\277\213\326\"+\225\275\334\277&`\314\'[K\331\2773a\306JP\"\331?[\005y{\031\036\332?I\336\373\336`\033\326?\207\360\370\211\325L\335\277\341\334\241\010\232#\322\277\346\324\353\217\311\251\332?\206B\373\r\302R\263\277#\265\027Ud\212\320\277z*\255b\270[\340?q\024\332`\341\026t\277\000\371\370|\233\354\325\277;\010\025\313K\246\327\277\240@.\375\013y\245\277\364\233G\"\005\006\323?\256`\341DQ\204\273\277\215\224\021\320\306\330\303\277\241US\233\317c\310?\253nT\2149\237\325?+\316^Qo\332\332\277c\021\377\321\356M\312\277-\\l^\243X\246?\273!Wc1\257\322?\177\372d\200U\021\220?|\213\273\241S2\254\277P\322\323\224dx\324?\001$e\241\251#\341\277\237QU\250\336k\334\277.0U\3372\333\341?\025j\216\014\270*\274\277\351H\254\262\001h\342\277\322\347\371/\3249\332?1&a\214\200\203\242\277\356\034\336{\246C\324?$\376\262\303t\032\300?\230\216\016\035\221`\323?\226Ig\304\242\004\277?\335\231\355\240\024\032\244?\252\320|\377\376\212\252?C\340\251|\000\005\350?\3469U\342T\353\317?6\327b\300\230\217\307\277_\325\301a\203\256\277\277rR\\\244\306\340\306\277\307\\\242\321\024\226\342?x\317\257\233\253\245\323?u\351\370\322u\211\277?Kj\362\261k\317\267\277\005\256Vq\245\320\263\277Zf@\021\nf\342\277P#\021C`@\340?u@\314\337\231\017\234?\310n\252Q\'\204\330?w\251V\260\310\334\322?\364\t\023\227\275\372\313?/\2029\375\313\003\312\277\245/e\365\310a\266?\r_\2644\014\210\263\277\371\231\341\306\033\303\320\277\360\032\\\016sM\307\277\336\026\276\004!\247\250?\324\311 \202\313\374\313?u\264\211/E\331\307\277\311\004\206\242\204\242\317?m\210>\276\367\313\317\277\343\001\"\231\261\366\340\277\321~\302\377D\361\310?\177\320M\271\350\n\340?2\344\340t0\306\310\277OD\025\000D\364\305?\356B\036\356Aj\313\2777\257\235\021\005\033\307\277\201\306\236I)\001\332?}\310\035\375\0340\344\2774\376\322Q\315\375\350?i\032\271\030;&\270\277xf6\365\013{\324?g@\251\004\333J\342\277g\212\253\332\345w\331\277\345\372t B\001\344\277NbH\257\001\271\314\277\212K6w\3636\320?t\351\222l \204\270\277\311q\270\340`3\327?\2467g\211M\302\343\277\311\344\034\340\016\245\336?\247\207k\263#$\336\277\341\376;\204\333\250\305\277\'tx;\323\003\327?\310\337\326\223\256\203\306\277\320R\026\323\325.\306\277\236\372ax\210\201\322?#\370{g\034\313\262\277p\212\014\323qq\321?\006{j\033\252O\331\277\001\215\254\325,\302\320?I\025\337\313SY\234?7\230k.\273Q\334?\372\2260\006\307\206\302?/\214\035e\363-\317?\215\345&\361H\266\331?a\2503q\014Z\341\277ZaMD8\037\340\277\r\3334SG!\342\277\331\022\272\007\231\223\325?\342/\322\034\230\247\270?\356\010\322\356\034`\277?8\230 \356m2\321\277\273\201e\237\213\372\300?\010\372\004\270\034@\324?\311\231d-\222\253\273\277\372\300\034\277Y\211\304?x\247\030\'\214\010\331\277\356\2064\022\272)\246?l\001jq\215k\266\277\265+i\322\220E\271?\363Ol\313\364g\323\277C\233=\307\244\'\325?w\3752&du\333?O\010n\031A\350\275\277\365M(4\315s\312\277*\2660\317\355G\306\277:>\366F\333\300\325?\343{h\030\347\264\316?\347\352\273\263?\340\252?#\025\217\t\372\000\343?R\004z\210\207V\265\277H[8\263\230\257\321\2771x\272\335\331g\276?yj\001O\334_\274\277|\\\016\313Y8\277\277\255\251\'\252\036Og\277\376\344\331\037R\346\325?\363\252p%\311\360\326?\261\321\334\307}q\250?\255$JW\214\265\312?\023\340\323[\370;\332?|\177`.\211\343\342?\001\030\nm\324\253\324\277\214l),,E\317?\345\002\010\304E\310\217?\033\363\001\250k\311\265?\357km\243sv\325\277\327i\2510\247\221\314\277\332\365o\2260\356\300?(\010(\201>\020\340\277{\223\200\251\001\242\336?G: La7\342?a/\033\354:U\330\277\232&\261\326F\360\331?da\253t0\303\317?IFhl\032\211\343\277N\230p\001\341\267\262\277H\211\316\272\236%\334\2779\036\367\230\353\272\336?\'b\241O\365\264\325\277\346\237\031\023\224?\333\277\242\225D\002\007\034\272\277\263|\270-\301f\322?\335\370\317\304\271u\340\277\006l\231\342[\212\334\277\034\333\314\234\325rZ?\361I\243\017\204\247\320?\353-~\324r\254\306?:`p\0104\230\307\277%:r\372ql\303?-\000\023\3775D\327\277\254|\031\"\353\376\332\277+6\317\356[\033\342?\023\243\214y\245\'\326\277\367\372\020O9\362\337\277\274\302\346,\255\037\331?\214\245\253\035\013\243\312\277\022\254Y\362/\361\337?\354\2737\344\366\177\333\277\'7\212\341?\002\254\277\237\260cV/\017\241\277\004\336\235@\266\007\242\277U*~\3627C\273?\007\r\202d7}\333?+\007\212\034\373\270\254\277A\336\331y\027\020\266\277\370vN|\343+\323?45\251\215%\222\270\2778\363\021\203\255\264\311?~\370P\241^\021\312?\373C\261\265\\\005\307?LNd\345\216d\273\277`\351\310^\177\326\203\277\252\013\326\246~\213\342?\207grU\235\300\300?\322\255<\335.\010\300\277\005\326\"\344\301\234\323\277\201\024\260\t\276<\262\277K-\224\307?0\266?\222\000\215L\'\270\270\277\246Q\2155\325#\263\277\270\014\221p\355\266\263?\3118L\237\203\260\341?\363\250 \253\235\354\304\277. !\304\356\317\315\277\367\002m\323\223\005\332\277\3500\021\325\337\004\337?\263\310\216E\026\023\234\277plw\302\243\004\301\277\216\215-\212\301\007\342?\020\302\314T\221H\345\277\277>VB\272+\343\277o=\207)\034\007\325?\373e\003\356\234Pu\277\264\321D\221\231h\337\277\307\3608x+\033\346?\312/-\316\026t\247\2771rwzzs\331?\260\365l\350\002.\345\277\271jO\356(*\344?\270\221_\314\3210\310\277\321W\232\271_\000\350?\3008\253\355N\274\276\277<m\301\346\337\r\342?\004\323q\033\003\255\323?D\257\253\324\031\273\271\277[\007\261\232\243\030j?82\022\353\200g\343\277\205\225[\254\365\017\343?\322\266\212\203\240\320\254?t\016\232\271]\016\303?\252\374C\370&\372z?\204\003\276\007\207\247\223\277\'\024\254\006\3064\343\277\374\024 \241m4\302?\315\234I\'=t\246\277\255\352\265\246S\004\343?\363RG\302\001\356f?\036>lu\271~[?J\310Q~\360w\234\277+\234\256zS\245\331?\013\263\010\013\320\203\314?\220\210D\366\271\240\340\277;\345\023\321?I\301\277q\263m,\217\016\275?\006\352\3722\363:\310?c\303\207`R\335\322\277\374\3252q<\330\204\277rn\035cm\021\300?\351o9\377o\031\323?\377\234\270\014\374s\321\277t\251#?\341\262\322\2772\346\3430\212\023\326?\222;Y\314G\257\335\277\022\303\210\321\255D\321\277t\010\367L\232\304\276?<\376\203\017w\331\347?\201\235J\202\241S\227?\314C$\363!s\325\277\265N\337\001A/\254?\027W\203n\226\214\351?D\211\363\373\272y\337?~Jh\225\354\366\334\277(\275I\213\275f\234?{\203\007\327;\303\305?*\0013\313X(\344?%\214\001\357\351\241\322\277\261\302\266\361hJ\304\277\023 =;1\010\330?{*\002aK\301\276\277\354\274\264j\276\323\321\277\346X\304\311\242g\241?\362\251\014\201\273\177\306?a\216\202@\342.\311?\357\016\362\371z\354\325\277 #\036\266K\345\324?\267\361=\274?\256\347\277KM\362\353\211\376\316?\301v\213q:\312\327\2779\265%\207I:\342?\022\335\017\007\nf\274?\315\220=\025\364\347\312\277\227+|\233\376Z\343?L`\035\354\313\n\332?`\215\000{\367+\322?\277\017,\347\223\351\323\277;+\261\"\360\266\245?X\364^\250T\241\300\277\361\210fy\005\021\330?\004\375\257ND\303\347\277]Wi\274\266f\322\277o\320\313\316D\215\321?\331\263\214~\000\212\275?\2333O\245\321\356\270?30\303\371M\307\331\277\\D\331\220\365\373\315?\26358\226\\\276\322\277\275C\324\210\231f\263?V\367s6s;\325\277\002j\223\215kR\337?x\227\013M9\310\300?\026U\352^B\030\347\277\"\217\317\274\363\201\313?=\350\364\246Kj\326?\363\026\217>\205\002\340?q\227\371\212o\326\323?\263y \302A4\240\277\\=\rd\360\327\334\277\250d\264\315\022\204\322?-\2072\214\341\005\275\277\324y\252aJS\261?#\211\355m\220\006\313?\200 %\366\027\254\265\277I>%\325{&\320\277\314\227\3320w\331\305?\306Y\203\345\324J\273\277\036\"~0\234t\321?\022\246\256\227\274&\340\277+]F\360\357W\321?z\372\214\202x}\320\277\001a\327\322\272\341\272\277\246\253\317ReE\322\277\211\025\3224F\372\255\277\216\331\226\352\010d\321\277\273\266b\262g\036\304\277\206W0\354\300w\302?\312Y6\206\311\246\321\277\362\006\323\300\340\013\334?\203\003\324\250?\360\266\277\036\3531(Y7\326\277z{>\215\240\332\335?\022\254?\000MU\314?\277\272Zx\302J\343\277\207\366\270;y,\327?\023\267\312\356\014\321\313?\221@\302#\345Y\317\277\013\200\301-\037\\\272\277\3338N!D\351\340\277!\357N\244I\230\307?\202\234\320z\000\247\243?ZX0\2052\251\315\277c\"\224\274-\246\326\277\330U#2\314\250\236\277J\266\ne\322\001\340\277\377\234\356\034f\204\302\277\334\277\037\264\343\370\325?re\000Hb\256\276\277!\010\261U\211\n\266?\376f!\251R\320\342\277\247\033\235\305;\377\333?\324V\013|\026\002\307\277\266\351Tt\016\025\326\277\340\026+Y9\036\271?+v\025\263\006\014\263\277\250\001PB\241\324\333\277\247gq\277@\230\330?\323\343HYY\371\265\277\016i\306\001\201?\266?c\022\004\275\3421\321\277n\214_\304R\r\313?\271\036>7\237\341\265?\373+b\227\337\001\300?.\222\242<wz\310\2774\254v\037\205\351\327?@\r\371\254\212\004\333?\326\177\216\006<\010\337\277\231\224\r\237\367\202\343\277\220r>\211i\220\317\277\024\273\212\351}\026\314?"
      }
    }
  }
}
node {
  name: "layer_2_type_0/matrix/read"
  op: "Identity"
  input: "layer_2_type_0/matrix"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_2_type_0/matrix"
      }
    }
  }
}
node {
  name: "layer_2_type_0/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\273\231E\240\246\326\322?\022\362\260\353\"8\306\277\363F~\262\260\331\350\277\302J\334\276\324\206\322\277\265\306\267\333\324\261\374?\2111\250\242\324\303\300\277Y\036\372\201>\242\314?\334\303Z\265\242\267\365\277,\177\260\272\326&\342?\t\312\021O\234\006\346\277\021\356\340\022_\217\237?\235G\227\014\354\025\356\277*\021\255{\356\370\222?\200O\343M\376\201\364?\022\302\206\367\346#\341?\224\265\361;j\\\325\277\016\337\272\007\367\311\350\277\2338DW\327!\003@\\\242U\022\314z\312\277\222\230\3673;7\327?"
      }
    }
  }
}
node {
  name: "layer_2_type_0/bias/read"
  op: "Identity"
  input: "layer_2_type_0/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_2_type_0/bias"
      }
    }
  }
}
node {
  name: "layer_2_type_0/MatMul"
  op: "MatMul"
  input: "add_3"
  input: "layer_2_type_0/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "layer_2_type_0/add"
  op: "AddV2"
  input: "layer_2_type_0/MatMul"
  input: "layer_2_type_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_2_type_0/idt"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "h\212\211\331\357O\342?\002\200\301\315\225k\321?\016\352\255.b\001\330?T\302\346\243s\337\317?\201%\230Q\3643\326\277-\031\244$jy\326?2\255E\277\217s\332?\231\204\036\027_\314\317\277\360\325\264\316h\260\327?\311\034E\003\034_\342?.\016\261\235\003\261\352?;\325\r\020\233g\323\277\351\300]\354&v\352?\205\302\333t\333\240\323\277u7(\230\3048\320?\304\230\000 \325c\316?\3003Wm%\331\305?%\321\270@\314\221\304\277sn;>\302\200\344?0\342\030\233k[\325?"
      }
    }
  }
}
node {
  name: "layer_2_type_0/idt/read"
  op: "Identity"
  input: "layer_2_type_0/idt"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_2_type_0/idt"
      }
    }
  }
}
node {
  name: "layer_2_type_0/Tanh"
  op: "Tanh"
  input: "layer_2_type_0/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_2_type_0/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "layer_2_type_0/Reshape"
  op: "Reshape"
  input: "layer_2_type_0/Tanh"
  input: "layer_2_type_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "layer_2_type_0/mul"
  op: "Mul"
  input: "layer_2_type_0/Reshape"
  input: "layer_2_type_0/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "add_4"
  op: "AddV2"
  input: "add_3"
  input: "layer_2_type_0/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "final_layer_type_0/matrix"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
        tensor_content: "n\014})\205\200\323?1\016\222\250F\317\311\277\355\366\221\301\277\002\306\277\310\200$\023M\360\305?\030\247\017\321b\321\342?\252\333\016\344\225\035\227\277\235\343\317^\302Q\316?\241\025\344E\360\327\336\277\025q{\246\233G\311?6f\250xL\244\323\277\014i\177\231Dd\324?\261\207Q\250\014O\325\277\242\2350SK\336\332?\307\306\016\243\344\351\337?\261#\\*\354\177\325?\266O@\021\317\025\320?C_9\016\276\003\343?\037(\3530s\310\330?0\320\331\030\377\325\321\277\327\002\206\263(\361\322?"
      }
    }
  }
}
node {
  name: "final_layer_type_0/matrix/read"
  op: "Identity"
  input: "final_layer_type_0/matrix"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer_type_0/matrix"
      }
    }
  }
}
node {
  name: "final_layer_type_0/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
        }
        double_val: -93.62848991538978
      }
    }
  }
}
node {
  name: "final_layer_type_0/bias/read"
  op: "Identity"
  input: "final_layer_type_0/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer_type_0/bias"
      }
    }
  }
}
node {
  name: "final_layer_type_0/MatMul"
  op: "MatMul"
  input: "add_4"
  input: "final_layer_type_0/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "final_layer_type_0/add"
  op: "AddV2"
  input: "final_layer_type_0/MatMul"
  input: "final_layer_type_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Shape_4"
  op: "Shape"
  input: "Reshape_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_20/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_20/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_20/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_20"
  op: "StridedSlice"
  input: "Shape_4"
  input: "strided_slice_20/stack"
  input: "strided_slice_20/stack_1"
  input: "strided_slice_20/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_21/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_21/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_21/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_21"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_21/stack"
  input: "strided_slice_21/stack_1"
  input: "strided_slice_21/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Reshape_15/shape"
  op: "Pack"
  input: "strided_slice_20"
  input: "strided_slice_21"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_15"
  op: "Reshape"
  input: "final_layer_type_0/add"
  input: "Reshape_15/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mul_14/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "mul_14"
  op: "Mul"
  input: "add_2"
  input: "mul_14/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_22/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_22/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_22/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_22"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_22/stack"
  input: "strided_slice_22/stack_1"
  input: "strided_slice_22/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "mul_15"
  op: "Mul"
  input: "strided_slice_22"
  input: "mul_15/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice_3/begin/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Slice_3/begin"
  op: "Pack"
  input: "Slice_3/begin/0"
  input: "mul_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_3/size/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Slice_3/size"
  op: "Pack"
  input: "Slice_3/size/0"
  input: "mul_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_3"
  op: "Slice"
  input: "Reshape_13"
  input: "Slice_3/begin"
  input: "Slice_3/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Reshape_16/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\001\000\000"
      }
    }
  }
}
node {
  name: "Reshape_16"
  op: "Reshape"
  input: "Slice_3"
  input: "Reshape_16/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "layer_0_type_1/matrix"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 20
          }
        }
        tensor_content: "\236PAS\303\016\317?0A\3726\275\367\340?B\334U\237\344\307\336?\353\231\261\337\023\207\326?UlW\035)\336\310\277v;\022(K\315\344\277V\216\005r\202R\355?\340\207\263\216o\276\301?\206\014@Y4\326\316?\226\227B\003\213\373\344?\237\013z\201\327\036\322?m\217[\300\327z\321?\224d\272\331\0336\336?\313\265\310\352\370\023\274\277\345\376M\224G\301\301?\333\217\230\255\317\030\360\277\220m\222\327\206\246\303\277k\362\242,\\\034\303\277U\016Z\212\227\216\314\277\207\364\001gz\r\341\277\204\034\trd1\225\277\326\322\277 \314\"\324\2772\240\305c\242S\322\277`nF\316\016\335\312\277\300\333Z8\350o\234?c8\243\226\275\353\225?\243v\257A\347b\301\277!J\265\302F\240\323\277\030\312O\202Pi\275\277\350\313\205\2726]\342\277\245+\325\235\036\250\317\277\374\240m(\333\257\314\277\020o\216\t\250G\313\277[\360m\300N\237\024?\275\271\361\252\241G\277\277mT\235\345\337\220\346?\0244\221\256\376\323\303?\333\337\211ywR\264?\203\031b@\336N\302?.\256\341;9*\322?\223&\231\371\352\212\264\277\272\035\214\224\232\352\223\277g\261\207^\nb\325\277\253\342oj\320\202\303\277\034\210]\337\265\343\310?\"/\265\214\"\256\261\2774\244!+\375\317\271\277\305\243D0\327\305\313\277D\006+k\377\035m\277<\0052D\310C\345\277\014\355d\245\212t\260\277!\362\177\222\277W\307\277\212u\311\247\0022\230\277\004y\302E\037\371\253\277A5\022\002a\271\307\277\256\003\257\036S \347?C\213y!fsa\277\361wC\334:\n\260?\201\035\230\020\377\222\254?\020\3731I8\377\344?Cj\313\304\365\002\323\277\242R\372\243\321\331\256?\341R_6\230{\241?\020\230\023)\272\250\262\277\232\326K\177.\034\263\277bf\315\017\030\r\266\277\237\227\305\251Lh\336?\t\2479T\225\354\247?\317w\215\272-\243\343\277\371A\226\\:\274\320?g\350\372W\376\360\360\277B\250!n\021\000\237?#\213B.\003\310\273?D\244\3255\227J\371\277\031O\tkbS\351\277\004]\220\\/\000\275?\313\253\234\\\211\207\364?\225]_\200>\301\272\277\373\226\301\013\222\034\344?\303\262E/2\366\263?\227-\333\203\360}\267\277\247\312\020\305\002j\242?\034bD\037\006\301\320\277\326XU<\255N\305\277\007\356\253\234\333\220\316\277r-\224\322\264^\314?0\212\213\3336\355\313?\324i\304\2003\232\263\277\030*\234b\237\236\270\277\227\277^\314\205\331\361\277\216\377d\237\203\210\314\277){\375\323Tc\320\277\324\216\237\346\367>\263\277QS!>#\025Q?\027\037\334\001\222\031\311\2772?\266\000\216X\361?$\346?\253\037!\320?\226\232\t\235\266f\300?.ZW\215\217\210\303?q\315O\036\t\217\350?\340\325\311\\\315\366\264\2774W\260\224q|\326\277~\006\204\352\002\230\305\277@\'\336?)\303\274\277%\231A\314\361E\275?\375\313\274L\211\t\236?\251\274y\006\016\361\300\277\305\304\340.\266\235\320\277\'jq\366\356\030\265\277\220~A\250\016\017\314?r\305\215\016R\333\245\277\030?\224\n]B\300\277\266(V\201\0334\273\277n\251\331p\365\263\213\277\264\353\213\310\254 \304\277\344\331\376\373z\336\301?\241\331\003\331\347e\201\277#\3404f\204\341\265?V_d\327\306S\273?\276\320\002\314\263a\330\277C\022k2\222\313\310?\314e\262\243\326\315\317\277\357\334\246[^\260\322\277\254T\354\013\'~\246?`q\002)\226\027\343?$C\221\247\304\221\273\277l\022\005\305\330-\304\277\327\205\\\253\203\221\326\277\325d\344\"\261\357\257?0\333](b\024\304\277\"o\342\224\312\373\256?\315\332\016\315\326\316\324\277^\202wE\325\200\305?\342Eb\232V\253\312?\004\274\325\312\000/\223?\277\353\211R\265\223\305?\342\332:\\n\212\333\277\206\037\260\224\247\234\335?\312 \024E$S\300\277\241M\272\326\240C\304\277\2639^\306\220\231\273\277\373\227\322\246\034\345\253?\261}\216\255\334\362\314\277\234\311\207+\335r\235\277\306\212\261\004s\036\361?\375\365\333\314x7\263?\013\312\312\336)\242\271\277\200\242\323\2070Q\330\277\315\014\337)[\020\302\277\346\310\017\340\273\n\303?\216h\376\035\003K\244\277&\332\312\340;\352\300\277\246]\035\001G\321z?\030\225\272\216y\313\326\277\326\237\351\232\022d\315\277\024{\243\261\235\212\264?|\375k\216J\242_\277\373\266(\021\236\021\337?\330\255\312F\324l\306?\367Yb:(-\251?\317\275U\033\0252\325?R\275~\311\177\010\323?<\007\377K\242\\\345?9\323\303\201[\005\323?\304:\3551\307\301\333\277\260]\362S\215\r\330\277\223\271\226\343%\237\336?\256\305\323\214\252^\323?\026M3s\020\305\315??\336\327FP\347\367?\337\002\300\273\026c\302?\337\322\222\251\317\222\333?\200J\r\243\277\253\342?\2659\'6mu\270\277R\004\020\306\000*\256?+iz\351\232u\366\277\313\254[6\nx\243?\312\342\177Y[\343\331\277\236\234\035+h\302\264\277\034F\352\275\260\341\366\277u\013v\373\346\336\271\277\352\313Ir\033\017\320\277T\237,\277x\264\307\277\305\307\237\311\343\211\303\277f?\0162\"\037\251?\025\217\261\327\375\357-\277HE\272P%\273\312\277\353$\0146\236\031\270\277\213\207\"\361\353\301\275\277)\034\225\336\366\331\332\277\314A\216T\022c\311\277\323\364W\271\032\323\312\277\366\302F\'T\002\274\277^\256< j\003\235?/\233\250\377\202)\306\277\213y\312\\*\025\345?\257_\343m\225\263\252?\353\305\270\217\371\030\224\277\370\321w\211_\235\276?,6\267\225\225\265\326?C\234\203\017yM\264\277d\016\235\005\337:\310\277Q\234\330uZ\272\333\277\343\214b=D<\302\277\204\\\236w\360\010\265?\223r\276/?E\247\277\000\334\246\314\034\002\261\277\036N\315\025\366i\322\277\325y\265\230\222_\240?\367M\216\3073~\353\277\317\362tZ\004,\306\277P\001\224y\252W\321\277nKk\221\177\363\316\277\232SXNfG\241?)\030!\347:}\260\277\302?a\343h\311\354?\322\014\226\230\210\311\266?,2\260\021\010\313\307?:d\001\315\346l\276?\316\315\0065\337\306\344?a\3406\264@\225\346\277\210\035 (\215\331\253?\274\224\023CY\275\321?P\303\035\336\032\361\330\277l\375\rX\"\016\372?zX\024Y\021M\347?\355\035\277\213u\256\353\277$\270\327a7\360\260\277tf\247\226\025f\341\277O\273Z\212\246O\354?\204U\017\002:\350\317?\257NdDi$\327?\246\027{\200\200\275\342\277\004*\363\366\256\364\375\277\270\346O\n\013\236\332\277\215T\253\300Q\216\344\277!<\360k\2052\310\277\270o\342z\204\347\357?s\006\017>\r\033\251\277-qD\273\355x\346\277!P2\034\354\272\252\277\016\341\2769A\276\255?a\206O\'k\321\310?J\026\004\272\336\t\310\277\261\250.\327\265t\307\277\032\033\013!4\002\232?\360\257\255\\\245/\314?j\274x\331I\275\320?\363-\227~\376\347\305\277\351\370\356\177\207\364\352?\007\337\240\373\300a\321\277\225\315\236l}\346\210\277xe\356\242\276\351\277?\'\350dT\307\331\276\277j_B(\263K\310\277\221\r\272\001|w\334\277\326\370)s\313C\326?\026Lg3\236q\255\277\335\267\000D*\305\302?\365\270\345\311U\332\366\277\t\311]\\\374l\253\277V\264t\036\034\325\320\277j\342\354+\035\214\325\277\177\206\220-\2033\315\277\244.O\306\220x\270?\273u\357\3130v\245?\245|@e\267\016\311\277\271\323~\312.\366\315\277\303\270\322mce\252\277\337$\326\344\224\257\322\277\037`>F\245}\303\277\277\250\315W\325D\314\277\322\\N\244\370\337\272\277\367!>\376\325\241}\277\363\n\310&\037\024\267\277=\3506$\275)\342?\243e\023\216\310\320\241?\264\221\343\323gL\315?\023\311\330~\007u\301?~Up\366bn\301?\312\267\221\306\206\r\320?T\335\340\024\344\236\313\277\027V\r\000\311\370\320\277\223\247\031j\260\275\322?\260q\034\375~b\327? z@\235\321+\315?\222\242o*?\273\330\277/\020i\260\314\254\323\277e4\3058\\\224\214\277Z\211\344\375\210\344\310?4\350\007\372\357X\313?\213\200\335\330\264\277\305\277D\361u\323:\025\340?8\020\303 \nX\315?\027tz\020\007{\300\277\002\353w\216\006\321\315\277;\253p\326\205\272\310\277,\373\223}}@\342?P\261b\177\367\306\215\277\305\t\232+\355+\345\277N\356Fv\316\016\310\277Zl\314\210=\"\263\277\231\255\366\362o\332\330\277\\r\215SP<\321\277\312\374\300(\0149\345?\336f\342\341\360\322\230?\362\231\357s\252,\245\277\231\273=!\246\021\330\2778\370\001\263\3523\265\277$?s\213g\001\345\277~B~\356GL\230?\t\000V\367\344?\307\277!\006@\313?\216\321\277\374\001\314\305\235f\307\277\372,[iD\272\264\277\002\376\025\324\350g\377?O}\275\251\335\247\257?w\312\274\275\270!\323?\322\357TC@\245\275?\375\330\346\231\367\311\361?\323Be\214\3606\311\277\320~\306u:\007\325\277&\265G\362\322-\313\277,xVv\320\016\313\277\2512\301\263\367b\267?\260\372%\331d\365e?\337\201T\302\355\325\304\277\372\330\365\201m\304\307\277dkh?k\017\245\277\364|\330\221u\327\343\277-\374+\035J\345\300\277p\006\327\204z\245\306\277\274\3416\215A\341\324\277\031\326\277\366P\352\253?\327\226?9\336\314\275\277i_r\207]\351\351?\244\226\237\377\200\244\301?\237\035\337\317Y2\274?\001>y\377\313\005\237?\0220\030C\032\001\326?\017\365\002\336\236\223\247\277\271(pH\372\270\275?t\344=\370\346L\303?\267\032\222NJ%\247?\354k/{d\232\302\277\252f]{|\263\260\277\327\204\256v\3320\303?F\0041\360\\\033\274?\301\306\305V`\316\320\277\265\345\355\237\322\353\310?\364J\251\260*p\307?\373\354)D\t\007\203?\356h\374N\310\352\201?Z\272\313|\r}\330\277\026\266\221W\316 \313\277w\354\313\377\347\324\327\277\\\277\346\0338\260\265\277\237\035\261\235\031\331\230\277b\306\026\237\032\316\261?p\033KAO$\271\277\323:\243\353\371\350\267\277Cu\332E\305\223d\277o\254 \237\275:\263?\276\252\317R\212\214\245\277\342A\r\177=\"V\277\304\256\243!}({?k7^\231\371\333\266\277p\326p\014\013\\\261\277\357\327!\314\231\270\305\277_|j\247}\214\256?4\367\324js \232?\315\226\266\337\327Q\247\277s\213\261\352\333\232\262\277\211\002\004\343P\261\262\277y+\355\355c\313\277\277|\204\251\365$\031\317\277\361\267=\t\213\342\305?~\316\230n\013\263\237\277)L\350xgK\244?\222^W\212\324\226\305\277\331\273%B\211\236\331?nK\342Br\212\345?\334\261\316\361^\204\232\277\270\221\252\345M\376\242?\243\231\245\177\211K\252?\340\014ri\241\316\341\277\241\240\020\004\272\235\343?6\277\340V\n;\324?\345_C\324iK\341?z\376\017\350#\010\313\277\253ea\360\215g\364?/L\264\267\3262\306?\3379\322\305\361v\277?\227\210f\233U\306\330?\265n\204\377MD\340?UH\216_Y\255\326\277\256\"\356\254\025\026\360\277S\022\233\020\212D\310\277y\352\322\221R\037\324\277X\3644\273\023\214\236?L\372\242\r?\r\312?\2207\306\204pm\265?\277tb\243(_\366?X:\244\212^\020\315?3h1\326\016[\361\2776\200\263\264|\324\263\277\233\357\352\376\340\224\252?7&\217%\0277\343?\247\277\274d\177\273\266?5h\030>b\263\330?\'\022o=<\235\251\277\374\266?\244[\232\354?\345\202\372\221\257\030\245?\320Z\321\032\200p\301\277\310\365\254aL\205\261?\302\214r\342\025\n\323\277\r7\206\351eE\302\277d\200@\252\311\304\345\277\013\2610\031u\215\242?4K)\247\221\202\332\277m\226\010&+\023\243\277p\330\225\000 \242\263?\241\364\003\014\375\250\305?\317\344]t45\261\277n\366\316\2569H\307\277\215\236\200l\025f\225?\177\375[\337u\371\271?m\257\023\334\333\245\304?\207!$\246Z\215\303\277\004\005;a!\023e\277VR\236CZ\231\303?\235\217\220\374s4\236?\313F#\235\335\202\244\277\277\250#\2032\343\264?\360\353\237(\307I\252\277)\331\325t:\246\301\277\032\360NQ_&\302?\332W\023\335\264\364\277\277U\255\307\036A\263\300\2776#\236\230,y\241?\305Dr\037\347J\307\277w\372\271\022\232\020\227?I\313\007\311p\345\261?])\320q\3020\257\277\nY\371J\202\251\313\277\271\317\313d\n\240\255?E\244\326\330\004\243\231\277F\200~\371Z\205\307?qeI\001#\264\274\277\257\377O\027\025\345\263?\002\251g\nA\224\305\277\220wh\260\034\366\242\277\3179\335\263\245-\312\277h\023\003e\215\305\336\277\306\272H\005\004~\256\277G`\0139\2459\241\277\252P\323\r\354\205\320?\2178\306\225\017\206X?G\036\\*\014\002\262\277\241\262\262I,\253\276\277\021/_\006\017\362\242\277S*(\000\377?\275\277\254\322\344Zf\220\275\277\324\330\340\023!\272\240\277\273NIE_}\303\277\272A\367\003\nh\301?\033C!N\017z\320\277\321\362\233m=\346\313\277\272T\331d^\336\267\277\257\256D3:\305\313\277\"\323\nS{\361\264?N\244~m\254P\245\277\315\251\225\321S\034\221?\037\352\nr\3519\272?\210\376\313\201\030\275\263\277B\253W\331\324\025\241\277\253<\003\212\'\372\305?%_\335F5Q\254?)\336Z\246\230\311\204\277q\3661\230\233\177\324?]\307\007\034\222?\275\277\232\374>\217\216_\300\277\323v\177r\260;\344\277\320\004QjI\306\315\277p\215\254\n\322O\302\2777b\350\332A\004\220\277NZ\320L\204\333\302\277\366\000\325v5\002\326\277\001x6z\322\223\225\277M\235\335,U\355\325\277\016\035\334\375\266\210\260\277>\\\351l\033a\324\277\025>J\267\200H\310\277\253\262^\204G\235\267\277\3579\3528\372\301\240?(\227g\\\211w\347?\354\247\376?\274\207n?\203\316F\321\360\033\246?\323H\217@ \n\300?|\204\n\201\255\353\327?C\247\311\023?\200\240?o\254\365\334\231\217\232?\223\201\207\314\\\"\261?\021\353\276\202\236w\263?@\360R\007>\177\247\277J\323j\216\357b\266\277\232\344Tf\237\301\302?\255f\244C\246\326\246?\362\177\343[\340!\274\277\334q_2\307\257\302?\303\350K\351\017\272\300?\036@Q\200\323\016\254?\233d\tK\034\220\250?*\036V\304\277Y\331\277\330\370\351\305\235O\304\277r\317wy\206T\320\277z\337\267\371\246\353\233?\305\243UG\306\343~\277K6\226$\260\230\245\277\031\n\362\312\314\210\237?\272\250\357\2311\036}\277\2365\247\2532b\313?\315\222%L\026\372\311?J\211\371O\226\"\265?\346\014q\372\245%\200\277\214\375#\305Y\204\264\277\024\350\225\335\232\245\241?[\020I\344\347\210\264?\265\250\372\341Uj\274\277!\024\234\323\362\310\261?\nWM\340\032,\235?=6m\302\307-\265?\214\303%it\327\244?Q\333\375T\231\001\304\277\302q\346\351bs\303\277I\246\237\032eE\334\277\251\246<\344\303\031\266\277\316\355\367\021\035\366\233\277y\276\\\276\271\347\264?`K\\\331\344\014\313\277\000\014\226@5\010\330\277{\005,\r\253\202\314\277\370\335\374\361\211\344\262\277\0206\205\2338\310\323?\343\032\220&lr\316?--\003.\031<\206?\327GJ\'\005:\207?\207w\311\261`\264\276\277S\350GM\326\265\271\277\177O\355>\357\272\271\277\206\303m\212\310:\257?|\213y\226\214\275\201\277\332\232a\023\214\301\320?\250\243e\247\260\002\315?1\003\2253\t\264\305?\204\352_\3730\317\306\277\001\330J_\303v\245?\335\370Q\340\241\377\300?\006\332\232\303\002\220\312\277\276\356f\252\0009\242?\314^\340\032\034\002\262\277\2374f\251s\214\324?\304\220S\361Q\351\251\277\264\217fZ\364\243\273\277u\246\231\250\nx\317\277\233\266\231*9h\224\277r\025\177\006\301\242\311?npj\271>\276\321\277\333\353\256ho\340\307\277\356g\317\030\353U\360\277\325+\013\316\237\002\313?\234\210\025\313_\345\252\277\330\335\275\330P\370\271\277\370\361-\235r#\253\277w\250)Ei\334\260\277\311\223\277\320;h\323\277\270\254\272\246 }\324\277B6\247\206\305\343\247\2771\361\352l\361\033\242\277Y\227[\021\327\030\353?\242\024Q\311\256]\206?\270/\327\3572@\245?\255\254\001\255M\241\320?\306\370\331\376w\361\262?\027\211[\232=.\303\277\017I*\216[`v?\020\005\304e\372\305\300?\351\366 (-\305\301?@\3413G\232\252\266\277\377\005lm^\227\264?\345\333El\211\340\260?\304}\372\221s;\301?\217\t\242\376\206\017\264\277\366\325\177\313\237$\321\277e\231h)VJ\266\277\346XR%\364\321\330\277pU\363\371\3539\240?\376\230\320e\236\212\243\277\0173b}uz\232\277d\323\n\177,\355\304\277\372\356\247\021\244s\265\277\241\026Hx!G\327?#\213\322\357\360\263\260?\263G\241<2\336\242\277{\376\302\023&l\270\277\336Du\356\213S\233\277M\272\037\201\333\037\240?\370w\306\352\237\214\234?\251\313\254Y\014y\300\277p\277I\024\367~\223\277c\275\266;GL\320\2773\261\257\246\224\177\261\277\204\315\325Q\027\211\310\277ZgK\370\233\365\322\277\000T\323Y\205)\246\277}\345\361\201:3\301?fC\277\260P\231\323?\n\203\227\311\322.\260?\262\3176\200`b\310?\255\031%\310\343\353\243?\3772\342\261\241<x?#O\353\310p\213\236?\211\367<\222\223\364\312?\036(\223\266\235\234\303?\323Lt\021r\001\274\277\273Q\033\022\2360\314?s\2038\342\240;\267\277\260\014*\024\306w\217?\254#\244\3432\302\265\277\203\235\262\263\353\200\305?v:\272\026{\032\274?\304q\"Z\204\007\300?\3425\361\352\\\322\303?\201ma\350\267\344\311?\340D\023X\340\367\214\277\0071h$8\337\355\277\260\315\300\345\035y\303\277\021\224\302\334\315\254\277\277B\242\322\026\026\220\245\277=\302\254\217D\337\327\277~\317Fa\021\241\237?\243\035g<\205\021\310\277>\335!?)\336\305\277\260x\265\314I\242\277\277\\\323a\375\252\032\303?FWL9\003#\245\277\250\001\254\361%\256\246\277\014\221l?hW\277\277\220\327\232H\210 \201?\226\203Ja\273\250\347\277\201\326\374H\361\227\256\277a`\2552/%\304\277\203\201\nK]\320\307\277i12\006\342\335\266\277`\3155\363\356@\265?\356\354Y\234t\000\346?\375k\263\303 k\224?\177|-\375\255R\302?\3535\315\323\311\277\271?\316\203=\305\2540\350?\353:5\'\205\031\222\277\220oQ\361\262Q\212\277h\306\036\300\026s\225\277R\005u\rm\327\266?\261\242{\247P[\274\277\027D\323\322Ki\200?dPt\234\374\034\302\277,\324\035\025\343N\206?\225\\S\243\333\010\267\277\177{\273\204\307\243\275?\315-\224A\'-\214?\265\354aR\257\255\256?\037\206\344SC@\255\277\257\324a\353\267\374\240\277R1\006j\032J\252\277^7\327\327H\022\276\277A\363\275\206\230V\302?\262\255\351y\344D\230?\320\2728\210E]\264?\313\352\r\361\031\237\267\277\334\202\001\214\017i\242\277\233r\377Y\322\251\277\277\307`E)\331\"\275?\370B\311\300f\006\222\277\234\235q\321SL\247?\003F\203\273\017~\344\277\026\320$y2Y\331?\352\303\235B\022>\260\277\333\346`Y<\355R\277\244A\205uI\224\277?\321\340\364O\330{\271\277\032\030\353N,\270\265\277$0\037`;\342\223\277\023\335\003\361#\304\200\277\223\223\225\'W\221\240?\323d\024\370k\377\314\2774*+o\343\246\310?[>1mb\203\236?\324\032\270\010@V\245?\2360\206\263\265\357p?\001\n\350\026\325\354\303\277|\214\rB\211\352\342?\034\266Hd\306\"\317\277M\262U\366#\230\313\277=v\302<\\\360\327\277\241\305D\000\t\222\300\277\310\273\001\032\221s\273?\235\373=\342\334w\302\277,@\271\344\017O\337\277R\021\377\022\037\004\321\277*(\276:\227i\347?f\034Q5\214\033\253?>\361\355\237\032\362\307\277\204\306\253e\344\373}\277\274\350,\3141\003\335\277\211\354\'\372\371\237\327\277\303\230\223\332P\247\334\277W.\272\021\205]\320\277\355\2458 F\335\214\277\242\217V\035G\332\247\277Z\177?\2709<\267?x\327\321\212v\300\312?\231>\014\361;\323\323?\'\033q\354\342\233\302?#\374L\"\030T\345\277\343\343\244\226*\204V\277\317\245yh\230\351\252?-\353$x\256I\307?\255\236)\177\214~\310?T\030\006K\020O\304?\240F\334\214\324\217\317?\330 \017\365\375x\324?1\r4\340\226)\241?\254\010\343Q\277\303\253\277\212\230j7\207\244\271?\322\031\020\211yH\305\277L\234j\265\027\227\310\2776a\257\347:\'\337\277UIn\253\256\224\205?\026\302O\226\002(\342\277\311\302\317\205\312\016\235?\335\355L \206!\267\277\255\367\335\224\"\356\266?U1\255\355\251\354\253?\205\333\250\266\370\016\242?\247\"\322\354\237\374\326\277\013f\301\310\347\010\271?P[D/Py\220\277\001\350\246OlP\222?KJ,w\020\331\264\277\247\311&\242\025&\261\277a@\237\343-\000\253?\310Q\372y\340\240\273?K\2103&\003\377\312?c\317\010\247\251 \266\277\3521\253hlk\200?\177\027\273\370\256\357\251?^z@\376\364\370\300\277\366O\240\346\324W\240\277;;w\r\323\t\262?hM\372:\004\362\266\277\206!\214\221\324\340\274?6\037 \251\225\273\265?\366\032\342\346K\365\305\277mf\353\275\264\201\264\277\300\234\027(<\325\312\277\357\222l]fM\302\2771\356y\362\020\205\242\277\001\002\270A\201\365\216\277*\252\364\370\241\206\261?\037\324%\320K\004\304\277o0\273\277\232\313\223?\232\372&\276\246\177\322\277\254\360\014\327\341\326\271?z\000:!&\237\266?Z\361\224\365\333b\300?au\036\376\007\344\332?\031nITo\240s\277\226\255}E\353\365\315?\343fK\n\202\205\216?0\322np\226\376\255\277\001\\\307m\352\212\305\277\237\216\013\223\302_\254?\244\010\220\244\224?\267?\362<\216\260\244F\271?\330\177\\m\355\306\260\277\265_\200\'\352\\\271\277?\213\326iiU\230\277\333N\033\023j\372\266\277\344l\364\243\253m\256\277\366.\354\204\2367\270?(\271~\326\000\203\267?O\250\334\365~\237\300?\240\022\005\377k\210\271\277\321\325\377\r\3616\267?\003 u\373\"\363\343\277vB\032&\033&\240?qU\323\302\026S\243?\240\352\264\035#&\262?\352\033\302\261o\204\321?\032\271;\256\306\205\224\277\337\206\260K\034f\240\277\025\356\344Q\006\240\332\2776\341:\372z\010\273\277\373\001\032\364\273U\271?\347kS\'\206\017u?\267!/\343\223S\245\277\345+v\311\300\321\322\277\017\236\021\354\220\373\240\277\341)S\257\300\324\330\277x\017>\212\003\r\260?b\020;\355\346\016\316\277\271\317\206\037,\323\263\277\014G\332^\211 \225\277N]\223\370\324\022\311\277\030\237b\027W\366\354?\223\377Y\312\022\233\256\277\335*\203{A~\300?Ga\313[{\272\245?SN?\306\306\247\341?\236I\007O`\365\220?\020e\245\021A6\273\277\365\354\323\2256\230\272?\256\374\022n\367*\266\277\212e\372Q\000\320\246\277\371n-\362\226\374\246\277(\252\3320\221\363\303\277\222v\220\342.i\236\2778SM\2444N\273\277\232X\273f\207\\\260?\315\306\036D\022F\272?W\335\375x\307YL\277b\303\305H\036\262C?(\275\203\001\016\366\240?\322%\323+\251;\313\277\352\307:~\274X\305\277\r\344\225Q\221\360\263?\201\271[\232M\305\213\277\033]g\263\\]\267?\025eh;\256\267\271\277!,[]\220E\303\277\357Eq\337\331\376\305\277.\327\320\253Xh(?\347H\207\253X\357\264\277\034\200 \273\254\241\245\277\273\377\216\237j\200\330\277R!\366\254\341\002\274?*\004\254\347s1\265?<\017\330^\322\304\271\277\272\362\336\255\350-\307?\003\030@!\357j\267\277\301\266C\022w1\301?>Z\304\007\333dd?\374L\031\020y\"L\277\312\324\355,#\205\237\277l7\266\002\304\200\331\277\300M\263\317Np\305?\223\002Xa\032\204\234?x\2752\373v\375\247?\360\037\236\265_[\214\277q$\210/\035c\305?\246n\277\204F\263\256?\216\367\314\247\010\035\206\277\266\022H\210Ia\331?I\331b\222\370\006\324?\005Y\205V2\237\303\277\020\\\254\203x`\224\277^\307!\203\322i\276\277C\230\372G\377\373\265?#\372\265\272\256\310\307\277\260\256\306q{\257\331?\310\273\323\316\2768\241?t\310\315.\023?\341?\352\351\271q\347\235\274?\331q\245jo\336\265?!z<\007_\275\267\277`r\313\02052\340\277\344{\214\355@g\312?<\026\243\273\320\003\315\277\202\300!\315\235\352\235?\362/KM\031a\244?\215\341wf\335\275\322?\317\341!|g}\316\277\"\326\376}\307W\273?\035\341\033\352\213\003\321\277\326\314\363\276\276\216\273?\034\260\023\342S\250\255\277?\253N\312\215\242\276\2779\364\243}\356\014\251?\017\211\274\366>A\363\277\3321\261\332\331\337\322?\347\'\371\007\315\022\267\277\310\327\250)\n\343\310?e\262\311\016W\227\271?t3\254 \257\026\232\277\306\334\002\226\022O\322\277e\236_\251\262\245\325\277\351yP\356\2623\305\277\2664]\253@\201\307\277\244\332\037}3a\364?\024ydR4\335\212\277\177\372\245}\330\213\202?\017\300\240\264\016\360\307?G]\261\237(L3\277\360\323\212\350\232\236\270\277\202\325\251,R``\277\025\363\265\366\200\301\323\277\005u\017\241\3578\302?\037\255\'\023]*\261\277\246\252\007\272\266\342\303?\362\215\277&\304\335\223?t\3705\"\260\317\267?\205\232c\212\020]\261?\270\274c8\267\237\261\277vn\312\320<@\266\277\322\357\206\365\225\203\320\277y\207t\030\274l\261\277#$\271\260\344+\220\277\231X\026\017\371S\177?\336\231~\356j\344\216\277\177D\333s\224\215\247\277P4\220S\236\006\337?y\216\216\241\002\302\265\277\202: \357=\002\320\277NUM\0346\235\316\277\366Y\'\313S\021\272\277\203\346\006\254\244/\324\277M\312\376Xx\321\201?\032\242\006+cn\306?\306\340.\346s\021\303\277Y\016\303\t{\010\332\277\033\036e\020b\317\223?\024\322U\341\271\305\311\277\362,\340\315\356^\264?\327\262\224\311r\271\240\277\367\316\206\"n\311\310?\037\273J\334\365\227\327?\371\017\230\240\377\342\243?\007%d\371\360\323\313?\255\031\336\032\330\205\276?\355~\024\023!.\275?\241\035\246\302\241S\272\2778\027\253\025\270Y\302?\2536\221\263\213\254\235\2775\315\204t6\002\214?\357pWcRB\264?\336\300\265\002\341B\265\277R\202\315Q\344\254\237\277\242a\024xo\370\250?\230\355\272gt\215\301?\203J\301\035\352\376\270?\342\255\'\220 \327\252?\313\316:x\000)\300??`:v\023\346\273?_\234\220>\177\260\273?\2031U\244\302\235\344\277\326m\226\325\0358D\277\373\231\265N\2507\220\277I\022\267\311\321\014\255\2777 \205\001\265n\200\277\241\016^P\263\033\325\277\006\331\2432\371i\261?\203\224\312\354\177q\314?>8\236\001\205\303\263\277(M\363\004\261\025\230?\026\010v\250r\330\262\277\r\254X\204]\336\331?\252\215\342\261\020\355\265?\203c1z\010\276\343\277\355\337\366\312\036S\246?P\220,\266\342[\361\277\332\023\330\007O\203\253?\343\334\t8\220\371\275?.k>\204\332\235\367\277\023o\216\307 `\351\277\034a\257\273e#\272?\001\260c,\300\336\367?\345\310gpP%\266?\255\212H\020\332G\341?}\014?,\373\333\264?\227\3577\t\242^\327?\202;\377\270%\256\344?\335\324&Z@I\253\277\304\327m$/\237\302?\3320\207\346\232}\303\277\314\355o\364\273\366\343\277i\246\020\034\337\274\340?\206\r\335\305\310\210\320?\273C\235O\222b\340?F\303\267\005\024\264\272\277\333\366\242\236??\364?\224<\220\"-\364\326?\246\266S\370\312,\321?\317\226\220h\305:\333?\345\326\245\n\007\272\335?/\317o\346r\027\331\277\013\202\027\010\006\265\354\277)\374\260\326\335\201\302\277\335\236Tr\3766\332\277\261=m\032.a\245?G\251\024\364\323\266\317\277\212\300\247\314\305\006\344?,U`\260Hb\324\277\246\315(\022\355\305\266\277Kx(\350\360\320\340\277+j\265\207\353W\310\277\360\204eg\373<\302?\267?\245\020^|\263\277\340\207\2317\251\214\337\277\317\034-\215\353\211\321\277\356\336\036\257\013\276\344?Z\252\350}4O\236?\024\010\032\035\226\311\300\277\253w\t{F\013\245\277\016al\353x\032\324\277\021Et\313\227\210\326\277Qa\316\253\242^\334\277\276&8\245<\364\310\277v\245Q\310\343\275\265\277i4\3711@d\261? r\316])\267\363?\256\374-\253|\226\313?\307A21\360O\345?\332`\322\375\216\334\352?\2122\364u\0222\341\277km\017IS\356\320\277\321\245\272\270\233\315\343?\235\371\2511\256|\347?V\255\007\302\230D\363?\303\345\344\3616\351\325?\034K\374\266SMi\277t~T\306\350\363\342?\274\265\200\333 \252\356?\360\265\3060\336\270\216\277\2514\202C\337\323\345?[\274\255\331\014]\310?\034J\003{\217\177\357?\373B\336\325E\222\347\277\345>\305\014\213\345\350\277bc4\233\320\251\276\277\360\rm\276\254\005\310\277>5N\244\264d\305\277^\335\357\372G\344\303\277\006\227\014\222\261\373\321\277\214\212\016\272^;\363?\340\327\367>I\t\313?\345\221\003\320\325|\343?\257\027\016\220\373\250\357\277;2\232\267*\231e\277\206\266\336\\AK\335?g\005\220\251\250\214\315\277\005m\320\226b\217\343\277:\006\321\254j1\303\277o\'\003H,\324\366\277\334\\\001u\201g\305\277\177\013\333\024\016\274\220?\236\017\267\023\361\331\355?\331\326M0\342\367\356?$\333\022;\217\253\213?q<j\264\027d\304?]7\373nv\272\300\277\221\223\266\363\337\200\337?\007\312\335\211\347\314\335\277\263(&\270\314\207\303\277\031\227\241\024\336\317\304\277\321\305SzJ\351\262\277C\216+\365\\\375\261?p\3254\2219\261\214?\205S\306\350\351\251\323\277H\230Nc\345\236\322\277\334\347\323\205\272\317\363?\313\034\313r)\021\276\277h5\314[<@\273\277\005\336\277\321\301(\303\277\207\2069\001u\232\316\277w\247\253~>[\306\277@\\\252\205Y9\355\277\220\2452{\312\357\246\277M\356\331\267\rVw\277\353\365\275\017\205\023\272?\336z\"z\311\334\332\277l\200w\267\261\341\326? \231\252\330|\214\326\277\345|l\205^Q\272\277XZ\315\246> \376?\202 \217\241;\351\307?\"\211\262t\320\372\303\277\266\000\360\305`}\333\277VB\"\371x,\326\277\226\227\306\003\367\301\242?Y}n\266\256\\\363?\t9\253\302\341\261\322\277\206\233\271\321\310\020\343?\241\242\310D\250\347\273?\232\322mh17\302\277\336\334\344Df\231\345\277\337=t\312xA\362\277Ex\232^\254\315\372?\333\366\357\220\032N\264\277\346\341\226\016\0007\273\277\231Y\024F\261\263\325\277O\266\230S\254\313\306?:\024\361S\020\021\321?uXf\321^J\274?HW\321\271\227 \371\277~\231\353\212h\\\353?7\250\243L\222\243\353\277\3402\234\"8e\340?\226f\300\315\343H\353\277\327\250\363\245\305P\326?>i\230Y6\341\300\277\216\303\311\203\264\325\325?\250\377*\227\306\025\262\277\201\257\037\266\035\007\300\277[\203A\006g\301\342\277\373\201B\226\201\377\357\277_b\024\262\313W\331\277H\363\304l\3462\325\277\330r>\264\254\346\263?\223@\003g\2206\360\277\224m@\363\221\200\316\277&\343\352\302\304\330\323\277.\013\275r\024\331\261?gR\326\314\241\301\302\277\037x)\320\371O\317?\241t( \224a\267\277R\307O\272\367b\344?\250\312\336i\244\347\252\277\230L\\v\375\000\330\277Z\027\n\365\236\247\326\277\305\315\032aH\037\347\277\256\227\250A\254\217\205?\361\311\003=B`\303?\032\252>G0\014\360\277\244\t\362f\375\001\342\277\021F/\257\021\321\342? ;\227\023Tv\364?\251\267%\271\212o\224?\27704u\225K\341?\001/\370\347\231\347\342?\022#lt6\362\321?\226\240P\353B\216\344?\026`\310U\315.\305\277\237)\252&\230\014\305?\264\034\375\321\'\010\260\277\330\205\225D\216\014\332\277\217\200\247\025\251\263\340?1\221@\270\034\300\317?\223f\335\341\217\361\321?\3373Xhk\215\313\277\266\177\273n\230\311\364?\313\323\035A!\273\304?d\305\255r-\013\264?\373\254\346\2720U\317?\364\275\020\'\356 \316?\244\342\"\303e\274\317\277y\272\374\261:i\353\277\242\331\r\343l\r\320\277gdVj;W\314\277\247\300zI\370\351\273?(\353C\375\223\223\272?\033\244\335\t_\220\341?B\372\340\373yq\200?\261\'\375j\n\367\300?#\220l\334k\300\334\277\226\350\212a\001\016\326\277\203*\201]\214n\304?\225~=\360eu\313?\017*\003\271*\014\230\277\301\265\302</l\263\277\272\371\026\356\216T\347?c!\243>\354\260\304?o[\264\254\000a\277?(V\225HC\327\327?\345\337\016\356\017\277\256\277\217\0300U\364\020\325\277\000\271\372^\310\307\331\277\207\324\235\335\n\'\316\277\004\2243\257\355\340\263\2775\241\254\323\014\262\310\277K\227\243$\367+\344\277:\347\356\245\t\261\317\277C\210?pXF\214?\325\"u\357C\313\254\277\032\030\367\\\325\320\360\277\342\254E\032\302\261\353?[\331%_h\231\355\277\013\323_&\351c\225?\2005\343\'\320\214\364\277\254aIX\272o\314?\304S3\271\246\320\345\277\357\206K\357W/\226\277ugqL\020\321\331\2776\341\263)#*\326\277\372H\336\233o\275\340\2772\367s\3644\016\264\277\226=xE\264\316\343?6\255-\243\027\246\327\2774\341\356\020\372\314\327?Y] 4\3632\332\277\376B\236\201-H\310\277\314>\232G\246$\342\277N\306\014\007\231\373\305?e\255\177\372\\\370\230\277L;X\200\353\312\346?\246\r3\353\035\014\345?\252\027\267]h\'\307\277\336\372\306\340i\262\262?\357\252i\275\334u\260\277\306!\361\310%X\331?\333V%\330\363\234\352\277\360\216\204\002/\\\263?%\232\331\340\242\254\321?\357\225{:\350\342\361\277\3270d\336t>\325\277\0005V\306\252\007\360?\265$\214|\013\212\361?\207\263\341$F\366\332?\260\242\006\323\252T\336?\226\025\236\243\264\355\256?o\254\260y7\034\267?\323\350\365\252\350`\340?W\343\205\246.\217\312\277\t\005`\263\351\330\275\277\037\340\313c\177\036\320\277Q\236\342\247\204\332\303\277\256Pd\233K5\312?t\241D\026z\343\261?\365o\361\353\035n\300?\260\033\023\305t\342\323\277\264\314V\224r)\363?\2079\253\377e\312~?\253\376\235\020G\360\247?C\3772\357\245V\315?\235b\342\315T\345\302?k\205\316\262\275\303\302\277\351\036Qp\354`\355\277B\034\3208;Bh\277\006}\363\030(\277\224\277O\251$4u\256\302?\250x\207F\351C\312\277\331\275m\341~\305\303?\t\307\273\272\265\'\263\277\377h\251+n\354\312?\200\344]\246k\331\365?l\335\347\370\216\374\245\2775\034,s\223mn?W)\235}\254\001\302?\307\250~\370W\357\312?@b^[6\027\231?\020BrU\273\326\370?;iz\031\350\260\215\277\330\277\232\251\t\243\351?\205\276\364\007\024\221\320?s6\003c\002V\340?J\245a%\317\275\342\277/Sj\362\273\302\361\277&t\310=&\340\357?Pt-\362R\000\335\277\276\356\017\177\337O\225\277x\tQz\332\345\273?\261\307kZ\352\307\347?\217kb\225\"\251\227\277\241\364\2759\3725\331?\031c\376#\245\235\363\277\270\373\200`\247-\342?\004\\\365\223\317,\334\277\242.\374V4c\320?\317o\273\336\237\245\326\2774\353t}\350J\353?gL\324+Dl\321?\016\352$\305\334`\321?e[ \200\004\352\302?2\350\332fh\030\277?\306\376v\327]\321\304\277\010\030m\224\217B\005\300\003\"~_\337\247\351\277\301\262\325\274\322\360\342\277\317\250e\341qc\320\277\211\210\001\362\016\203\366\277\301O>\221\216\262\267\277\025\265\334\320!m\267?\3506\006\307\353/\321\277\025\214\0167I9\234\277\321\027\037\204\3011\314\277\300\233\336|Y<\236?\362:\335\240\t \303?\236Q]t\202\350\273\277t]\215Y\225\326\310\277\315\343h\237\210\246\363\277\254,4,\327n\301\277\336\2521\004c\200\312\2775\302j\364O4\231\277\320\206u;\241!y?\341Y@A~\020\320\277\234\353\233\202w\177\361?\342\245\312\251w\337\321?Eq\354\214\305\223\266?\343\'\343y\334\220\263?=\031?hM\276\346?\274s4:\367^\277?\314~\277@\303o\305?GxB&\323I\365?\326m1=F#\307?\033:g.b\010\361\277A\213\252\236\266\344\306\277\265\261X\2446.\256?\243\352\313+\277\254\341?\316\247\032Eg\033\315?7\206C\317)\252\334?\316N 4Q\223\231\277P8\373\300\024K\355?s\031\230[eZ\241?\217\006_r+\335\267\277.\312\021\031k/\275?\"~:\267\314\273\325\277\201u\022\314\364\030\232\277\274\267\210\325\226]\346\277\247\231\244\024Y\307\263\277r\224\034\004\0019\335\277\376f:]\302i\307?\256\312\323TA\375\316?)\234X\035\007\246\332?^\333\315\335l\351\276?O\314\377\023\370\325\345\277r,t\274+\341\224\277 h`\367\362\362\230?\236p\206\355\\Z\321?\303((\220F\231\321?t\034\276*\243\247\277?\350\257\315\342k\222\312?R\317\277b\227\333\310?q\255Z\033B\361\300?\336`\225\352\230\274\261?\377\307\323<\021~\323?\252\210G\203\260\312\302\277\354\336\374<\335\036\314\277 \345}\\D7\327\277U\233\237\300\216\372\245\277:\211\017\362\n\033\344\277z\324\326\265f\340\301\277~#\244\023\273\t\320\277|\226\206M\313\323\305\277>Q\275\222[\t\324\277r.\307\235s\241\363?\232\270U\006\362A\325?\375\202\232\254)\235\344?S^\235>\235\251\352\277m\362?\345\213Q\273?\004\310p,jY\322?\236D\360\262\003\354\323\277\327sk\261\005d\345\277\304\314\314D\272\220\300\277\323\320\272\274\204\371\366\277\336\002\327\264\022\003\311\277\230\370+=\361\350\204\277\007t/\357d\\\360?]\314\rz\255p\357?Ft}\230\335p:\277\036tc&\363X\260?M\t\2316U7\303?\212\032GH\226j\343\277+]\021\201G\251\317\277\370*\354e\331\002\242\277\334\235\006?\257I\340?\246\232\017B^(\361\277C\316sO\222\031\366?c3W\310, \304\277D\241\027Vy\242\277?<U\362\266\236_\361\277/ +C\032R\207?Mn6\345\320x\261\277\032\301!\r\240\367\265?\t\235\347\203\216\024\321\277\013|c\275\256\371\274?\305v\020\326\253\224\346?=\016y\031ij\327?\211\252W\234\250\362\333?Zk\375`\351\236\322\277\246\202#E\230\033\377?\213>\207\022C\266\237?\024\274\206\300e\255\273?f\330\363\346t\010\342?\033l\236\335\017\310\210\277\275\322\260\'\344C\352\277}H\372\300\033e\230?\020\022\363\004o\325\300\277}\323%\203\r2\315?c5\372\273+N\242?\223!\253\275\366k\324?\237C\304J\306j\307\277dZ\317\345\236\320\324?c\002^K#\273\201\277\004\232\332\210#c\276\277\322\006\3318\342\314\261\277o)\360\351q^\324\277S\232\002\'a\177\212?j\335=\215q\306\336\277\373\001h\314\353-\274?c\277\357\035p}\344\277Z\253\t\377\366)\302?K\270\243\360=\313\323?j\177\2542\2002\241?wl\3755r\222\327?\305E\357\006\325g\347\277V\031\371\24442\277\277\267\311\3016\010\361\300\277\004\226\314\232\212G\346?t\325czPf\300\277R\332\311>\225P\330?\247\220\250L\312\020\320\277\353P)\221\256z\332?\017\031\270\0379\340\330?\311\311\256TI\265\323\277\026K\034\253\353\262\303\277)\347\010\027\351\304\262?\245\006pZP\313\273\277\315d?\205\254\020\343\277q\024\316\001\013\035\263\2770p\312Bxq\327\277\364U\3470\002\030\211?q\215$\256\233\271\337?9\014\334A\273\204\267?\365\017u\030\001\236\261?\332\336e\315\253\023\336\277e\327\200~\313W\331?\216\177?\023\265\321\313\277\030\356r\364p\376\312?9\342\\\360=\364\203\277\333\202+>xS\272\277\3762\220#c\273\265?\"\013\370!\253\250\202\277\010/\'\212w\272\243\277\332\217\334\243\031\306\322?\257m\025m \006\252\277\347d]S\240\342\305\277\263\002\242L\374\226\317\277i\005P\364A\224\322\277\340\341\352~\312U\223\277S\232Wc\322\333\306\277d\200\"\303\367\024\312\277\307-\303G4\255\334\277\377\233\373{\200\217\304\277&A\235t\303@\305\277=t@q\342\203\302\277zZ07\300\206\317?P\256\241\320-\024\255?v[\002\030k@\246\277r\336\'\t\336\264\251\277\270\004^\344\367\371\342?\255$\026-\033\306\324\277J\364\346\274\336\215\266\2771\357\325%5\000\302\277;\013\014*2\352\320\277\355\272\262\014JJ\323\277\365\341\377\276\212\360\341\277@D7d\007\267\333?\215\301\ng\247\253\260?\210\3135\335\240B\323?\'\362^\034\221\367\323\277\'\216I*\346&\305?8vN\034-\333\267?\2265\3408K\355\367?\273e\301\364\213b\310?f \373\351S\330\355\277\325\3641\315&\272\233\277S\311\037u\304\311\270?kK\326e\024\021\340?\331\275c\360\r\231\251?\304\002\301y=\310\323?\352\330\3522\343\307\241\277\311\\cjf\330\343?\327\247BH\330\360\263?\301 \362s\346Ir\277\370J{|*\315\213\277\301g\202\205\305J\326\277w`2FY\270\300\277\275$\3370~\350\343\277\365\263\344\005n\013\263?/e\344\241\254\274\334\2774\336\231#\001\201\311?%\374\177j|\"\312?\252\362\320MKd\343?\355\201\306\354I\305\322?V\210\333\245\365b\342\2778Z\373@\354\262\260\277\016\240\010^2\265\240?\2166jz-p\327?\224\372\234\337\362L\303?i\334\2507\030\021\343?r\212\2020\312\312\301?\246\352%?\236\273\330?K\014u3\367\\\252?\323\324\277\223\0013\267?\005\3534\020D\225\303?\005^\262\317\214(\333\277\361\271\316\316)[\300\277\014\243\0258n7\327\277q\032\257\016;\377\245\277WA\033\202\307B\345\277p5\372\021\350\003\320\277\272\265\270\300\375%\334?\006\377\013]\035S\241\277\373\345\264\021@w\273\277pED\035\235\235\325\277\221\256\341\274\207\030\341?i\232\335\020R\337\340\277\360\276\253\256\003?\310?[+\362\237\220\037\343\2770\020L=@\342\251\277!\234\031\037^\356\306?\352\305\347\004r\356\256\277\031\031\306\206\264f\321\277\0200\'\351\031\323\365?\317[\222\006\324G\334\277Z\200Mf \226\305?\356jI\271\r\230\342\277\263\346\233t\370\240\316\277\n$\216\322\000B\267?\360\031\340\227\362\213u?[\024K\370\352\234\263\277\247\243\265Wc\353\321\277\227Qm\n\370\361\222??^\234\355\353a\300\277\'Em\316\352\274\323?/)\365\305z\270\321\277\266 f\307\205\352\343?\031\356\345\257@\202\301\277O\037\237+\266\270\242\277py3\350\314\351\261\277I.\325c\227`\341\277\354}\034}\312\005\246\277\265\226+\355\317g\215?\340\345\272i\206F\227\277\311\206\334G\2245\275\277\023\023\334\310\374\206\304?\306\336\253+\225 \330?\255A\353\255\366\221\316?\"!\316^\223\221\253?\030\303l<\264\210\350?\336\013yH\247\350\223\277e\022z)\376*\265?\331\262\330hO~\360?\331\006\tP\322>\247\277\213i\346\217\327W\351\277\251EJv<\303\272?_\231\341\240\225\213\242\277\312*\275Rv\211\332?)I\373\233\005B\263\277\366\275(T\376\032\332?\224)\013|\261A\275\277\375\215\361L\325Z\326?\230J\2204\021\230\263\277\261\362\322\242\312=\301\277\024\325\316``\031\304\277\214\234\344\231\276y\321\277\321\314\201\346\325\021\256\277\007]\370Ib\216\341\277\030f\364\037\233Y\264?\347q\207\003Lo\345\277\200\0233\360\006Y\254\277\345#\355\214I@\315?(\344\262\035\010\226\302?\345E\354l\276\026\334?;m{1\3158\356\277\216<\211\320VO\276\277\352b\235\246\250\276\263?\225E\256\021\312\021\355?\341\032\312\225P\022\317\277\311\342\300\323Q\372\325?DB\210m\324\003\320\277\236%n5h\376\344?\0364v\351\224\003\340?\272\237\236\253dW\321\277\352\304\375;;\367\312\277(\342\236\320\202F\273\277\230\217\377\010|X\251\277e\224\236C\231\364\361\277\303\246\246\241\232S\247\2775a\002\341\245\310\320\2772\206\341\246!\323\271?\366\\e\024\256\244\333?\325\036\'k\274\324\263?\234\005\232\000\021]\247?2\324w>\321f\330\277\3660\235e\221)\272\277\\c\210\036\026\376\304?\347\rn\234\270G\303?\263\337=\013r\372\321?C\274\313\260\007\363\343\277\255\034g*\225v\272?jM\024\354y\352\210?\024\374#\276I\300\230\277M\365\211\203\003E\322?\253\346\313\230\217\224\240?.\277SJ\343\003\311?\3319\347)\007y\323\277z\215\\\201Vw\317\277t\241\360S\212\014\304\277\261\224A\233t\313\335?\272Qa\370\014\213\261\277^=&\341F\314\330\2778<\203\376(j\263\277\034\337\034\302\215!\304\277\355T\334\252\t3\277?z)\210Qc\214\273?\217;G\235A&\302\277\001\260[J7\232\311\277<\025\377Tnn\301\277\302\246\013\331F\\\314?\202\256\267|odF?TE\254l\340\236\303\277\233.\033T\307^\300\277L\rsyXP\217\277\n\244\257\254\205\323\305\277\200}\022*;\021\310?\314\325\377\266Z\265\270?\223\005\236\376\334\007\271?\034-\360\367\331\216\273?\034\212dkXu\324\277\336r\031\202\362\274\267?QS\353\301B\271{?[\201%L>L\302?\3309\222\264\312\230\244\277\252\027T\013U\322\254\277\234\254\3478\035\257M?\003\026\355\205\177\203\224?^\32043v\314\265?\024?@t\034\330\265\277\204#\3717F5\273?|\016\333>\010\372\306?\313\365\243\310\234\363\235\277P\t33P\230\217\277\211\322\024\360\306\335\310?B8\262\\\377\270\271\277\311\342Gt\377\265\305\277\215\317L\276f\250\260?\020?\370%\362k\305\277\341\2072\001\027X\304\277\t?[q\"\334\301\277UR\260\213\360\357\302?\002\262\017\276\003q\254\277\367Xa\230z0\271?k$\247u\352\243\300?\347%\345\024\246\374\250\2779\007\222\001W\247\324\277\344\301\372\255\324S\246?\210\375\271s\2359m?\246\350p.\001\245\303?K^\313\224\234\367\264?H\261\317\035|\n\223\277\016f\203\314DQ\261?5\364\325\323}\267p\2775tyF\365N\302?\375\236)\030qf\266?\320\371\024\257\203`\320\277)wD\3512\000\231?\300\353H(q&\217\277\302\2756|\274\352\260\277r\236\365R\237\361\202\277\031v\271\210\026Kj\277\034\365N\261!\016\342?\250\332\020p>s\315\277\241\331\027\374\026@\301\277\033\023\257\025\033\355\314\277C\303\023\262/%\272\277\377\rh\351e\026\313?\203\2163mNT\260\277?\363f\325\311\217\333\277\002q\346\344 \243\323\277\302\025\007p!L\365?\3179\272\307oe\274\277\256\364\000 nNu?\327\357\024\376v}\302\277\225\022H\357\316!\326\277\361]\321\000uc\304\277T[BK\324Z\361\277\030\356W|^\230\266?\314\016\210\024Q\236\261?\235<M-k\224\277?\301\2030\227\311ts\277\270*s\3425\325\276?\025v\0254\005\010\334?G\rXF\264B\256?!\213\346\n\'<\352\277.\271H\313\313\273\262?B\373\224DH\206\230\277\262\211Q\347J\361\324?\033\034\271\254<3\271?]wE\232\006\326\323?{\014\327\376\023\'\233\277t\036\272\020\006#\307?\030\213\310ZDd\274\277\346vAL\370\373\255\277\314\017\'\322\006\332~??_\207\\\202\300\311\277\311\313\321\224\370\300T?>\302B\257\233C\333\277\200\313\177\203[\357\214?\353\006P\362*\207\343\277\031\365\245\236\276\272\234\277\034\340\337\354\271\264\267\277\014(\275|Q\216\311?+>\0212\252\345\306?X\274\326\324Q\376\306\277t\243\360\3741\343\312\277\226\\G\267\251\307\261\277\273\t\376\260R\353\247?H]\372Uj\223\250?\001\333\301\326\255\336\220\277+\262\335\004+ab?\304\354\034\236\031\263\312?\322\277(\016\263\270\220?\0065\343/\035M\320?\013\356\355\\\243#\311?\321P\210.\271\010\243\277\374\252\223i\201\017w\277\311`=>*|\270\277\034\0032\244\353\234\313\277Jf\005\330\303~\266\277\265\217\002\366\342\360b\277:o\243\236\n&\301?oo\235~1\210\276?\242|\246\021zQ\201\277\270V-\016\235\035\317\277\206^\220a\254\347\256?\220\344\017\005j\375\206\2777_\343u\247\235\302?i\034{\347\343c\275?\221\331=\370\001\357\264\277\346\235\331R\256\337\303\277J\277\241\337cP\316?9\036\236\263!\377\303\277:6*\3541\355E?c\244_/\027`\326?WW\323\314/s\302?\017\245x\331\215u\314?\267y\254yvS\315\277\372\236\254\221R~\303\277\255\207\016\226S\262\201\277\262\275\250.\247\210\306?+\026K\001V\231\274\277t\221-)\307w\310?o\276\010\376\211M\274?)\265\331\336\315^\304?{\230\032c\365\247\261?\250\240\206(\2526\307\277\232w\267\272\265\033\234\277\'Hd\306\204\205\311?/\357?\006\022?\300\277\216\201\264\2537\276\277?g\265\241\014\370\374\302?\306\334\020\\\204<r?D\331qR\343I\304?\0016\210R\217E\306?C\2670\324Z2\344\277\322\250HCN\231\262\277B\376c\361I\273\220\277\225t\231\341(\233\276\277\256\305w\245\3253\335?T\270\302\235\035\025\301\277\253\t\361\277\'zz\277\1773\300E^[\311\277\362\226\326\265T\016\304\277\035\232X1Jo\273\277Tn9\202\200\223\273?\'\t\362\345?\250\304\277\007\224-\252 C\304\277\211#z\364\010\036\246\277\\\225\340U\320\263\274\277\314\342@ x~\255\277>k;\027v\371\311\277\231\273io\320U\300\277\301\302\342\257^\320\272\277\024!\003\200\266\t\253\277\232\234%J\003\271\324?\375\322S\263\022\230\247\277\352\3176\303e\355\213?\356\244\325\241o\327\303?-i\324\223\333N\305?Y\224im/\ng\277\224\023\316\326\'\277\222\277\"F\013\312\340 \314?8\371L\243/\241\225\277\277E\363h\205\301\300\2772\354 \332m\246\215\277\034\374\365\301\345\221\220\277\301/2/ \230\277?\277\026\333\221Z\307\201\277\353#\0228\310\315\301?\252\265\013\177wC\227?I\374,8\357\273\270?\250z\261\223\245?\221?\3043\203\0274\202\300?\300-M\332\317C\220\277\350\260\314\236\315\260\304\277\033[|\255Ho\265?\243\2046\312U\021\303\277d\034V\231U\212\303\277\032{\276\302:\326\264\277\267\"9\266\274N\232?\234\301;=\331\272\222?i&\201o7\212\306?\216\027X\2011\244\302?\270g>\'7\007\310\2776\250E|\370\370\317\277\337&\031H6\323\275?\307\351\253g\274\342\305?\022\333\232b\006F\242?\364J\\\271\214\364\300?\241\256\016\023b\346\267?\364\221\336\351\016\002\323?oQ\236\345\375I\255?\330\265\314[\363\211\305?\256\017\236d\213\235\271?\326;\352\357\241\357\312\277=\367\'\213\340Qz?\275\201C\354\210\231\246?\253y-\t>\345\223\277WUJ\334p\350\242\277\334A3\317\t\035\304?\343\\\326k\3203t\2776\332\255.\301\032\243\277+gAa\250\323\272?\346\177\223\350\006\301\325?Pe\203\355\222}\257\277.\373\257D\200\203\263\277Z\3246\324Y\234\242\2770\221\2473r\200\310?y\234\035\276\231|\270?\227\377\326!\262e\324?\017\235iZ\210\032\265?b\373\314\357\210\215\324?N\344K\266\366\013\310?\300\t\345N\261\312\275?\261DkA\215\303\276\277\332\321\360y[\353\324\277\3125\364</\262\303?\256f[\004\245V\267\277l\000v\303\332\265\246\277\214\003\037!c\257\224\277o\'\216\203\206_\315?G\220\232\312[\310\324\277\301\350\225\260\226^\276\277@\"\310j\247\260\325\277\"Y\222\345\035\221\320?%{\027\272\226\267\300\277\310\362Y\221\202\344\304\277N\007w\"_s\312\277\227\\\233dv\252\352\277\036\2509X\325s\266?\307\353a\233\265~\320\277Df/\341\315\254\241\277\365r.\360\002\221\315\277U\270wd\2220\304\277Pc\203*\207\302\343\2772\233G(\rj\274\277\321\0249R\242\325\253\277\320\357\270\014ym\274?\205)\326\356\262\331\341?\213\255\250\220\004\216\306?3\221#\224h\254\242?\374\276\216fX\236\311?\363\240g\005\377\342\240\277\031\225\013\314\345-\306\277I\264\2766\r3\263\277\217\004\310C\270D\247\277\334*\240\242\255p\321?\237\273[\347\rg\220\277@G\272\335\324X\271?-\033\377\304\321\363\276?pq9T~\354\303?\234c\347k\017\357~?a\3515\265:\001\225\277F\211\372\302v\203\264\277*xU\346dk\331\277T,\246\201S.\244?uf\225D2K\302\277x\375\311~n/\260\277\305\026\350\206\252l\262\277\342u\234\313\030\314\253\277^\2216\'.\334\255?\021\310\237\214g\004\243?e\341\177H\212\242\272\277\004\016(\213v\251\311\277X\034\342*\337{\251\277I\216\251\365\245\347\262\277f\274\036\210d+\225?2\262K@7}\262\277\224\205\356\260\306]\261\277X\207\265\222\376\344\326\277\252\206p\311\253\035\266\277x\266\202\000\2267\300\277\317MkR\032}\235\277n\017\017}\003\327\222?\225\330WW8\344\312?\013!\340\332\027\002\335?\232\375\323J\2506\300\277%\374>\205zS\260?.\251\367\206L\313\262?\317\350\247\332$\316\263?B\031\243\034B\223`\277z\264\300\244[\t\317?\345\002\372\374>l\210?\376ry?\255=\241\277sc\205\253\265\376\260\277\256\237#\372\345\264\273\277%\267\000(\017\217\261?X\272\267\261O\273\264?\305\032\334M7\220\315?\320/\222\353\3612\277?\023`G\017\201\317\303?\021b\024\352x\204\305?\304\237G\3712X\265?\373\222\036x\362z\274?\007\377V\005\007E\342\277\334\022\374{\304F\277\277\225\'\205\035\2614\216\277hq\254\006\214\362\306\277Ba\027\326ez\264\277]B\244\323\001\211\316?a\373i2S/\276\277e\310\007\321k\264\321\277V\316=\354?#\247?I\272\025\302\231D\340?B\331<\310fz\306\277\311\271m\006C\371\274\277\263a\323P\352\266\324\277\263\210\241A\372\373\311?h\241\tI\\\250\321\277\030\021\376o$\243\240?\031MP\021\346\020\330\277NS\315A\037O\303?\000\004CV\271\010\312?\007\221\223=\276\243\273?\025[|\005er\314?B\365\014\313V\000\322\277\256\302*\nl\326\343?\205\354\332\333\305\211\216\277E\265L2\311\023\312\277;\n\367\340\033T\305\277\030\010\201%\327\252\270?\347p\271W&\021\304?\242\366Z\376\022\255\301\277B]\221\305\224\024\313\277iua\2579s\262?\002\234\275\253\006\r\263\277$\244\030v\000\364\256?<\334A\030dU\207\277\033\343\347\261\320U\255?\354\2023\346\351I\320\277\034\346\307\345\277/\277?6\354]3Y\356\271\277\274\253\r\275\364\337\332\277\346\267>\233\272\232\260\277 \360\351I\265E\260?\252\274j/.\024\311?\322>D\262R\340\313\277\327y\025\007\014\200\272?\277\247\264\032\344&\262\277\014z\220\246\306\340\261\277y!\200\240<C\233?\252\322\240\373\243\231\254?\321\207E\006o\243\264\277\3767.O\032*\255\277J\210|\027\307\305\313\277Q\\b\323I\347\320\277<\024q^\305\235\307?%\375\206\272\267\264\241?\311\207\213\237\275=\255?C\215sr\203\334\313\277&\260\3771!\025\265?v\372\307\327\004=\311\277\257\321\031(\003\210\242\277(H\030 \267/\267?C\313hp\031\256\274?\207r#\351\304\267\334?\022\271\376\0208c\257\277_\ns\3724\361\241?W\364\021\002Tj\263\277x2\256\262\211\203\323\277\030\034\356\2561\367\327?\026\202\375\010\315\336\324\277YG\324\016\r\370\265\277\024>E\200\326\235\375?\245\217\335r\341q\326?&\341\252p&\335\312\277\206\270\026\365w\372\332\277\276\202\232\272\277\311\333\277\200U\257f/\302\214\277\331\343\026\312~n\364?\276\303\212.\377\316\313\2776S\216\224\225\306\342?-8*eM\022\303?\364\310\014V;U\312\277\310\'ob\210\327\343\277\313\246\317\"z9\362\277\277T\'\020\010y\373?(eZK~\335\301\277\323\370\231\271Y\271\254\277\323#\316D\021\206\266\277o\315\3479\233\003\313?O\016?\221e\035\275??\267\300\216\025\257\330?EA+\355\236\017\344\277\344\245\345$a\211\241?\305F\372\343\373\237\221\277\262\246\217t2\247\344?n\237\234h\007\312\300\277\016\205\312\244\036\334\335?\033[\340\316e\351\325\277\225\324_-\257\341\327?6?\371\231\365\177\271?df\227*`\223\306\277\312\341e)\335:\305\277\354\356\226\313XE\260?\320\337al\023\212\255?[\007\255G\271Y\345\277\245D\324\031\262a\277?XZ\020\002.\230\321\277\025\314\214\300\3348\243?\331\247\026\023w\336\257?\361Ei%F\312\314?\210\036R[\204x\201\277\304\274\033T\"\245\324\277\266\277\317\367\2572\236\277\023\311\202\331J\265u?\233_\262\326\304Y\252?\033\264\217Y>\213\271?X\215\252\327\205\353\254\277h\216\346`\200\030\307\277\376\345\035\201\253n\304?]T\342q\355\300\305\277\300\303\343>\367\326\310?<\203\2657R\333\315?m\314\270\315\305U\304?\244\231\024\310\223\372\321?\373\004M\243)\251\304\277}\242\360\316T\276\271\277.\027\030f1\034\270\277\362\335\321o5\344\313?A3mml\341\352?3\224\307\020Gc\304\277\326\205\371\022\\\230\302?Es\304]\336\263\306?#f\300\004W\327\323\277\202\232\367\312pU\323?\331\276\244G\023\333\265\277\355\231\267i\337\t\342?.\330\322\035j;\324\277.\231\014\312Xi\324\277qlKD\367\247\320\277\322\357~k\021w\221\277g-\335\361\257\304\322\277\214\006\030\036\026\337\320?\233\235%d\360q\343?\210\252\003z\261\276\207\277|Y\353\210]\366\316?<>Z\270w\033\275\277\375=L\256\365\347\322?\2176l\333\324\231\217?\335\372\310\351\352\243\202\277\245\000\325\215\322>\342?C\317g\334wd\271?W\316>\363\364:\334\277t\372\035\215\220\002\303?d\225\365\006D\337\302\277\325\'\346\344\245\331\273?\032A\375\372\003M\256?\033\245\254,\027\211\246\2772\236k0\340\237\315?he\341\025[\220\315?\360.E\356\362\250\267\277\343\377j\372\016\362\320?R\321\022t\344\010\256?\367\302\354`\004\231\313\277\371e\342\331\313\207\273\277m\332\\\204\206\027\345\277\337\340\321h\331\351\244\277G&\242\325,\334\271?Q\n\024>U\224\273?Q\247)\324\313\032\267?\332\376\262.y\200\303\277f\266\245\0007J\255\277\013P\212\233!\001\344?n\373&6l\030\302\277\227\205>\356\206\230\303?/\252\322\352C^\332\277X\253(\202\312%\235\277\003n\246\240;\267\205\277\025\223\312`\026\315\260?3\231\001\330\2530\311\277\331\354Nm\005{\263?\241\205Z\340k5\301?X\0235\246\023`q?\031\271\261-\243|\262\277\233V\371\310b\010\313\277I)\262\007\002\021\350?\"\324\362\301\350\200\263\277\223Y\334O\013\206\306\277\264uqk#\215\264\277L\317A\255\210\221\225?\030\010\362{\266\264\304?\0055q\016\230X\270\277\361\313\030\305:\337\305\277\274\373\221\030\177\215\266?\\\306}\270\370\376\241?\247\036S\314\032\343\263?\352\020\360z\305\312\265\277\221X\265Z\340\245\270?(\301}|\010\342\312\277\267|L\221\000\253\243?\265E\367\226\375<\304\277\215\314\267\300g\251\325\277^l\326\020{\236\260?\327ox\031,\355\304?\3532N\371\036\025\321?\273Z\377\026H.\236\277\211\367\227FR\005\263?\256\271\215[a\317\257\277K\240\356\201\357;\307\277\346\341\372\336P[\255?\035Y\361\335\201\212\252?\344R\277\334\215\271\302\277\356<\267\305\300R\311\277\237\316 C\352S\250\277\253d\226\023Rx\204?Z1\010\032&\240\305?\2341\300:\246\220}?\266,\025\006>\223\316?=\212+\250YT\320\277\212\303*\226\371\245\271?\301\370i-\263v\312\277fi\252C\3337\241?8@\336\274#2\224\277\202E\222e\376Zu?\254B\314\212%\206\330?I\337\000\035m\212\276\277<\rv\361\304H\220\277\377\305\031\321\356\004\276\277^\300U\027\203\024\350?\233Y\020/\316\312\334\277L\371\001rCP\313?\000 \215\351\337a\267\277\363\211&\226\032j\314\277w \325\234\035\322\326?\257?U\016\265n\321\277\010$T\000\256\235\312?[\373\017k>T\322?\221q~,\207\266\301?l\007\242V\201\301\324?=\264\203\201\215\340\314?\275\261\277\265\271T\301?w\304\351\226&\032\273?\301\235\2524&\376\302?g1\265\275\254\235\331\277$\257VI1\030\363\277\204B\324\030\201`\324\277\007\306\001\014\351{\243\277m\223/\323!\214\320\277\314)\231\344\327\227\243\277~^G\252n!\321?\351J\201\206\331\302\321?&e\332\350\001\005\312?\240k\030-%\377\337\277s\310\264` |\321?\213-\376\221\236\232\301\277\303[S\273\034\374\264?\216\326\262\361\024\010\325\277\325~0s\300\322\325?\347f\n%L\234\201?\344/\177>\032.\323?\245\305f0M\313\320?\267)\2716\337\346\267\277\204\274\362\314r\246\332\277H_\322B\356{\350\277\355`\272\247\231T\326\277)\312\"\235bW\224?\243\025\0059\373\220\271\277\"\203*\030\n\200\327\277\264\372\364y\303\336\265\277\241\247\321J\302:\303?\207h\273\247\233\306\300?\026&6\330m\340\251?^|\3709\263\317\310\277\234\211yD\3720\255?\310\003\253f\242\326\305?\302)\203\363\265\313\275?\211\366\010\312\313\234\267?\234\344\362\034\203\003\234?\355\370R\207\263\203\303\277T\226\354\233\333\023\303?\210&\004U\235{\274\277\006\024W\315\360\222\330\277\341t)5NV\264?\275P\\]!\276\313?b\305?9\220*\304?k\330\340\267M\265\264\277\323\252s\265\267\025\254\277;\371\230\262\234\003u?9\345Z\377\005-\314?\031\022\324P\373\177\325?9\243\322\234\377\245\312\277\332j\275\357ZB\321?\301\202?\310`\352\262?^\023M\253\331\355\320\277g4&\027\3533\266?\311D\273\n\213\224\301\277\236TH\3678\213\273?\223\020\304:\377\264\332\277J\226(4\213\270\324\277\247o\237`\365\207\276\277\3360Z\345\241\231\263?h\337\026\357\325\367\322\277\211\2444I@m\271\277\322\307\215\350<3\337?\374\207\247}\247\345\342?\327jP\254s\342\307?T\007 \376\332\266\274?\331\032\333^\260\375\273?\"2\355\210\216\373\261?\3344P\307\254\007\265?V\326\326\245\370\n\310?\310\262\026\177\016\207\270\277Q\010|p\274~\320\277\033\225q\242\316\320\226?8x\355\374\267\205\260\277\332rv/[c\272?\036kt\206\361\212\212\277\203\030\226\225\345\307\326\277\244:\242C\301\352\254\277\205gr$\r\346\276?\305\360\351\214\236P\253\277]?s\3516J\313?\242\371\345P\260\207\302?&\255\205V\354)\341\277R:\036\312d\324\252?\322\354|\310\"\360\320\277\n\256]\370u6\260\277k\220\3263\214\006\332?,L~/\244c\311\277\241\3667\230G\376\247\277+d@\026+\213\301\277Ip\206U\230f\305\277\220\237vTU\025\361?\'f\004\266ge\300?B\203M\364Sb\304\277\010\352h\346\331E\332\277q\013=\006\3673\262\277\212C\233\213\270\255\311?\246\017\367\242qa\220\277\244\037\324\255\210C\265\277\320g\300\000:\314\242\277&R\030\022\205\307\333\277\220a\214\\\210\335\314\277\330d\234b\215!\261?\350\320\027\223D\371\245?/\315\020@KU\342?\032\226QM\362\201\274?\215{\257\221Kr\253?o8\212[\264K\231?h\243\260\331\241\225\302\277\nB\022v\3055\272\277Z\035\323\327\343\350\240?w\254n\002\230#\301\277\342\232`a\251.\313?\2761\203>\372\305\314\277\217\001)s7\375\274\277\036\325\022:o\333\274\277\365s\330\001\036\344\305\277\222\216\277Bn\212\260\277\355\037\316\356QAZ?+\3631(\263\024\262?\255:\205\3539U\235?vUWRw=\275\277{5\346\230\217\356\301\277)xX\200\303X\247?\211\372+\300\365\245\271?\203\263\336\225r\233!?\255\303V\2734\307\317?\334\rq\007\306P\245?\266\214\010\003r\310\226\277\304\312\\\304-\247\234?X\250)\205rs\267?\367%\350\207t\005\241?O\n\312#\310\355\213\277K\342\302G\374K\300\277\243\036\362\341B\255\265?\373F\222\t%q\300\277\333\257J\374\275)\277\277\352\2442\334@V\212?\270W/z\2043\300?-\002\310\255\276\347\302?\372\362\271l\301T\231?\026C\3237\220}\233?\177}\217n\333\263\342\277kS9j\316}\265?\322=dd\302\257i?\n\245N\235\353\314\266\277\264a\177|QU\324?{\'T?\357\316\331\277-i\t6c!\324?\325\231d\343\330\216\312?]J\330\0333\020\271?\333\001\267\236:C\371\277z\210\250R\241\317\357?\233\237\367\335\0205\353\277\340\200\234^\271\221\341?\004\317\215\210J\257\355\277\275(Z0\337\334\323?\240v`y\244M\317\277\266\250\000\340]\262\327?b\242\006(\360\320\264\277R!\230\360\221\022\320\277;.\350\020\254n\345\277#\342\341\255\274v\360\277\347\340V<\rk\334\277\231\2742\336\246\272\320\277\366\360\006u\364\035\304?\037\237\375\274L\235\354\277\013\236\333\355g\331\235?\245x\260\254\375\230\334?\275\221\220@W\371\217\277x\020\355\336\253s\302?\316?7\254\0053\335\277\205TEA\223_\331?3\351,j\301\231\323\277\350\250\231\237P\217\307?\034\234\362>0\247\305\277\237\254\261\354\277\231\273\277?\206\035\232\300\211\226?h\231\333\214\231\005\310?\362\216^\016\013\354\276\277\370\'\006[\365\346\320?<e0y\231\223T?q\246FZ\227,f\277\341x\207/z\356\302\277`\365\0272n\244\315\277\276\230\n\214H\365\220?\335\023$\204\200\250\314\277\026\374\032Ss\356\263?`\264\014\237\374\317\243\277\004!\355\231\\\326\310?:\200>\243\013 \313?\245Kr\013\316\327\266?j3\200\374\374\357\242?i\207\375N\265\241\261\277\242a\235\257m\302\254\277\346\263a2\271]\243?y\331\362%\002\257\271\277\325c\3069\375\201\224\277\363\331\332\007+U\313?^SAYg\314\323?Xp\'\346T\276\305?\377\256\2101sn\266?\023\216\005Q\277\255\334\277\335\333\240h\333U\310\277\334\213\037\3559Z\230?\311\353\342)\234\224\245\277\376\'~\2541%\331?\206y\337\225[\356\226\277\016\367R\207\273\371\244\277R\224\'\245\037\030\337?%\311\235I\027\354\242?\247\'8\004Z\017\335\277(\302\260\244\347\271\303?\362\323\247\323f\245\275\277\303\334\204\316\235\205\231?\350\316C#\245\361\240\277Z\262\266\257_\000\221\277.\325\354QN\216\232?+V\342Y|\201\324?\327\263\246dg\252b\277\022\350\267\351\326L\300?\226\005\230\007\310[\262?\033B\360\242\255\030\313\277#\343\036\251\244\243\263\277\357\207M;*\211\340\277r\027\303\205\371:\305\277\361@\357\212\021(\310?\341\303\355g\036$\301?\313\031\375\313\324\265\247?\023rwl\001\211\253\277\031Oy\337L \303?\014\252\221T\362\002\327?\375\',v_\201\334\277\261\221\235A\252@\324?U\346\"\301\360{\262\277\033 \2746D\370\270?\362\336\305\203\3400\321\277F\310\304\250\034\217\316?\337\356-\037\206\216\205?wk\254!\010{\302?\370\022F\364\335\312\257\277H\036i1\223_\303?\373J@\270\230\251\244\277\014**6\323\010\300\277\361WJ\315\201\271\316?\035<\013\350\210\353\312\277\264\t\201\007\251\254\341?&\004\244\372\340\363\313\277\362\t\377\243\322\261\252\277B\227\334\013\305\273\301\277\311QAY\035#\306\277\303\222\365\273r\244\340?/KfX\327\274\315?lj\222v\341\000\324\277\274\026\350*uC\317\277a^\014\2546I\313\277\250y\252\305\211~\340?3\241\227\245\212(\277\277\360\005Nj\366\364\245\277\030\316\312\363l\204\307\277\320\303L1\317^\326\277\327\367\375Y\365x\317\277\267\317\314\027q\036\323?\000\244\275\232(P\227\277\020\202\206\334RD\325?\313\333\313\\\372\276\321?\031\210\267U\364\204\317\2776\226PW\265\355\270?\n\275s\014\005\320\250\277\255\201\374\264\312\240_?\303\275\257\306\300\275\242?\317\326\032\235\036~\250?\313\312\201I\224\257\235?D\274\023\206|\376\311\277\215\344\030]C\'\265\277/AAA4\241\271\277G\335\336|\321S\306\277Q\265\264\370X)\260?\347=]\253\316\321\253?M-\275\323\354\303\261?n!\235{\264\313\266?\333\377\321\007k\253\250?A.*\203\334\003\313\277&\227\330\321\265~\222?\355h\236\275l4\222?\003lB\206\333Ng?\331\267(\365\274}\310?\212a\244\266\362\210\221?\3162\352\357\351D\314\277\367\240[\263R\352{\277\013\031\345\245\344\212\302?\3477\006\270\334\t\236?\340,\371\264\343\323w?R\277X\202\220\257\316\277\326v\242Ag\334b?l\026/\251\024\t\273\277\017a\366Y\362\317\241\277]\351\320C\327\263\214?\260{d%V\331\262?;\364wL)\263\255?\317\377#\310\364\374\271\277\360\244e\232\221\264\305\277\376\224\307\353Q\304\327\277\261\353\345\276\227!\241?\354\023\251A,\267\253?\324\034\211\020$\034\277\277\2718\271\205\232\372\277?4\210\311\277f\252\340?)\271\370\335^\345\322?\025\274\033\244\336\037\326\277\002\201\001k[\013\266?\003IvTY\006\352?\001\344\237Q\024\332\350\277\316-\032\333z\211\342?\0070\325J\377u\312\277\327\2151\006\346\343\366?\333\331W\0316\331\340\277gy\215|\360\025\363?n\357\331}d\354\320\277\261\025\211E\313\337\320?\035R\317\034_F\343\277f\360Ro;\022\357?5\337\221T\2162\323?\001/\241Rs\251\246\277\301\030j>_\220\334?\352L\022\332\376\331\352\277\321\322\"\177\024\023\342?z\263\301\343\273\332\303\277\311\023`\001sI\265\277xp\'\016\032\301\322\277+\313\001,\335\301\257\277s\006\203\3756\030\240\277\350\303N\322\372\241\352?\360\337D\021#\377\352\277\214*Yj\247Y\275\277\330\365C\366\342g\332\277\333\310\034\234\222m\331\277j[o\247\325m\234?\376z\254\307s;\240\2776a\257\275\341\004\263\277\035\341t\326\177\265\305\277#\354\222\334t\025\312\277}\330\316B\214\035\304?\024\211\271\271hh\251?\001K.\206\341\260\263?\020]f\304\343\276\261?b\270}L\207z\307?rg\270ub\203\235?\'\017\321(T\274\311\277\376\344u\036`M\267\277c@\2409\305\267\241\277\210\035\245\300\225\222\300?s\232\301\000}\315b\277\262D>\304\033\233\315\277\334|\321\265\275\320\243\277\315\3732>%U\255?\331k\346\276\343\211\275\277y\215v\\\362\360\274?\311*D\357\344\253\261?\262\327N\235\331\232\307?C2\233\030!\256\301?\374\233E\353uq\302?`U\r\242}\201\326\277\256\r\'\255\272s\240\277A`\315\370\355\215;?\266;CD\337\361\266\277\374\317\2267\232\334\323?\007s\006+w\262\300?7\215G\233\200T\265?\037i)&dl\350?\006\363E\222\2708U?\0004p)\352\013\366\277\223\305\005l\236\027\264?\327N\225\005\370\207\265\277\315\3704\212\366\234\333?m\361\326~\002\034\221\277\342\203\n\017,M\234?\260I\266\344\277\372\277\277\267\204tg\211\223\324?\212]\370\315v\004\266\277&Tm\212p\274\265?4\2740\270\032\250\270?\254\221l\003\3159e\277K[\n\263\'\r\236\277\202b1\236\203\373\343\277\r\357\002r\250\316\302?j\323_\234T\220\243?z5\264\266!\377\272?\2535\211 \275\310\275\277`\256\246\352fj\245\277^\265\357)Td\302?.ad&,\257\313?K\224b7H\230\300\277I\260*9b\362\257\277J\333E\365\214\374\224?![\336\024oy\262?A\370\207|7F\314\2779`\227\027:2\312?\251\354y\220\235\035\230\277[\256\242\243\326\230\303?\023\275\223\356\002\016\254?G\025\005\272\273\354\246?\206_\255Y\'\354\317\277\210\014H\257\002\273\267?yi\'\355\277\323\262?3\345\302\014\311\373\311\277\216\'\353\255\373\267\335?\335W\332\243\016\345\305?$\374o\344\372\335\321?H\320E\202RM\341?\021\234\267-\030\331\326?\370\266\203_Z8\334\277\306\354\234\234hi\326\277o\302O\252\002\240\341?\264s\000%S\254\326?4A\260\250Pv\244?\033;r9\233m\364?\035-\342q<~\306?\313s\376\342\210f\333?\203\265\256\211N\177\335?t\205earQ\245\277J\201\313\201$\014\241\277e\177\362\254\256\344\365\277\244\372\240\361`fR\277\312\221\254\036\346\200\330\277\374\321\313E\3458\301\277B{\376s\243\367\364\277Ef\226+\017\234\275\277\027uA?\234 \251?9%E\356\317\021\350\277\365f+\010\345\304\322\277\302\264Q\016\030\230\261\2772\177\000\355l>\245\277b\237\203\033*a\237?\010\233.\275/E\320\277\320\324\354\205G>\245?\243\033\314\003\271~\330\277\310\273\010\242\260f\263\277f\327\314Z\214\037\326\277\247\214\300-C\356\302\277\003\035uI V\221\277\267\036\332\332\245&\247\277\300X\373\333/\203\350?\2229m\331P\302\270\277\275\316\345\031\035\006\250?4:\241\351\224\341\306?\016Z\027\'\316\314\337?\006\262af\323M\273\277\250o\260\177\037\013\223\277O\364\373\036$i\324\277\"\2014\025$h\300\277}\372\033?0;\306?\033\223f\215\244\022\220?\341\206\236\r;\214\212?\311\022c:\211\r\322\277g\225\023\272\276\263\215\277q\322\r\265\355\022\332\277\256 \351`\375\\\273\277\304\371\332M\316\270\307\277L\301\245\260\023\317\312\277\301\356\007\325\257\007\\\277jsF\024e\352\306\277\202\202\334_\315!\352?\030\227\355\314q\002\261\277\2056\361d+\034\306?\300\021\276\303\362\205\272?\207\230)\257\310\351\340?\264!\251W^\241\311\277*D\255)G\334\332\277\376\363k\225\350\002\273?\377\376\360j\342\320\243\277)\241\226\372\344~\304?\231\310;\025\320\352\265\277H\366\357\027U\005\343?!\314s\212\224k\237?#$\227\251O\357\321\2774\310vj\335\307\327\277\223\"\023jR\206\342\277l\310H\273\001&\031\277\021\277RMl\021\317?mhS\n\276\262\360\277R\"\250\216i\031\343\277\237\355\302T\003\034\343?\300\202F\262\332+\365?;\260\353 \342\310\247?5\367\233E\242:\346?]fG4\205\027\336?)\200\211\212\020g\323\277g\\\362l\367\013\322\277\370 A\217\221\377\246\277\004\023:\301\'\356\264\277>\247\246\013\341\225\276\277:\314nX\231\350\320?=\005\303(\214\344\276?\251\250N\005\001\210Z?0I\227T>\024\315\277\266\212\242~\267\021\345?\347&M\242\272\310\316\277\300\310\205/\261`\260\277\321\311\023\214\021\273\263\277Ay\371\313\333\263\306\277\277\241\240\022\230\275\323\277\215[\253\265L\235\343\2774/Z\371\220\026\335?)Q\313/\247\021\260?\335 K2\004\313\315?\247dZ\026E\217\333\277\016\302\030:G\002\265\277\274*\372)\000\226\243\277^\225\0262r\303\330\277:\352V\0202G\246\277\250G5k\025\204\302\277\307/\236*\245\321\214\277\204\270c\313h\005\257\277\371q\244\365\014v\310\277\'2\343^\013\262\267\277\350\276x\255\035\334\255\277\016\237D\335DB\260\277\310n\032\275\240o\307\277\333v\225\322)\360\274\277\242*S\257<Y\302\277u\004.bp \302\2774\201g+\277\027\324?\307\312U_[\337\255\277s\375\252:4G\300?@4\203O\262\310\267?\301\374\001\2366m\302?\213\223\352Q\316\355\275?\271o\2366R\343\313?*\262\237K\016 \310\277i\257\251{\363\365\271\277\267\312\210\223 j\341?\270\333\207\361]\335\306\277\206\336\330\345g\225\275?/\2205\213\037\006\330\277\224\245z\242\352\374\216\277\335\246\276\217\024V\255\277\351\346](\301\343\232\277\345b \250\020\021\310\277\025\371\215_\215\245\265?\207\242\334\245z\375\177\277\255\366N\004\202[\246\277\274\305\2549\271\t\233?[M\316\024\340\007\310\277\027\213\013\366P\276\341?tr\357\312\221\r\265\277\321?\245tt\257\256\277\017\017\344\310\377\261\321\277t7\'\022&:`?\376 \345\007i\325\304\277n]\013\354f\010\320\277Y\336\346/\337B\340?\375\321X\026\334k\314?\322\334\013\325\003\007\324\277\231b\353\357\263\366\325\277U\002G\343\343}\307\277\326\034!\2710\344\336?\326\373]=6\033\252\277f\027[\277\331\371\232\277\212\336M_}\350\303\277X\214\\\202\201R\326\277_\277[\233D\251\304\277e\336\357\255WW\334?tU\247\001\240\256\262\277F\322g\252$\006\326?\202\313\326:k\276\271?\235@\353O2\351\324\277\347\242\222\354\273f\317?\376\177[hl\312\265?.\253\020\002\234a\336?\005eC/\036\317\333?\320\225\\\262\237 \346\277\325_\244C|\245\335\277\"\252\310Y\245\375\345?J\254k)S\224\325?\223\022\0244\023\335\320?\323n1\316\030\246\361?\211\335\224fA\200\301?\272:X\322-\013\332?\353\2321\350\371\363\333?\363\317\322\246\t~\220\277\271\223\311\222c\017\241\277\373\202\214a\204\226\362\2775d\344\305\364\325\314?{\256\023GU)\341\277\202XQO\304.\254?\026\r\306\305\375\017\361\277cH\035\001\013\312\202?\033\304/\313x\333\303\277\n\n\354&L\312\340\277\251d\367\305n\r\274\277\016\314w\305\363\021\303\277\272\005\262\3303\265\224?Hm\0343\246\301\277\277<RL~\003\300\316\277\004\224R\240\006\226\243?\342\"\214\3267\205\326\277#\031Z\333N\304\276\277\220N\t\310\306\271\330\277\330\220\361B\270\337\311\277pL>\024\317\250\272?QF=(a\355\250\277\370\177\232\275l\376\345?\312Y\316\363:\243\232?\013\"\010*\026\203\265?\242\317\336\276=\256\300?\216\026d\307*\020\340?\250\360\007AP\371\276\277\325\252\237<\321y\261\277\242\302#\373z\276\343\277?G\317\346\\\254\265\277\337\241\226\270\025\312\277?0\336#\032\254\370z?\325\213M\310\331\312\277\277\222\260\342\236\201\032\327\277\257V\026u\345^\254?\304]\245Q\231\202\334\277\3470\206\322t\221\222\277u8\027zO\276\312\277\"Md\237\t8\312\277\360[\034Okm\247?\375?\"Co\267\301\277\370\346*\311\256\220\360?f\360\271\233e!\250?T\"q\350.r\323?\231\271\212kW\246\247?\322\377-1\225\207\344?@c\310\306\265\345\346\2771\260\3777S\023\323\277\366\213\270\270V\020\300?\014l\010\313v\300\263\277\335\330o\376\250\365\343?\336!\333}\rR\344?\026E\211\366\356\374\361\277\027\321\200\205\350a\226?\234W\377\370\324\321\343\277:h.\372\027\\\331?o[\365\3576\371\300\277\325\344\035g\364\267\267?\031V0\214QK\323?\235Q\2564j4\342\277\205E\026\005-V\317\277\216\321)\342\345\360\322\277\222\302\001J\006J\334\277\305\324CiG\003\345?\316\'\362FIL\325?\372u\310\0322}\324\277e\020h\\\351a\274\277\217y\243P`I\244?\337\002~\364\230\205\332?,\350[\367mU\260\2776!\265\013}\243\320\277,\262\002\'\'\363\215?\004\307\372\013\202\327\327?\233%\273\372\337&\310?\024\306v\270\2622\273\277e;\213T8U\372?\1772\014\343\000\373\342\277\303]%\022\235\306\270?\226\365\251,\036v\212?\250\2765:\007\326\307\2775`\252\200\333\272\327\277y\355S\233H\177\362\277]\005O\201H\365\340?\t\233>mB\"\241\2775\312\3066\266\004\321?\261\300\305\214#`\371\277\233\212\312\222\375\377\267\277\301\337\355\345\177\312\250\277\241\244\272n\020\224\341\277\223W\374>\337\237\307\277a\275g\\\315\275E\277V\266\303`G\366\231\277\230_\247i\350H|?^\335\033\317\360\370\324\277&\354\202\214Z\032\263\277I\276/\025\327k\325\277r\363&\345\001\377\260\2776\354\037{\352\356\321\277\255p\336k\373\034\306\277\277fM\250\003\267\265?U\310\271W\327&k\277O>E\277\006\225\342?\326K\022M_:\255\277\302\220m\252\214F\312?0\265\217\000\237y\226\277\336\356z\241\275\214\335?\313tK\373a\216\263?\345q\217\260g\005\300?2\320E\366\2232\214?\315Q\314\200\265\007\306?pz\022J\336O\302\277F\256\005\233\037\025\277\277#\262\247\272\317F\260?=\032\212\320\344p\276\277\220\277\026\370!\254\312\277\351\013v\243\341\r\250?\020\232\335E\337\343\315?X6\':\337H\302?\016\345\241\354\316\351\324?\016\035\212\353\343\247\224\277\365\342$!\2657\247\277\323\355A\312\276\264\310\277\262\207\366R0\230R?5\376<H\035J\337?\377\335\261p\302\217\277\277\207\245FO\\\213\303\277\205\274\210\372\340@\265\277\031\024M=(\345\272\277\364J E\023\272\331\277\347\264\001\353\222\345\304\277\247\006}\274\244\016\337?\036\3750\264\235\366\244?\224f\035\3473\331\304\277\247\257\345-\215\226\325\277\357\231\276\203L\335\302\277\262\360\344\324R\017\342\277\177\034-]\356O\247\277\361\006\021\301{U\325\277\336P\216\307\357\241\313\277\303\336\367\216\315B\312\277|=|\367[e\300\277\330\307\350Xyd\376?r\260I\262Z\252\242?\311\310tw\336\221\324?\275f\364\221U\312\260?\200/1\211g\350\361?\337;\2318\341\247\275\277X\021\034\356\r\031\333\277v\210h\036% \331\277x\256~3\000O\273\277\350\177\r\n\314\222\216\277\254\327\246)\343\224\262\277$Q\364\257\260,\273?6\260\\a`\244\307\277;\203MT (\265\277\271\234\346\371\305\336\334\277\234\020,\212X{\310\277\377F\367\rT\334\304\277\367\304\003\027-!\315\277.\307N\347\351\223\223?\272\323\200\363\254\032\221?\245\302\201\240T\021\350?\265\304X\016q\247\255?hh\310\304\'\275\245?\272B\025\347\376q\272?\351\324\205\357\362N\314?\246>%3\213\022y?\337hI\315/\217\244?fr\022\233\314\236\220?\322q\232\371\211\206\254?\023\363\034\022\304\033\277\277\240\003\256$\003\210\273\277 hJ\005\252\001\310?Y\002\326\274\212\212\234?2Bw\201Jg\301\277\250\240\212\003w\353\304?\253mL\324\227\223\307?+5\215_\346\342\306?\345\027O(\371\300\230?\366\233\306\030\2362\333\277\230\337\033\201\022\n\311\277\350\310\241t!]\325\2770G\356\372E\321\264\277\340\375\022\2538\252\216\277#\230&oA\244\200?\037\030S\n\256\254\277\277\244\007\t\265o\210R?f\233*n\016W\273\277\350Mr\027\002\334\217?\2673\277\323\360_\232?KB\260Nt\340\274\277\335e@NZ$\244\277\370\037\342\260\314\004\301\277t\030\023\2030\004\230?5\353\234a\006^\305\277\234G\350\244F\345\265?^\316\234\305\006s\251?t/\017\361%5\264?O\033\005\270\\\017\277\277\201\273y\212<k\262\277\251=\301\033\323\026\300\277\326/\222\316-\016\315\277\331\032\272~8\334\262?\226\303\2501\230\360\252?\307\262b\003$\347\270?\207\213\266\201Zw\263\277\302\260d\016\203\017\322?\302\241\201\017\262<\344?\034\300\363a\301\326\300\2770\332F\260\341Q\255?\254\210u\314X\240\273\277\006}\305\264\230\254\334\277\370\033t\032\355\265\331?\257Jv\215NL\316?h\235\177\\\250\374\305?\217\313<Yy\223\325\277l\247\003\2255\023\363?N\004\315\030)\250\243?(n\314\237Ri\267?o\200\3475\220\302\326?s\036E=GQ\303?\323\357\260\020\036\263\321\277\273\2212\361\233\346\346\277\201/\335p\334\035\306\277aC \257\017\031\303\277#n^\333\366\273\262?.\\\214\253P\327\272?\302\340\3669\267-\303?^D\320\22182\366?\3716\372\342\337\302\304?\216\345\334\224\365\320\360\277\252\275\272`d\025\313\277\361\263w\036\255\211\273?\212n.1\220\200\330?\227\343\235\252\210\371\275?r\346\205\343\014c\327?\036\347\201\363\000l\265\277y\035\337\313\014\253\346?*Y\226)\334\001\235?R2B\262]\214\272\277Bh\326\343q7\274?\001\204%k+\242\330\277\315\270(\002^\374\260\277\227\370\274J\347^\346\277\363\311L\340\264\312\206?=\2213\261\361\310\321\277B5\306\202\020\354\236\277*\265\267Z\325\206\226\277\257\324@\301\276\267\260?\305y\347\374\340\330\266?I\207\"\213gQ\302\277\210g7\260]\251\211\277\362\264\304\304\2551\240?9\300<\363\t<\267?\273t\205\240Zk\271\277D\377\242\361o\006\240\277\351c|\237/.\302?\214\214j4\034f\250?\036\247\266\275k\200\236?\330I\245/M&\277?\217~d3\306\020i\277\016N\257\245`\360\314\277`n_{\036\334\253?\014\303\345\346\350\221\271\277\372\311\371_b\237\207\277\217\026\337\204\270(\242?\310\370\232wRF\270\2773\3212\320\216\236\273?\304\031A\300\213k\300?\255rn_J\006\261\277\303\007\356\272r\377\303\277xty^\323K\315?\016\271\375\263\360\221\272\277\010\210\274\217?v{? \322\317\372F\'\222\277~\263\001\326\3279\304?\213\352\237\020L\014\320\277\270\262\270r\364#\306?\307\030cUE\311\317\277\225P\325\024=\316\274\277~\303\317\317e)\301?\245HkO\031\256\300?%V\022\244\372\025\322?\266M\251\301\337_\311\277\023\364\3355\326y\254?I\371\336\354\373\200\233?\002\230$\236\216\020\244\277\271\tTP{\326\305\277E%}\022-\006\300\277\361\377]\362\231\\\221\277ISW\375\272{\233\277\323\373o\232Uw\273?\366\335\311\336{\020\320\277\351:\276\007\334\275\252\277M\375\363p\177\001\201\277\000J\034z\262\254\272\277%0\277\367or\270?\014\211\036S\204,\222?S#\r\212i\027\272?^yn\304\363\201\254?\326&\330_\017\270\236?\367\265\373\236\334\322\307\277\027A_J\0375\244?\323s\377\232\310\235\273?_\252\003\372\321\022\246\277\275m\004\276\206\341\322?\307\266\265\307l\004\300\277\313OO\304\316\347\254\277p(\376L\372\260\342\277rFJ?\246\240\322\277\332\355\354v\022\350\254\277\010\346\244\3458!\236?\3503\313\252\205\342\230\277\305F\215\241\221B\324\277\344E\2228\211T\261\277\316\022N\313\332c\331\277\017\311\210^n\212\257\2770\01783Je\314\2774\270*\356\235u\306\277Bm\216\322U\305\247?\347\335\330\272\030\367\237\277^\265\232\311\341\260\341?\360\215\311\2660]\226\277k\240\t\206\231y\266?*\247E\262H&\305?K\351\025\315\"\231\323?\026$\315G x\261\27740j\214\026\344\243\277}?\222\034o]\240?\236\'\354\3336I\302?\363\020\363I}K\305\2772\2160\005\332\232\265?\340\010\025I\016\303\224?I+)\351\242$\207\277\177\223\0071^a\276\277\032\356F\201\204\266\271?f\005\014\2046I\255?\311\346\235\201\311\364\263?\322\013\324\034d\177\257\277\210\276\246M\377<\330\277hN\t\324B\215\306\277\251\022j\\\267\001\322\277G\306\320\234\034\315\200?@ \032A\327 \202?&\212\227N\033\234\274?\2719`\364\253s\270\277J\213>{e\233\250\277\370\3774\177\t\200\300? \376\242\2022\033\307?S\022\006hK\006\250?J\366\202~\334?\276\277\244\335,\343\240\201\220?9\200\352B\3735\215?\177\220}K,\016\227?f\037\036WU~\242?C@|/\027wZ?\316` 4\342\314\263?!9\206u\240\006|?y\020\372F\344\373\252?\376\3505u48\306\277G\216\241\267\036\026\246\277$@\337\356o\232\325\277\377\272\227\000\301\031\265?Lus\010\312\007\265?J\321t\263D\177\251\277e(\303\206\355?\327\277\346\360\364\346\010h\265\277\020\221\273T\"\246\320\277\261\273\205Y\277u\264\277\225tM\264\326\272\307?/\275\206\021{_\276?\344\034m\220\371\343\273\277L`\340\234/\254i\277\276\022+\211&\224\301\277y\364\010\331\235!\247?o!)\367\020V\214\277d\245P~\261k\305?\273L]}\361.|\277U{oZ\030\271\315?t\203\202\r\321N\323?\252\306.M\2413\320?T\367\221\"\234\324\306\277\200\366\337Y\016>\273\277\001\203\246\307A\354\247?\274-\273\220[\356\316\277\262\240bzd!\303?6\331\350\036r3\244\277\n\303{w\341 \322?\364S\035Mo\263\261\277\230H$w\363@\244\277K\373k\212\230\365\324\277u\334\206\212\323\340\271?\231L*%cX\272?\250\001\316R\364\302\312\277\356Y\004W\254^\267\277TO\007\342\016\305\354\277\024\337\334\020\362J\265?\361 \301:\357\357\277\277\330\010DyK\254\274\277\031t\014_U\"t?\356\026u\323md9?\243Q=\347\325\342\323\277\340+\227\244\253\234\320\277\245\361\332/k\020\241\277\353\275m&)0\313\277\357\3301\202>\272\354?^\373\255/\245{\274\277q\304\017\301_t\260\277wRB@q\342\274?\352Y\231\356\266N\300?Mh\327\321\2212\314\277\350q\356\212\377\223\266?f\361\027H\236C\242?{\306\03238\231\235?c9\216\2519\325\302\277\035J\320\243\246\257\272?t\265\020t8\036\305?\271,^K\002\200\250?\033\215\353/\027i\272\2771\\\3521\034\251\324\277\336\024\315}\214\340\312\277\324\361\243\350\203\364\314\2779\357$\275\366\231\240?4\317\263\363eS\256\277\275\013\331h\235\376r?\007\312\360!`F\324\277G&\211\330;\222\301\277\314\032\034\346\323\373\314?e\245\371\347\225\243\223\277\224`\327\270\214/\243\277\312$\034\002\271\304\274\277\362MHHnId?\3725\361Mww\270\277k\311s4\0015\266?\003=\315\301\225\213\306\277\234!8\317\351\300\300\277\253\264gi\252\334\327\277\035\264\230\005\231\'\247?\002\023Sl\247\000\322\277\2040\321n^\325\324\277\352z\342)\365Z\307\277V\374\201\000\216\305\314?\2740\376\375\247\262\332?\341\264\234\355\246\373\304\277\347\237\256\211N\025\272?\004#\177\355\003\003\270?Q[\013qX\227\243\277n\242\261~-\321\252\277\212\001\270\020\202\320\272?n\374\224f\262\210\306?\342\273K\350HB\262\277\344\276\204#@I\306?{^~\314\311\222\276\277-n\327eG\302\270\277-\\\353\023H\013\206?\227\017SV\240\352\312?\253\227\001\"H\331\312?y\367\220h\270i\300?7\251\237\036fK\255?\340\216\033\2343\362\301\277\334!Qd\276\373\205\277\310\355N]\340\354\351\277\24710\311G\224\253?z\347^\343\004U\241\277s\266\021\220L\343\261\277/\201\257\334\2269\324\277\'\006\005\272\214\027\303\277J\001\226\237\275W\311\277\251\250)\317\320Y\326\277\227+\206U\262A\303\277\337p\316\n\003\274\303?\t;,\271[d\250?\202\354\231\0001w\305\277\342\367r\177\016\354\313\277M\"f\007\344\241\272\277\375\342\336\220\007M\352\277\340\'U\247\001f\254\277\337T1~\003\000\316\277\262\252\237\334\341M\310\277wR\307\031\372\363\304\277zw@M\361\223\247\277\342?\347\2248(\356?P3\221\307\233\"\300?\221\253\025\300\320p\246?\211\226\344(Y\370\255?\270_j`\204\004\352?\t\226Vj\257\345\244\277\022\261N\354\321\262\260?\036\220\217\311\216\332\234?;\333x\212\332\260\240?\243\006C\303\306\367\232\277n\334\234\221\256\237\265\277\316\362\027\030\300mF\277^H\205\350\265\035\223\277&\361\213V\302E\301\277g\261C\214g\210\264?\300\252\311\262\256\207\252?U\227\305|\345\337\272?/\317\251\231\370/\300?\221\206\251(\344\002\302\277\033\342\370;\313\031\231\277C0\363[\017z\326\2774\340\000\035\231\244\250\277\250\324\265\206S\246\257\2770Y v\334\216\232\277z\304\332\362\241&\306\277\252M\254\346\277\300\240?\372_\222\036\233T\263\277X\336G\007\361\264\263?\363\2421.\232\373\234\277Y\021\337\275\227\025\221?-\374l\210\213e\332\27770|U\n!\300?\277\224\020\324x\330\241?d\003]\247$\234\251\277\212\002R\374\346)\315?\247\203I\312\206d\263\277r\250\\\333Ra\253?\005U\246wR\201\273\277w!g\224\277?\241\277\002\355,\020\213>\301\277\030\366EyV\274\326\277mt\r\237\274\034\300?\241\356\331V\302W\252\277R\274L\3550\n\240?\307\372\2165\362\321\271\277\017\026\262\253\207]\303?\327ryE\377O\344?\306\223\205{\312m\252\277m-\027\332\317\370\304?\363\343\030\325vD\331\277\302\010\355/\235\235\324\277\030I\356\376~6\264?!}\264\231\312\006\301?%z\020\026\345+\246\277\267/\025t\345\"\321\277\002\212\337\210\366\303\350?\377\016\246\354\364\324\320?\243\261q\n~\225\276?to\376\251\202\302\320?\265\002A6C!\303\2773?\341!\300i\333\277\351\350j\225\332\034\340\277\033\030UY5S\321\277\216#L\014\025\355\242?\355y=\267\234\233\300\2776\212\236\3636%\265?7`\357D7w\301?&-\222|\353\220\344?J\014=J\233\257\306?\276\245gGN#\344\277\255\365\000\371\371\224\277\277|\303\372\233j\325\251?v\275\355\373\3564\327?B\241\256\234\034k\310?\243\242\337\220\214/\340?1U_Wo\344\216?\342\357^Z\251f\321?\236M\263\302\3677\272?\254\243\336j \360\240\277\277\\\311C\230\000\267?_\321\230T\210\354\323\277F\363\026\322\025;\323\277\242\332ja\374\255\322\277\305|\250\203\344\025\212\277\213\367\232\251\241\307\342\2776\365\240r\234P\240\277Q\221\225\276\326\365\264?0\035dO*\014\267?\216\007\333\320_\277\303?\264\213\0052\372x\317\277\2069\335\0138G\322\277\323\375x\363\320x\265?\227rH\372\277\273\231?\2241C\220\366\000y\277\004\232Crg\201\303?\023\021-\334&F\223?($U\340D6\303?Z\263:\242\3163\262\277\212V\340n\355@\302?%\346\376\007\321\213\223?\271\325Ug\234,\323\277\255~\013\364\320\266\203\2778\351\340p\266\267\302\277\221\003\023\336\255y\262\277p$\235\014\220O\305\277\251\214\3630GJ\264\277W\365\205\"=\233\303?g\240L\343L\223\274?\213\236\236+<\273\277\277\210\232\360\313\251\202\300\277\345\240\365\274\'\027\311\277\006\315\314\325\305c\273\277\202\321R\373 ]\262?\232\337|\024\206>\273\277B\351k\246ba\304?\207Eh\315@\325\305\277X\006\247\306;\370\244?\263\245\267^\316\345\301\277\350\021\035\376\231\002\304\277\347\226\362 p\350\206?\016=!i\212\244\206\277,p\243-\353\224\331?\230\237\0072\3235\302\277\330\245\232\347\230\265\224?\n\376\036\026\341\327\301\277\372L\r9\363S\233?\222\214\215W\316J\305\277\262\3742\303\250%\260?\353._\235\361[\300?\346\336\321\032^\355\271\277\023\026o:\333\371\255? S\313\274\327\367\300\277\266}<\033)\t\234\277\227E\241\213\022\276\250\277B\267\301\204@\214\217\277\337\023\t\323BT\201\277\302\266\333\373\310\364\271?v\361\021S\333U\276?3\361U\217\364v\277?\3169\216\n\324>}?h\373\323D\014\006\336\277\354\310\201d}\255\265?0\305\'@bT\275?\211\020\315\350\301\335\243\277e`\325~\0164\301?2\245\010\300\220:\300\277L\353K$\243\324\303\277\3420~\211\036\206\345\277\343\3038]\264\225\314\277\275\345m\002\004\272\246?C\343\366\374\275\005m\277\025\337:\3462Z\265?\022+\276\215#\010\335\277\326\344+\014\211\277\304\277-\220\230\362n\000\340\277\3274\341`\326\236\270\277\375\027\366p\231\234\316\277\254\034J\013\362\005\253\277\004\366\2504wh~\277\267\267=\030\366/\257\2772k\237\266\022\017\361?z~d\3722\375\265\277\237\001>\244\000\315\307??\376\272\002>\265\305?~oa\253\317\234\347?\274\240\302b\316j\277\277v\014\320hM\216\225?J\233\326\331/\246\302?xl\303\245\322P\271?w\364SS\001\263\301\277\350\025\003\027\374\254\200\277&\310\250D\241}\243\2775\020\336\256\236+\305?J~b\315;2\265\277yT\316\246\234\374\303?VTV\2336\253\265? .&-e\\\301?:\016H8\363\363\234?\240\034\223H\307\200\301\277\267W\215f\000\370\255\277r\347V\"S!\323\277W)\331Hl\247q\277\230\256\010I|\010\272\277\032c\243\022\354\260\260?\351\363\202;O\330\300\277\224\320\322B:L\245\277h\001-\323\317\260\300?\272?h\227\004\216\271?\274\302W\213\301r\206?\345+\230[\007*\234\277Ido\377\225\310\326\277$\332\323\236\256\274\257?\364@\233A*\363b\277\014\305o\002\315\307\265\27709\375\224\177\t\316?!\255\344K\033\367\234\277\245\"\014NX\027\243?\220m\227\000\247\035\263\277\tO\312\376\001\217\232\277\"Go\236\264\316\275\277]E\217\014\371\021\336\277n\034\320;X\354\301?\233\305\006\260Vz\246\277\335\273\"Pn\034\267?\371]\240\342\345:\307\277\363\020Mve1\224\2770a\203vJ{\276\277(\350\314\021/\217\300\277\336\232x\345\305\316\322?S\200\3609\363\304\303?9\211\003\352E\245\274\277\346\342\220\360{#\241\277\340\344\305\022\267\300\301\277c\3503_3\"\305\277\275\265\220\331\211Z\301\277\255\254\250\330>O\327?\036\223\257V\364\373\304?3nS\222\372\247\334?\200\266\332\370\343\030\325?\335\261\243XH\032\324?b\006)\272\252f\302\277\002\335\322Z<\201\307\277\304\204\032\234%D\210?W\277\334n\324\366\303\277\025\331\236\235\003x\214\2778\314@\371\274\000\245?A\230x\267Y\313\316?\212\365\264\"\350B\320\277\373|x\227Q\343\234?\221\264\261\320\303\357\263\277>\301\337nq\343\217?\247\007@f\240\214\237\277\255R\362<;=\305\277\255]\315\256\271;\207?d}/A\214\334\357\277\215\365\033\\\3235\312?\340\303e\375\014\203\215?\0370\212\312\220\237\305?\254c\301NB\370\265?\316\260>?R\321\263\277\273\351Y\005\340\236\321\277\223\027\315f\306\314\325\277\337\013<\274\020\226\266\277B3`\3113\023\314\277\007H\233w\214\225\357?_\243K\300\022\333\256?\246\314\213\033\247E\277?\303YZ\247\205\035\307?\260\216<\201\036\375\225?\373@j96\355\275\277\326\003ehxD\271?|4\202\025[\312\270?\204\231Q\316\017\004\306?}\371$\245\240<\261\277JtS+y8\320?\"\007\031O\377\237q\277 ~\372\270\326\205\305?w`\235\352\234\265\270?v\021\326rJ\321\272\277\304/Z\265\347Z\261\277\354v\023t\331q\330\277\375Z\263\2604\006\301?d\355\2367-v\274\277)\217v\372D\335\242?D\020\313\270_\017\311\277\334\232yI\261\347\254?\222E\233#\rH\343?fG\363\234\2122\266?MT.E8\310\302\277\353\216x\230zL\273\277I\333\345\322\311\002\244\277%\220\361\331\n\004\246\277\335\212\303\232*A\210\277\203Ip9Y\007\221\277z\314\307\360\226\'\251\277V1\225s\220\222\315\277P\221\005>5X\241?\340~X\274\001)\321\277\345\313\322IE\036\216?\375\366J\376\222\240\270?\270A\004\246;\341\317?\010\250\204H\305\342\326?T\252\202\263\376\252\306\277P\n\30171\034\243?O\220\247\034\252\352\224\277\366\263&\310\227\'\270\277\021$tU\247n\270\277\327s\346\355\377\004\301?\250j\330sL\237\302?\205\365\034,\320\313\261\277\223\203\356\273\230\277\223\277\226`O\230al\300\277\377b\271\341\366~\260?\340\222\374]\027C\245\277\032\000\362\200 U\323?\000Eu\362q\363\263?nM\271\234\035\004\306?\203Or\236a\375\254\277\343\3765\371QA\313?\206\025#F5{\245\277|\014\240\213\367\364\351\277\336\306\314\032\273\331\265\277\232}\362\210Xp\240\277g\003\311\311\312\245s?3\312\013\312\007\305\306\277\3614c[\304\212\346\277N\272\371\010lw\224\277.\224Z\376D\007\326?m8\334\273\307\375\337\277\264\211\200\304\373&\371?\000\264Ln\373\374\343?Q\205\2517+o\354\277\257+\332:cT\304\277+\030\367\n0\220\335\277Q4V\205\343A\356?\246\216A\024\020\035\314?\227^t\374Q\202\324?d\267\014\363\\0\345\277Z\344$L\n\302\374\277\202\200OB\022\026\321\277\375\3221\220B\374\343\277c\243\274\013\200\274\307\277\217\211\367\360^\225\360?5{\013\r\246:\225\277\303\331\246KU<\350\277p\356\033\211\224\244\333\277c\014\244rt\220\316\277\342\231G\036\356\346\265\277\376\303\311\177\2048\322?w\271\300\366#Q\305?E#&45\023\300\277;Y\004-\340\304x\277\236:\216\270\251sg?\257:\031\314\022\334\311\277+\372F\260c\222\242\277\352Bs\240\275\235\300?\340`\001\027\317z\274\277 \304\274\272HO\317?\252Q\037\325=}\302?IL\271\017\346Q\304?o\212\225\311\357|\255\277G\336\312\213\n3\266?\322U`\177\2668\253?\215$\016\004\314I\274\277\212\245\035\377\203\037\273?>W\277\006\\n\275?\254\300\265S\322\351\276\277?q\031\257\313\000\302\277\354<\010\016?\361\327?\215\005O\202\0370\325?\315\244T\325\374\346\306\2770}\240\372\010s\231?\206@`\031\375Y\272\277\254\253\016sw\346\201?\375\264~\373\353W\275\277\232~\310T\333\203\336?\375.\213\001\272\337l\277\343\034\322>\356\260\336?c\301\226\300\004\267\314?\241\372\350\250\025\212\312?\221(L\001\277A\271\2778\252E/\340\344\336\277*\367?\202\304\275\301?\365q}\274\220\335\324\277{^\020\310\313\006\274?\273\212F\370\014~\344\277Be\365(\272\214\305\277\257\371\300\200\355\037\207?\221\021\255j\2164\243\277+\345\037iL_\361\277\030\365\027\205\227*\350?iB\231s6\005\360\277\034.\333/(\235\243\277\276T\356E\370^\364\277\2344\227B\014l\307?v\020FI y\344\277Q\203\272\2602\005\255?c\207\272\347{<\332\277\000\n\332IH\345\325\277\374\217\207=\302\276\330\277x}(\270\254\352\263\277\270\212@\352R@\345?\231IhpS\r\341\277Z]\276\206\023\343\331?\307\237W\007?t\326\277\037\300\363@\327<\304\2770\266\311\340\334\030\320?&\243\326m(\024\312?\340\251\305\023\202\270\306\277\204b[\301\237\300\326\277\351\216p\331\341\212\343?)\363D\177\273W\343\277`\342\225\034\220\225\304?W{\027\202\322\322\344\277K\337\344\000\320\n\220\277-\300\257\324\375\331\310?\312\021`O\274?\226?\252\227\314(\365\231\314\277&\375\3565\352K\370?\277g\255=\270\367\322\277\2610\254d\335a\267?\314\251{\351\232&\341\277\275\252$\214\220\315\312\277\346G\254\351\"\253\243\277\215.p?LZ\264\277\\\000\205\300\025w\261?\342{\001a\206\233\303\277c\363\377\3128\010\236?\346\255\373\002\025\357\313?\341\357\021\005\351+\320?p\354e?WY\261\277~(\314\226\345\221\220?)\273)\365\023\211\266\2774\177t\272\324e\300?\231{\273\222V\362\264?\311\347\223\372+\244\322?_(E3\003\241\302?b\006\274\226?\257\317?<m\001\201@]\314?\265\006\236-\232\363\310?\027\363\025\362\216,\270\277{\ra\212\333\356\315\277\r\'\263\330\3073\320?8\326\233%\360-\300\277\333\232\355\232:\034\303\277\034S\332\212\247N\350?\221\205\345D\227\375\337\277j\347\003\330-\263\316?\262\016\362\033\377=\255\277\037\312\017\364\224\353\302\277\211\032n/x\200\323?A\216\365\320\361\236\325\277\262\350o8\014\351\312?Q\237j\222\177\323\320?\2338\0100\251\327\320?Z\307\223\220\263\367\330?\0313\002/\263!\323?\300\274C4&\331\213?s\336\240\272\2607\276?k@\321\21425\301?\313\033\337W\246\326\333\277\000W\t\344E\341\356\277\260\2608\357\264J\323\277*\336\230;L@\277\277\371\346L\224\366\t\327\277\207\306\211\177>]\337?\371\357\253\333\210z\336?S\177+(\024\027\317\277\371\312>,\300\235\304?\023d\234\333\345\337\350?\251\256\327A\374\360\345\277\344\236+\333[\273\342?\365\371\316\203\024:\321\277\005\210\351\305F\235\366?\214\270Z/u@\337\277\251\362\203\000:V\363?8\320d\032\224\032\317\277\277\036\003\361x\327\320?y\335=\250\322\317\347\277\204e\364\013\"\330\356?y\260^\n&\220\315?`o!\201\214@\277?\231\276Y\252~F\334?\020\036\342\240d\337\347\277\213\317I\000\007O\342?\024\216\377\302\207\340\351\277-\364\022-Ve\333\277\363\003r\335*I\306?r#\330\212\212\230\270\277\227\360]\037\017S\344?\"\326PC\251\212\346?&\376\337<\036\324\356\277$y\365L>\025\267?P\020\031|\336\343\347\277\330k\237\315w\257\335?\367\240\031\261\002\256\311\277\031yu\306\234\201\261\277R5\233\023X\327\307?\237\331\317b\244\312\347\277L\213*L\226\347\321\2772\216\246\033s\262\306\277\"M\266\232j:\336\277\333\372\213\222\201\022\345?R\311\260\rG&\320?\342\360w\032?\345\325\277~\002}\311t!\267\277\354^MZ\215\302\303\277O\rU\272\330\177\206?\303\233\037U\223\r\317?\312W\220\007\305\315\307?\342\0313\223\'\306\263\277\342\214\'Q\2054\237\277\256v\365I\233\324\306\277R\314>\373\244\205w\277C\374\354\240\213\351\304\277z]\242\274 D\310?\333\205\255\1774\247\263\277\323if\205\237\376\326?\351\024\262\007^\010\311?\210\001m\363\271\261\270?\312\304;\177A\017\271\277\203\235=\022\257x\241?\314\227g\316\021j\273?\242\"\326[\214,\307\277\342\346\203\374\206\034\206?\033\027\371\250+N\301\277\322A}\336J\363\265\277)\031,^x9J?\374t\264;\334\025\325?ar\223\002\0145\300?yK\245\307d\344\276\277\247\224\235\320\267d\231?P\336\231\213\363l\275\277\244\260\226\372E]\251\277\336\313\206JL\315\242?]Ec\330}R\315?\237\215\235\007(\314\263?c\211@\374)\026\335?\310T&\352~\252\307?\342\3237\233V\376\252?\252\253\376\372\240\352\303\277.T\3642\335.\322\277\335\010\224\212\335\373\264?\351\253\207$(\367\323\277\002\341s\367/\025t??\213t\347\355\220\364?H\350\211\331hP\341?SY7c\276\213\336\277PK\224y\035\366\335?\364J\322h\300\366\336?~6\002\243\305g\347\277\021\2043;2\310\344?I\213\241~\271\354\335\277\025\211M\332\342K\360?wT\210\010\214\311\340\277\275\311\343\210H>\346?\270\212s\263\334\275\327\277RPX\001\223j\342?0\361v\233B/\276?\036\231\316?\303\247\324??,\305?\224\274\333?g\250\253\2035\234\304\277\364n\251V<\342\342?\340X\250\003\022\331\341\277\031G\014V\030&\340?\022\362\352pR\203\350\277\005@\312\357\3612\363\277!\2138J\354\335\320?\333\317v[\311G\333\277x+\026\225\2531\320\277\331\016\245E\320N\374?\263\267\324\0313,\376\277O\223\243\214\037\301\334?\225\277o\247\206\213\363\277\243n%\002t\023\347?\005\017\352q\345\331\337\2774\210\317\252C\260\320?8SV\373\035N\330\277hhAB\310^\322\277\346\036\301\003g\245\355\277O\005\302 \005\224\301?p\253\037\331\325r\342?\212\034\033\021~\r\316\277\233\232\220=\255|\346?\010\230\272?\273\036\364\277\236F\010G|&\267\277|\337,\203\275Q\317\2772\374M\205\0130\215?\017V>N\213\r\213?:\252=\000\324\013\322?\335\276^\252\327r\240\277\336\243\342\235\311\033\263\277\031\021\270]\007\376\262\277\352O/C\306_\250?\347\304\316\032}.\247\2777\244\264\244nh\273?\253\245S\244Q\351\246\277\216b\253\022#\363\310?\241H_U\037\013\321?\317\341y\342>3\277?\211\'\203\367b\251\274\277\246jj\206C\262\240\277\237\250\243\226\261\241\273?\247\213X\270\200\256\262\277W$\253\322\310l\240\277k\261 \266\236\317\327?\321\230\212\003\357\t\347\277\233\334\322x\037\031\327?\260\t\362\274\326a\323\277N \274\256X\341\340\277bn\272\014^G\343?\254i\025+\3425\344\277y\214\360S*!\332?\210\301\216\365#\232\305?\220\200\237\265o\205\334?to\206\331]]\265\277c\302\333j\250\024\327?\225gNK\t\325\320\277i\364j\261\244@\264\277\031\236\345\350\215\014\204\277\260Y\256\246\320x\326\277\367\226}\336\365\344\346\277\346\346-2\245\034\330\277g\037\317Vwi\305?i\254W\363\024.\334\277\024i\223\302\343\224\333? \245\016\025a\'\324?\243x\213\242\356]\363\277\216\342\'\013?d\322?\355l\262\031\003\002\003@\221\222-\253\360\032\357\277\343\321\017\364(\231\353?f\307-}\013q\354\277v!\313\225\3571\341?&\024s\371h\307\345\277\2112\200\002\216k\347?j\215\260\235\320\371\343\277\362\246x\232E\222\343?\005]v\365\224\177\335\277,\307\2738.G\334?\204\337[R\255-\342?\366\025\020\242\031G\320?\371t\245\350\023\211\365?\250\212\033C\257\371\346\277Z$\332-]M\366?\235NJ\220\026H\276\277\327\361\372\337\223\020\265?\354^g\200\004H\322?4\275\203\t\203\244\300\277\203\037\222a\325\006\331\277\262\277\023.\030e\220\2776\267\236\267\0213\302?\252\005g\345\240X\316?_\362#\032\220u\265\2775\364\013I\002\232\355?\315\223E\024\340}\324\277P\225^\334\336\362\241?\367\317\r\244\010\201\211\277\345\364k\277p.\267\277\353\246\010J)5\273\277\376\036s!V\301\336\277\202.\002^\342\304\330?!\036\207\014E\232\271\277Y\016\240\371\240f\303?\347\"x\372\016\316\370\277\301;\366:\211\t\253?\333\273\316\322c\364\321?\335\207\324Q\255\277\301\277\320*\375\224\016+\266\277\207!\256\377\230y\324\277G~`\343\343C\242\277\210\275uI\223\220\300?\014\364nV\331+\332\277\226 \005x\323K\256\277\027\261\007\224wo\353\277jZ\237Gvv\275?\361Qb\226\352\270\265\277\245\361\252\362\253\304\241?S\016\022\275O4\222\277V\272\031\311/+\264\277\323\243\300\013d\344\325\277\2328*\324\177\351\321\277\355\236\374*\036\014\234\277W\243\206\264\332\245\240\277\005-G\215\272\363\350?-\256\3135\230\234m?\274`\264\r\205\242\313?\301\340D\213Z9\323\277EV|\330C\351\306?\364\316\'\340*\307\314\2775\375\321\2666\204\235?\302\347^\337\275e\225?\217\367\303a\207\256\271\277\227\2003\207\'\'\264\277\363w%H\312\201\363\277\220\200\325}f\374\320?\203J7\272\002\003\272\277\253\304[\302 \346\260?\326+\217\333\307x\245?\213\254\341\343\230\024\210?h\330\263\266h\000\326\277\247*\373\223\030\326\322\277\3539P\342\r\003\277\277>\346}\212mG\307\277\302\255\375\245\023\261\364?\332\371L\277@\216\266\277\222O7\232\035\321\341\277\353F\007[5s\261?\337m\304\374\233R\241?4\177\231\326\304\004\347?~#E\356\264\351\336?W\320\014O\036S\267\277\265\217\277\014\177\316\230\277;\355Ne~[\251\277D?{(\200\223\326?\031*\351n%\354\351\277\326>F\203\277*\265?Q\205\035u\370\373\321?E$\212\000\333\262\362\277\001\263\336\001\272D\340\277\267\324\373\227\301\377\351?\2455\3414_Z\362?y\255\272\347\233u\320?o\234\302q\372@\340?i\246\336t\034\313\261?\023\177\212\270\257\\\265\277}\306\330f*\370\313\277\334\350\235S\264\017\265?]\377\212WyQ\273\277\311G\031x$\237\324?\313!S2\0145\330\277~.\375\2353(\351?\361o\226dK\261\275\277\350EZ94+\271\277j\320\300G\346Z\253\277\\\343z\305bm\333\277t\264G\212\344g\243\277\010\004\237\203\365\362\243?\323\t;\314\002^\271\2776\223j\353\3074\302\277\347N\212N?G\307?:\261\373HsV\327?U:uG\001\014\310?\340.\211\300LO\253?\316n+\222\016\036\346?r\203\313\200^\256\265\277\t\2306z\035\'\305?\355\307\305\250/\373\322\2771i\271 \241\263\307\277\374_\226v\362\331\312\277:\025\004V\345\222\324?\354$\004#D\230\230\277F\301c:\3342\303\277.K\021O\332\364\320\277g\003z:\025\233\350\277\257\330oIc\274\307?\254\341\241D\264g\301\277\016A\035\256\t\004\265\277[\220\224E\310J\315\277\305\r\001\235\242\252\306\277\222q\356\002\027\007\342\277\364%\222[\342\370\226\277\n\033\346\353\255\037\201\277\215\331\247\001\232\374\233\277y\246y\216w\357\340?\270V\355\024\344\251\265\277\266~\204\020\237\225\323?\021\260\370%)\031\324?JT\364h\003L\303?_QR\337K\256\340\277\261\272\023\360:+\322?\373\221\t<\334\371\304\277\351\314^\310\002\217\276?xg\233p\237\332\337\277/\206\3423\332K\325?\324!\272I\350\032\251?\322v\210\324N\200\323?\237\356\334\307`\255\331?\374T\014m]h\306\277\220n\273UVD\321\277\014&+\344-D\351\277QnI_\373M\327\277\241$\033\350\212\\\303?Ey\t\361\207\177\251\277)\027\370D#\362\320\277\004\236\031\033sj\311\277\235\027e\235\007\307\255\277A9 \035\3225\307\277T\262\272\'\236\005\273\277\333\020\321W\203-\232?\356\025tV%\243\354?\262,\244}h\321\352\277\361%(s\202\256\300\277\034\367\005\254d?\325\277\247h\337W\312\204\333\277\037g\2138\316\363\243?\353\233\270\205zR\302\277D?\334\002\341h{\277\346N/52\340\323\277\375p\234\3155\376\324\277J\024\337[\371\021\275?\034\257\270P\005\237\246?p\'\376\332\253,~?\240\313}~\013^\265?.\354x\356\356I\304?E2\177p5#\267\277\023\350_\356\375r\242\2771\2146\377\253\344\322?\345\373-\002E\362\302\277\315;\355\234\207\363\317\277 \204\261;&\307\303\277J\033\241CUm\320?W\n\247\017\351\204\305?\231.\355\315\3544\305\277\243\347!\343\000\002\371?\233~\007\234\270r\330\277d\311\371\033f\035\307?\255\\\363\307#\206\266\277\354\013\210\206\n\242\315\277\2679\004\315\367=\320\277E\315R\267\2356\360\277\3771\323hx\215\340?!.`Hs\367\260\277\245\270\313 \355\302\320?\271\r\241]M\256\373\277\330\273\021\2138\277\220?\370\r5\244G\023\322?\273&\330Mx`\320\277\'[\004\363\354d\227\277\304(\023\020iM\314\277\256\251I\362et\177?\364fk\324\021\327\214?>\215\200\315,u\321\277\034\222\377\353\376E\236?\036\234\351\202*&\360\277\200\337\305.\374\364\320?E)\265\024\262\313\316\277*s\024\243%\304\300?\032\340G#\211Z\252?\206\024\323\351\231A|\277\033v\315\030\347y\327\277\317\205\376\037Qm\312\277<;\201%j9\304\277C\031J\240y\367\305\2777\243\376\314m`\352?+\360\032\305X\200\262?\365\010J\310r\316\304?I\334\264vi\223\305\277\363vW\204\210\247\220?ZC\017\250 \205\313\277>\356\263x\320\201\310?\010\237\'3JR\255\277+\013\013A\024\260\305\2773\322x\264\350\325\277?9#\316\261\220\225\360\277\217I\336I\271@\311?G\010G\365B\202\311\277\215MRAWF\270?\250\254\002\321<\312\262\277ot\345\301=\250\221?m\030\326t!\204\324\277\017\336\347\344\016w\320\277\017\305\252\206\374\231\264\277\025\177\214yX\234\244\277\201\305\353\327\224F\361?\352%\246\271\321\233\353\277\271\316*\0076\354\361\277Y\221B\314\360]\322?\203d\354\353\230\327\330\277\332:\033e\034\004\322\277C\220\247\265,g\372?M\334\354\020\245L\376\277\261\344\023i\000\312\327?Q\376\342+;\034\364\277\325?4\036M\350\350?/o\206\005\224R\334\277\010i\275\362\311B\324?\004k\035\033\266\034\340\277\2043(\016Dm\322\277\\\232\330\234\210g\352\277\002\360$\322\252i\321?6\266\372\027\037X\341?\236X<p\032\222\313\277\217\265\204\212\251\235\347?\254!\204\2346\237\361\277\316_\321\200\344J\321\277\001\214\3011\375\314\242\277\014\364\017)\326\204\320?\356\347T\260L\345\265\277$\314\026hU\034\251?\033E\323h\215\216\322\277#\236\314\036\337\370\343?\227\312\257\317\020:\272?iQ\242\\g\035\301\277*bV\207P\003\342?1G\220I\332\223\352\277\242\253M\265\200\372\266?\252ziW\325\301\307\277f\342\235\014\315\"\255\277\220\\\307\356\3027\303\277\345j\332\353\347\323\302\277\024R\354\362#\010\340?D&\346e\026?\237\277\367:\356\000oe\312?.\021\230\3330\225\315\277\300\3507,\346R\300\277\373&V\251\251\227\244?\342\245\214G\364K\330\277\034\360\222\352\307\222\310\277\215\2570\206>\305\261\277\3152\215\032T4\316?\312\233z\037.Qx\277\001\276!+\336=\321\277L6\005\247\301L\313\277\274\332\322\036d\013\351\277\230\375D\253^}\264?%U\016\236\315\270\321\277Cd\025\264\312\321\275\277\367\226\343\367\010\327\265\277f\216\241\317\225!\303\277\371!N\354\377+\321\277\337\327V\274\t3\260\277\250\252Cfh\242\260?\223:\303R\350\t\255\277\377E\204\316\214W\351?\346\203v\215\355\205\250\277O\367A\254\266=\207?.\256\275v\273R\314?\004%\002\263\272\273\325?\246\013\326c\0227\363\277\t+\006\303\tD\263?%\334}\227\336H\300\277l\330\3762\357:\263\277aU[@\231S\344\277\341\367@\262g\325\321\277\020\346\234\341\211=\305?\240\347u\003g?\323?Y\222\005\003\271]\327?\257\267\022N\3105\240\277@\264\227\014\366\254\332\277\367\217\037\352\001\234\354\2774|\375\242\232R\331\277\032\345ze\377\r\274?\027k\342\211\202\257\305\277\005\372\371\352\200)\302?\251\"\307\311\316\373\272\277;\\${z-\314?e\307\365b\302\365\325\2776T\331\312#t\276\277\\\212\375\375\371\260\240\2774dS\337\323*\333?.D\246\317\251g\327\277-\272\007\255\235\212\306\277t\232\350\243\325|\306\277\006T\342\224$\244\367\277UL\343\235\262\212\275?\200)\316\215P\024\276\277$\037\376\213\204\355\243\277\022\221lY\344\305\265?(\0175\207\240\357\244\277j\032\004\235V*\335?\372\374|\360\355\250\307\277\034\314xxR\211\245?\233\311\022\207\206o\303\277=\372\302\263\\\211\372?V\363\016\301\224O\263\277\274(\356\354\341\251\327\277\033j\001z\321\306\317\277\3255.\337\032\312\316\277!\323\373\310\207\330\302?O.\260\265(\323\247?\016\330f\3543\276\260\277\223=\024_\265\315\324\277G*A\035\235?\263\277s\241\r@\014\330\324\277\007a#b\273$\325\277\251\273\203\356\316\366\322\277\242M%\332\234\275\315\277\">\005o\374\266\243?z\371\271>\036\204\250\277\323B]\241\367r\350?\206\264\355B\224C\276?X\027\244\037\355\261\305?c\025\315\\X<\245?\362\034A\021\276?\261?\024\267\230q\267d\205\277\373\202\020\005pym?\356\240\333\377\016\363\303?s\223a\216\0358|\277c/\237\234\3350\313\277\360\217-\367}\216\300?R\361\275\342}-\271?\205Ux\004\214p\302?\370dpZ\303\264\260\2779$\274\322Z+\314?\217\264\310I1Y\315?|\307\366{\254}\267?\t\027N\252I\203\262?&[\250\247L;\321\277\255Z\361~\022\203\315\277>\337U\026\324\263\330\277\207\240\327\345\004G\260?\203\376:\271\375&z\277\337p\177t\031\253\263\277S\2476!\033\314\251\277\014\312\3450\t\242\271\277(f\003\240\203\355\253\277[Y>\206\212a\303?\262\370\2632R\252\242\277<\0227\235\366\022\267\277\224[\265\225\r\347\303?\027X\003\270\013\356\260\277\357iws\032\014\276?\327@!\220P\036\213\277\316;/\014r*\302?\254cJ\211\nN\200\277\030ZO\005\362\356\266?\232\366\031#\005\003\256?\274C\016\004\324t\260\277\375g@\211&\310\223\277\2560\250\325\215\233\325\277\033\361\270cO\351\273?]\337Z\304\274!\234\277jx}\020T\314\252?\372\027\222=Y\244\261\277\333\377\010)qE\277?\257\353\233\021\n6\340?!\031\202\216\004w\303\277\307Zj\266v9\275\277%b,:\000\307\271\277\243\204\317\325 \005\322\277\324\301|\3541\322\320?Y@T\000N\030\233? \336\204\032UV\264?\027\346\343C\225\360\312\277|;\215\356|\271\363?\236\030h\333\256\221\224\277)\203\302\225\177E\305\277\347\347\005\2039Y\311?\276z).\213@\267?\004\355q\017\231R\321\277\341F\314{B\301\355\277{]\232_Y+\227\277\336Kc?\252\333\266\277\202$z\342\235\354\274?\256j\224 \3662\302?=X\236U\243$\253?9\t\322g\324F\357?\272}J1\006\226w?1[z\374=G\352\277]\266\034+/RA?\307\0347e\034\232\260\277*\375a\233n\017\337?\277\365E\237\205.\261?\256\207H\350\224\227\336?sN%\211\233@I?\263S\214\206h \330?\257|}Y\361\216\231\277\271\250\004f\034\333\316\277J\346`\377\2005\244?\364}\tI\342\260\320\277\307\270a\356\r\225\275?\213\333E\262\327\273\331\277\226\'\345[I\337\301?\025\230\355\035t\r\341\277[,\314EU\274\266?|\232\206\261\343\317\265\277\"\017\357\253Zd\300?\244j.\247\276\005\300?\233l\263\030\014\224\277\277\371(\003\272 ,\235?\216\271\340\345\343h\211?\007fj\242Q\373\265?\\\250\217n\331Y\263\277a\270\320\354\234\325\303?\356\2415\224\272\340\257?\314\260\366z\350\302\300?\323\207},\206\375\302?\223\265\300`]\305\213\277\312\265\223CY\345\254\277\261\342\310nI\013\311\277N\323P\365(S\265?\263;kA\307\314\302\277\264/\005\350\\[\274\277/1[\313\252\221\263\277\320\204A\236@7\274\277Z\033J\272\'\262\254?Q5P\2330\206\270?\371/\377\212$\234\267\277x\325/0\034\345\311\277P\023=\211i\031\270\277B\373\225K\234x\306?n\253e\362\332\252\306?(WT\362\265o\226?I\367\337\2415>\272?\201\304\214\247\rp\271\277\014|\277\023.\323\275?\252q\262\036\204h\276\277\034+DR\235,\336\277!\265d\312\273<\236\277\373\211\230\006\3529\306?\260\033C\214\002\220\311?o9\262b\255\253\275\277\366\366\032_\023)\237\277;\344\315Q\261a\243\277`U3G;!\274?\215\"\321\256\356\257\306\277\026\261\266\362\230\027\223? *ZH\372\356\277?\273\210@\361\035\307\265?\"\334\362\260\177c\216?\300\217\352\321/r\301\277y\025&o\336t\274\277D9\311n\017\014\262\277\317U\232\'\325B\273\277=\347\002\322\307\274[\277\204\2771\024\360f\246\277\377rU\214l\353\225?\3150\307Z\255x\304?ap\013\315\014o\243?\304+\025\303o\210\337\277\325O\221DM\013\304\277\314A&\241\001\332\301?Z\215\345A9\365\213\277\036\323\333\226\214\355\325?x\355?\241\276Z\241?\201\243\310Y\240\033\253\277\013R\001\267I\274\342\277\177\3447j!\266\317\277w\374\027\346\274A\275\277J\310\027wt_\224?*\322\321\341\201\'\264\277\364V\206\001\225w\323\277\340\262\236\361{\232\242\277\013\022\017\376\365g\326\277\357\257l\tIss?\344O\206\336\214\233\332\277q\224\244R\r\371\305\277\217\240\003\252\350<\212?(\004\367\226\374\223\311\277\253IP\004\374\226\343?<Pu\347WQ^?\0004a\002l#\310?\341\322\342.\225\351\301?\036\301\343[\340\372\326?-\016\226\204\031\370\254\277\231\"\3205\211\301\264?\243\255\321\256\314\351\304?!\002\306\372\020u\246\277\374\331\331>;t\254\277\344\207#n\213p\260?\026\003\323Rb\337\263?\311\274]\363\275\000\320?\372L\233A\271?\275\277\377\315aO\035\327\301?`\343\364J\333\241\302?\20023G\303}\300?\337\217\354\272\350\003\207\277\326X\362\034\024?\317\277k3A1T\354\243\277h\311\240\355\331\303\325\277L\230-\215v\236\273?\340\023\277f\025&\263\277\302\010\356\255h\313\240?N\016\037\276\355\305\310\277\205z\243\205u\"\251?l\002\270,\271 \306?\223\004\306a-\254\306?\273P\3672\247\t\264?\323\263;\314\276<\305\277\303\247)\016\215\020\244?\036\255\220\330dZ\261?\202@!\347\322-\314?\347\351\241\341\334\350f?H[\332\030\236\274\324?\177\025\311\307\366_\301?\252]\352\274\2612\274?\316\021\347Ay\215\252?k\357\3604\017\255\005\277\265\214\354\334\\q\230?\272\034p\r\211\331\333\277 \310\206V\305L\266?\224[m\241\337j\177?d\010@\021\023\031\227\277G<\300\274\246.\321\277\\\273\223[P\356\263\277\372\217D/\2527\312\277\032\3511p5\266\300\277\3216q\031\233\006\257?\262\376\365\234O\026\325??\321\203\023FO\245\277\'\375H\327\024H\305\277\177\371\202\360\343J\273\277\031\223\013\031\253\234\262?\345\343v\324\004\205\254?\232\2733\315!s\302?\231:=\324\371c\243?\263\026\266\371\036]\321?\256\343\310\252\242\345\316?\272)]\272\'\'\321?\274\"\033\013\253\016\302\277\360\335qV0!\257?UN\260\332W\313\275?m\203\357\3575\376\305\277\217\330S\026\336\365\245?\330\360\201\214V\326\304\277e\205\026\212\257\235\275?,Q2un\354\332\277\002\202\020\242\234R\302\277\320\232\372\014\356\006\303\277\337\355\365=\230!\310?I\t\010*\251\004\216\277s\241\345R\234\023\321\277h\362\201=U`\316\277V*\2173\310\373\352\277\316&\227\303\257\365\216?-\242\331D\246\256\327\277\223|\342\276\306:\301\277\305\354\306y\024\261\253\277\321\317\257\357\222\330\272\277\031\263\370B\017w\330\277\024fi\347\307\343\203\277E_\202\317?\374\304?\007\300\266\277\017\332\252?\367\312\023\327,\037\346?m7%\254\013Xr?\263D\354\234\002\004\236?\370\206`Op\266\320?\215\003\354Tt\337\260?!1\237i\007\313\305\277B\225Q\013\033S\245\277\2650P\257\277\323\260?\003\031\334\022VN\322?Z\0201e\201\244\261\277\223Vl\277\370\245\305?^v\245\304\365\341\302?OU\265\005\214d\303?\345\315\210<\005s\267?h\262X\216\306\313\320\277e\343\202\267U\303\266\277@\263\001\335\243\236\316\277\263\227\231\267\177\210\240?\270*\210\034\232%\302\277\245\177\005\246\3151\254?n\330\005\020II\300\277]\232(\3471\353\235?\260Yv\016\350\004\273?Ul\017+\025?\251\277\330\204\355\"\266\217\300?u\233(\345/P\307\277\037f\204\022\360H\255?\235\217c\221e\305\277?\010\305ZbSA\223?\373\331\250a9\316\301\277\264\310u\206U\223\315\277\225Z\037\204\200x\316\277\250 :Z\223Gm\277\'\236\312n\022\334\266\277\256\350\240\2606\211\336\277\357\300\213?\022\372\273\277\352\312q\274u\362\275?H};3?-\330?\205\273M\244\305\352\243\277\273f\274\341\355\366\321?\315\356\003Us!\305?\177y\\-\236H\251?\277\2408\2504,\273\277w\373\230\236\364\317\303?\204\236\366Iw\032\315?\2651\377\252\231\003\246\277\306\243\265\207\2722\301?\340\250\244\030\001\250\274\277\334C\254\307\025\217\302?y%v\n\320\032\245?\237\377\36120V\321?#\227R\216\001g\261?@\333M\035\300\327\300?\345\023\260d\254\361\305?5\006\005\204\016n\237?\377\376\222\2013\223\300\277\302\257\020\365\304\260\352\277\350\241%Fg4\261\277\276\312\216\005\205\023\301\277]\031\206o\322\201\273\277\007D\211\326_m\340\277\001\253T\217\214Z\302?\344)\231\357\026\352\320\277\331d|\251\330\335\317\277\221\006\r\366\020\363\300?(\266\201\327,%\330?\344\204\230\014\300D\317?z\222\206\340\355V\320\277\325\361f\222 \227\326\277\020\350\302\357\210\377\271?\351\023\250\252\204\200\320?\334\277\253\377\231\230\320?\017\034u*Z\331\307\277p\305w\237\312\222\341?,\t3\277\261\305\273?\277D\310v\006\207\260\277n\221xP\316\263\300\277\351\004\3638\034`\316\277\"%\221\355\330\205\332?I\3669\245O\255\241\277\223\333\344\220\366\243\351\277\302\014\230\027\372\232\265?}&\314?a\245\325?\267\020\303\255x\214\243?\347\265\223W\366\274\301\277\234\275J\224\024}\215\277l\273a\256\256\374\247\277\354\326oeT\021w?\334\213\2754{\017\266\277Y3\004\274\202g\273\277D\324\275\016\2477\232?\223\3643\t\270\245\321\277\013\232.\017\336q\223\277\302\030d\327\2161\301\277\372tG\0038\021\330\277\312\033\367vu\214\301\277\345\326 \232\227\303\273?\323\222\266\236P\210\315?&\313\2059\360\226w?\376\330\273\233\222O\301?\n\256M\2042\322\261? u\r\247\223\301\216\277hw\010y\312\031\336?7,\004|\345\224\274\277\320\323\271\324\345\257\306\277G\334ty\341\362\251\277\2569&\346w\317\300\277\272\374\227\214\310\302\312\277\316\201AnC\241\234\277\213%\331i\006\310\206?\371\032\220\005\370\033\255\277\035[\214uPK\322\277\255\232\2120\n\'\246\277b\323\301\300\376-\320\277\252\262\305\3761\036\310?\216\302\204\021\247_\301?\261-.\000\354\333\315?\361{\336%6L\323?_W\362S\002\033\253\277A\350%q\235\220\303?\303)\246~H`\271?\325N\334\310\336\374\243\277G\276\243e\372\362\305?\255\227\202\nP\237\266?{\035F\365\342\360\310?~\035*\370 3\366?\016X\310\333\301/\276?\374?\314\210\317\350\305?e\337\252\346\037B\304?F/8\023q$\220?\2446J/O\376\220?\002\033\303\267\247\351\373?\365\330\233\257dl\261?\226\246y~.\226\347?\347\347w\253}\006\327?\366K\034\215\336\330\320?\307\'\272B\361\"\337\277{h\225N\'\247\361\277\356h+$2@\356?\3428\2200\216\213\321\277\'\032;\260\007z\266\277\204\254\354/\303\304\225?MkZ\362\233V\301?\232\254\331b%P\300?\335i\340A\302{\333?\017\261r\254G,\356\2770\351\n}\265\366\266\277\302\325\270v8\025\210?\363\322\332|\321\356\356?\t\354K\203\243\375\302\277/r\221+\342\030\334?s\307\260\311(\215\263\277\222,c\004i\211\345?{SO\241\376>\327?\325\001\302\031\216\232\327\277\216{`V\201\347\314\277{\2476\377)\324\314\277\212_\233\303\225\303\244\277\013Q\222\024>\270\361\277\353\003Drg\000w?\254*,_\017j\302\277\'A$\255<\232\217\277\346\317[m\252kd\277\211\007 k\202|\257?\215\344\026\253\360\324\300\277J\241\217\036\326\306\310\277\357\216j\237\017\217\260?\226`\335\006:\262\310\277\316\376\266\000k\340\244\277\254-\177d\301\373\274\277~\355VU\312\023\304\277\242\036\016>\262\305\325\277\370#1Z\007E\250\277\256\304K\n\240\n\267\277N\311\276 `l\307?\262\344H \353\372O?#F\373\005\265k\311?\251\227\354\234\026z\332?iV\331\354\3208\307\277\325\002\034}\305\263\317?*\310(\275(p\272?!A\221\030\2656\315?\277\023\202@~4\325?\177\265\003\214\316\032\321\277^\302\367\347\361\323\324?\017O\021\277\202\000{\277\320\270\372\004\367\313\324\2774/\002\211\225\375\312?\365B1\033\314\342\314\277\020\256\272\316t{\273?e\001\271V\343\271\330\277\222\342\263M\313\037\333\277\250\215\2060#h\310\277\270\265\273F\\<\311?6\377A\033\353\243\263\277\024\235\037Q\221~\241\277\3103\205\202\355\344\327?\311}\033\024\236<\340?ch\302\020\200\201g?\240\231Pg\376J\300?\330\006@\374\262\210\320?\231\332\261xc\013\253?\243\340\254N\266\r\261?\327\021R\340\247\264\344?;\243u?\032@\227\277l\237\035$\302W\370\277k]y\035\202\001\316?%:\265\316\250\253\274\2771\2509\304\0011\334?\213/:\244[<\236?\010S\213\316\213\373\213\2770\210U\242-\240\305\277\013\r\341\267\031\337\332?\027\333A\321&<\243?C\206\002\3226\346\276?\027\357\220\311\350\304\204\277\323\242\316\177\345\337\243\277\233\315\242_\355\357\242?\022|\306\317\217\342\341\277\023\261\235z?\371\271?tT&V\t\251\262?B\201\353\310\017\332\277?.1&\273\353f\305?\316\030\317I%\226\271\277\313\265|\024~\315\307?\266\210\345#\372\271\277\277V\256%.\023~\310\277\021v\014\354\317\264\305?\201DkV\350X\217?<\366\246\370\006-\201\277\345eJ\014\273\231\250\277\226\013\033|\234\301\315?L,\000\206^@\257\277!\342.\031\314?\313?\307\373.\026\372\322\260?\316S\324\200\357\366\301\277\215\233\211\273\203+\306\277%\355k8\217\222\261\277W7`eZ\204\333?\344qD\305\310\221\325\277c\270\362KX#\301\277\244\221\027$\311L\243?\342\027\322s9\362\315?\035e\332\007I\246\261?\320\275\331Z\346\242\310\277\202\\N\366|\001\276\277\257`\357\204s\\\246?\370\375\200\305\250\312\264\277\305\373h\347\252@\265\277M5&\005\347\337\300\277/\252\204Mg\001\272\277\221H\223)\3574\330\2778\320\274\026@\215\221\277\026P\211\265!\260\306\277\306S\037\303\311\331\330\277\233\374#\341\357\360\262\277Vy\026[H\222\320?\352\007\261\020{\237\327?\033p\035}i\330\276\277\206\243\027\362\220U\323?\377\356\204\365\362\332\254?\\\357\0371\210\302\234\277\374\277\27667\316\346?-1\002-\372nK?\357\013\215\202_\245\301\277\275\356\3130\327C\302\277\002\214\0160\016\255\267\277\014\211!:\347\316\213\277B\377\343\020!\307\260? \263h \031L\246?,\025u\233\234\313a?\021\200\200\255\326\274\325\277[81.\210O\263\277\300\353\203\3219\310\315\277\265\"\363[L/\232\277\341\336\332\262\261W\253?F\301\210\250\246W\304?\240\277\260%\362\216\323?\304G\2461o\t\301\277\220\tsg\375g\250?\261\025$\201\016\220\230?\353\262/>\356V\326?\025h\373\003I6\346\277\207<\242\005\363\007\331?\374\374\'\262\202\330\323\2779\337:\343\000\230\331\277\300\366\361\325n\026\342?\371%>\343\345n\337\277e6\261}\274:\326?\004\357\345E\337r\312?\260\266\005\001>\247\341?$g}(\315\234\275\277\333i\362)\323\317\331?\341\361\311\234\304\242\327\277>\030\264SOJ\301\277\372\211\371\323\225N\315\2772RuN\304\037\326\277\247\203\321\323\316!\351\277\254\037\224a\276:\324\277k\202\362\353C\253\315?\327I\1771\325\031\332\277uG\321U\016|\276\277\212 {\353/~\274?\004\330\341\200O\211\310?\334\203g\013Mv\326?\237c5\\\247f\361\277*\257Q\233\016R\310?\277)\205\014\347G\303\277\210\n\205\024\327\213\274\277\007\320D\376\226\265\344\277\357N\311\274\017l\325\277\270\236v\323\202\355\306?\254Lu\334\370`\320?\325\261\002\224\274\375\325?\331\253\004/@L\250\277\3142\344\304\304\224\341\277+\335\013\345bh\360\277\010\257h2\177\231\327\277(\351x`\323\213\266?M\037\361\220\330\266\303\277y?\225\322\234\235\311?\256\231\250~\364\303\246?\300\315Q\257:\335\271?N\331$7-\200\262?Lo\003v\366\352\203?\2414\322%\261\210\313\277\357\336\2075;\034\302?:\034-A\026\r\226\277\022\206\2664e\264\270?\311\240(\337W\013\300\277\361\345Oh\"K\275\277\007>Mg\350\214\317\2774\2413\021\354Bi\277\347E-\210\2351\276\277\200\245\010\360\222\366\333\277o\023VZ\\\335\322\277V\367W\371<\362\262?&?\344\027\242\372\333?a\256\370\272\234t\202?;c\363\272O\001\326?<\367\231U\236\024\271?s\227\030\252\240N\320?\020\0004Q\323\377\336?+\3144\021\306\216\320\277$e\340 \305v\326??\260_\310\2749\277?\255\205K\251\250o\347\277@\311,\372\266\274\322?\362\376\005\013\010\331\336\277l`\345\223[\013i\277&\351|\031C\022\334\277\022\363\254\230\321\030\330\277\316?\223N\320\323\300\277\372<p\256\334\023\333?\262\263G\310@\233\275?\214%j\322r\003\200\277\304/\325<t\256\331?\313z#\275\\\213\344?bP\375\312\320:\313?\224!\261\177a\322\212?\317<\374\021W>\335?\311\r\365\312\313l\266?F\302\366\377>x\313?\352\367.\227I\346\306?\251q>\003R\360\262\277q\215$\351\035/\340\2773\0252\035>\310\300?\330U\t\252\223~\272\277\366Q\037\210\245\222\304?Ce\237G\375v\272?\264\215\355\373\215\235\323\277\354\253\261\t\346\220\316\277\005\332n\216^j\302?\\\354\330\353E[\312\277\274\364ON\364\233\320?]\252\253\343\334\210\244?\223\332\013\335\310 \340\277x\350\371\377O]\300\277i_#z\2159\321\277\005\202+\025P\203\266?[\020R^5\245\205\277\354\2413\325\327,\303\277\243\242;HP~\304\277i\322\206\235x\035\333\277d\017)\263y\200\322\277\226\357\310A\373~\346?\020\355g\241Y/U\277`M}\003\322\276\311\277=<\264A\266[\326\277\016yM\005\317~\273\277\002VO\322Q\020\340\277\032\031\335a\206/\306\277\353\261\307\224\317\307\317\277\264\025\245\376>\311\313\277\236\260\307)T#\312\277\216\217\204\001Gs\312\277\336\251\256\254\216\330\376?Y\001\033\333h\321\274?\205\303\205\301J\230\337?v[\026\002\021\300\260?%kp&\332\033\363?\341(w4\377|\311?\245U\tf\371\212\237\277\303\014\001\354_(\301?\270py~n\223\271?\236tp\001=m\242\277\203.p\275p\r\300?p\224\236\254\236K\304\277-\022\\\027\nU\270?\001\323(\236\022\026\240\277\352\357\006\211\201`\324?[\270N\024\257\326\220?P\033v\317\030\342\302?\266\262B]1q\266?\303\024\212-\221\023\310?dg\344\266I\370\241\277\351}\320\014\273!\355\277\277\034i\265\330\252\260\277E\337\270,]\340\262?\201\324f\n\252\027\261\277\325\262\311\364\311\t\341\277\252\022\260?G\202\206?\273\326Y\367\252\271\261\277\235\322\201\263i\336\255?~\271\204$\344{\263?\341\3566N\261\301h\277\247U\273`\032~\250\277\030b\330CN*\276\277\205b\272\204\222(\260?\221hS\227\221 \301\277\004\016&\243\363\026\301?\223\277)f\274+\244?\244\010\227Y\315#\220?\013%\270\330\376\035\200?U\241\2028\310\'\263\277[\213{\346\003[\246\277\227H\014EQ_\344\277\314\023\220q\313t\260\277\207\322\353Ax\177\205?\020\032(\270Fv\275\2771\263\253\241\314I\251?\320\003=\200\311A\225?\241\364\033\213\375\r\353?:Q\227\325;\242\275\277\241\\)x\361\236\324?\305\333\201W\024\027\363\277H\211\235\230\257N\333?\242\353\025\266+F\335\277;RP@\373X\313?\270\017\031J\311\002\341\277x\307O\333\020e\353?\343\277\327\374\000\346\322?\272\302C\322\224\026\305?\227\236\250E\321\343\267?)\317\277\304\221\267\321?\0042\245\002\265:\320\277\276G_\346\216\310\004\3009kO\253\223\210\350\277\313\217d\027\033\017\336\277\271\316\344\264;)\321\277+\277\n\204t\316\367\277\331e\350y\026K\302?R\307\373{\211\312\337?a\225\025\270\205+\264?\037\316\0342\223?\262?t\312\235\004\316a\325\277:\033\221\333s\261\260\277\326\221\360\003E\206\274?iClY\224\375\245?\262\217l\003N\334\272?o\255!2\177\361\344\277m\335uu\313;\263?\253A\353\245\377x\267?\217B\256\273b5\264\277\241W\377t\274P\321?V3\225\321p\273\302?\224Y\241\034\217\344\315?\377\227w\330\366\032\317\277x\204\335K\224\000\316\2773H\030]\306\335\320\277\002w\034\240\333\252\342?\225\203\264w(\265\246?\211\2441~w\n\265\277\335\275H\212\026}\274?3\325\t\231s\305\301?:)w\305\345\320b?}\231\350\021a\333\273\277\223\000\222+s\332\240\277\372\367CB#\356\232\277\032\364\370o\323\364\213\277Q\311\253}#l\315?D\344=\261\024\346\261?e\262\271@N=\303?\205\276\r~\212\210\313?\370\340\257\014)I\300?\344@\202\271&\334\313?\300\361\0232\010\276\337\277\374A\"\225\270\035\272\277\027\235(ik(\277\2770#\210r\315r\304\277\217\007\317\377\357\377g?#\233\027\327AJ\251\277&\337\366\251\301R\247\277\344XF\372\271L\317?\376z\034\226vv\307?/\273\254\007\324\320\324\277\256d\252\376\032\366\275?\366\320K\223|\036\304\2771\354\310\251\244\230\302?B\370\r\210\334o\266?\361\3620\373\323\230\330\277\340\373uT\225/\266?\307HV\271\272\354\302?\254\253)\0047\357\236\277\007\314/m\376\200\303?\261\262@\257\024{\266?Nvr\20766\343\277\364\026\035\013\326B\247?ZUw\3503\177\311\277\036\236\001\320\376?\245\277\013\3503\351\376\032\332?\233O@b\375`\301?\274\336\374\227\364\352\302\277\020\004v\323\303-\266\277D\342L2e\234\260?}\221\\\207\037W\317?\216\334\246\"\007\241\271\277-!X)E\214\244?\201`\312\'\325}\303\277;a@\241\224\014\260?K\017W*\"\347\277\277Ie%\252\'\036\320?\224hK\263e/\245\277\021]\014C\374\016\306?.\323\3715\205\251\262\277\223\014\214\230\253\'\301?\224\374k\376\341a\267\277v\310\001k\013\354u\277\332\017\223\331\367\200\310?_\367\372\362\230K\276\277\263n3\002\203\022\341?~\206\242\222\261\200\303\277\251\367\247\230&\366\223\277\232\302\003\331\330\316\321\277\371Q\244\370\013>\320\277\211\032\360q\327\230\334?\243\022Of\352\004\263?R\260\212>?\031\312\277_\313\223\363\331T\324\277:7L\366\276\312\237\277\256\035\201\3145\364\343\277\247\n\347\177\223M\245\277Y\325\241\255\346\200\327\277\020);\271|!\310\277\003C\314*\177\321\302\277\255\034\207\021\026\336\223?\344s\360e\236\321\376?\004D\332\253X\003\252\277\005]\263\340*0\320?\326#$\255.\267\245?|\330\351\260\342\362\361?\177vK\332\205\273\262?E{\333\026\033\244\304\277\016\t\211y\372\353\276?@\"4\366\200\336\314?\316\001\244\330Z\203\262\277\30290\330\215d\211?\331m\313}qS\273\277/%a*T\312\300?L>V\301\274\374\230\277\01360(\344\035\320?\237&\221\336\204\247\303?A\207\272\352\203*\226?|\326\\\327\177-\266?&\312\216\230I%\300?6{2\"\242\342\301?\222\213\377\375(\332\350\277,\366\307\362\336a\275\277GpK\254\374\037\206?n\236\023\221X?\217\277\033\\\251\005\362e\326\277\"F$\232TJ\263?{z\205yB3\277\277\273<\375j\256\375\303?j\311\"\037\220\336\303?\240\251\017+@D\252?\020G\350\340J\266@\277\321r\256 \213?\263\277\320\001\357\037\322\232p\277\337\037P\036\335\226\207\277\302\251\357,as\305?\352\206\323\221\365\000\244\277\002\261V6T\302\314?\272\300\245\270Q\210\305?%\276\264\006\371q\251?@\317V4\271|\177\277\004\332 \376\001\267\353\277\306\201\234\361G\310\220?9\265.\305\242Y\275\277\013\372eEM\343p\277\357\233\037\275\331\316\301\277v\302\307\001z\311\327?h_G\271\"\027\332?\031\001\323*\321P\364\277\270\227\313\2764\004\316?\233\311\035\250\245\252\003@\251b&\242\365\310\354\277\337\0071\"\013\223\355?Z\037\247\177C\264\352\277\304\204\177(\305W\342?\030\003N\317^\355\342\277\361\275*\312T\362\345?|+\222\037\266x\342\277&\211>\236,\322\343?z\346y\261\3450\341\277\212\355\332\232u/\333?\002\004\230\305*\005\323?\234(\220~\037\336\320?\333\21037\314\335\364?x\343\367U3\370\350\277z\270\314f\342p\365?\367\367c\257\303b\204?\245e\265\n\203\025\304?\343#\321nv\372\321\277\310\373\324,\377\354\237\277\264\034\030m\321X\273\277t\375\267\t\241m\321?\242\355\370\2454\215\321\277\354A\311g\306\373\262\277\336\034\355,p\033\312\277\002%\341\256\323B\366\277\362\t\006(\001\250\307?\004*\272\353\2215\270\277\276R\227z\304\323\262\277\3603g\r\261\'\245?LG\215E\346d\301\277L|gy\010>\325?&\335\001\210\020\277\266\277:\217\226\274\034\\\303?\313\252\231j\217r\300\277\207zC\243\035\312\372?\257\340\303.\341:\264?\253\245\302\243Z=\260\277\007@\363\243Fh\313?29\226D\350\237\270?\2364T\025\363\036\305\277\244\332\016\274\001\252\276?f\325\'\007\314\323\322\277n|\005(_\303\272?n\271~\343\255*\232?mn\364a!\220\335?\244Z\r\216\271\251\303?LL\n\223\326\\\311?\205\203\016\223\222 \263?\324\207N\301y}\303?\340\007\\x\265\002\226?\366\377\332d\210T\351\277\n\241\377f\370\233\225?C\376\207\354\200\242p\277D\343\3546\354\273\251\277E=K\353\325\237\343\277G\035=I\326p\305?\362\001e^\366S\312?\004r\212\244X\321\322?\230\002\236\353\215\022\231\277H\353\374\261\247\002\330\2772;\333\255\224\212\274?\373\310c\262%\316\307\277\260\014\253:\276\207\302?\303y&+\256W\270?m\036\347\346\020\321\313\277\312\323&~a\266\306\277\027*\361Ho\226\310?NE\245\224>\243\300\277\030\013V]\372+\307?\344\257\314)\3466\306?\350\226U\250\246u\332\277\020\202\364t,\035\225?\'N\351LeH\307\277\211\020\363g^\303\222\277\274\r\311\0316\202\271\277\016@-\200O\245\271?\305&\340V\327\367\262\277}\\\020\226i\261\271?\264\302T2\315^\307?H}\340\033\247N\207\277\262Y\362\312\307\227\267\277\330t\244l\227Q\304\277Dp\240\223No\212?i\213]\276@1\271?\253\304\224\0353\302\244?_\034\231\254\000\033\310?1\310\370\3234~\274?\005\241\301\275y\341\264?\021\301\224\354\357}\235\277\375\r\253-\231\202\303?T$\253\224Sp\326\277\321\350\037c\252\244\235?\354O0\343\243\272\266?\272\264\271\"\t\317\300\277\377\310\322\332k\206\322?"
      }
    }
  }
}
node {
  name: "layer_0_type_1/matrix/read"
  op: "Identity"
  input: "layer_0_type_1/matrix"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_0_type_1/matrix"
      }
    }
  }
}
node {
  name: "layer_0_type_1/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\327\035\034\313\364\014\277?m\277\356!\312\211\262\277\352K\010\302`R\341\277n\025\342{\311U\330\277D\335\211\303\254\013\366?Z\2307[\331\360\304\277\354g\260\302\254\360\322?\231\316\320\262%@\365\277l4\212\013\177k\333?}\346\331\363.\302\330\277\270pN6\367`\327\277\305\317x\037U\367\347\277\235\364&\373\272\r\325\277\212\034\347\210|\361\362?\247OB\210\222{\343?\345\361\230\034\207\205\325\277\234/\321\257\243s\351\277\016\3577\270\037_\000@%\254\322g\201\251\253\277\373\301\336tf\023\323?"
      }
    }
  }
}
node {
  name: "layer_0_type_1/bias/read"
  op: "Identity"
  input: "layer_0_type_1/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_0_type_1/bias"
      }
    }
  }
}
node {
  name: "layer_0_type_1/MatMul"
  op: "MatMul"
  input: "Reshape_16"
  input: "layer_0_type_1/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "layer_0_type_1/add"
  op: "AddV2"
  input: "layer_0_type_1/MatMul"
  input: "layer_0_type_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_0_type_1/Tanh"
  op: "Tanh"
  input: "layer_0_type_1/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_0_type_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "layer_0_type_1/Reshape"
  op: "Reshape"
  input: "layer_0_type_1/Tanh"
  input: "layer_0_type_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "layer_1_type_1/matrix"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 20
          }
        }
        tensor_content: "+\265\210\263\177\326\273?\361\023\014\224U\364\345?\365\270\3255H\342\324\277\230{\232\256l\335\251?\221\230\355\247.\313\260?\242\306b\231\365\024\305\277S!A\250\265:\311?E#\305i\367\031\334?\032\004>\325\252S\314?*\030\265\000@\351\313\277(,\247\366]\022\224\277\351X\226\270\343n\327\277\'\224\305\"\356\355\302?K\257\272\202\2167\317?\200\266I\327\274\017\233?\270\361\310\324\344>\340?Y+\263\363\2152\306?z=\215\3250\271\340?\202Q\256\340i\254\266\277&\t\300S\335\327\301?\2209\331XL\354\316?\004:\301\322\215\323\346?+\343\276\265\241\240\320\277\013\307\333\227|\354\256?\262\344\354*\003;\307\277G>\374\224\\\256\261\277C\032P\253d\006\310?$;\207\360}\260\307\277\nz\030\342\024bU?\373\323r;g\313\330\277\351\314\324\337\026\222\300?\323@\371SC\323\272?T\213$4\202\034\210?J\014\253y-\331\322\277\353\203x\350\0319\242?%*\241,.9\272\2779\tm\224\006\234\277?\247\203\337\374\201\252\324\277\005\251\236\365\301B\302\277\233\321\032\322`\327\320?\224\335\037\364\013t\263?\224/wk\234O\315?H\302C<\316c\350\277\014\313Ia\245\370\244?o\013\247\223@\255\332?h\351\245Q\303\273\322\277\374v;\366\024\351\304\277j\234g\300]\237:\277\340R=(|B\275?\304\333\241\232\373\032\305?\354\013v\376\360\315\315?;\246\275{\253h\367\277\273#\'\260oS\337?\231\033\372{\337~\275?\031\2357\207\014x\313\277\312B\025\0309\240\246\277\271b\200\005\260\030\301\277\"\033\376\251\333\214\315?\260\212\270\377a/\326\277\237G3\255\\\363\274?\302\030$S\021\t\235\277\334\367\256\345\267\210\247?\330\371c\326\314\241\321\277G\277\227\373\r\375\315\277X\275\247\342\025\336\302\277x.R.\031\201\304\277\023\213\205\224P\236\241?Q^*a\314\005\332?\023\207rp\257\277\303?\360\013\367O\303b\303?\310j\266\306\177\037\271?l\211E\376\025\027\301\277\'p\263\340\0325\332?\311h\016f\237k\274\277\242#\323\213<g\323?\207\021\021*u\010\274?\353>M\217\3223\317\277^\277\002n\022\227\247\277\333\326G?\220\200\245\277\231\265\010\024h\355\317?&5\220L[\245\260\277\223\026k\010;\321\265?k\024xBJm\306?\\\001\277O\007\031\301\277\026\266\265\251!\020\330\277\362o\027\360\200k\337?eE\263:\206\306\233?\312\200\351S{j\305?\374\311\022\003\324\351\321?D\337c\023w\225\321?ptW\201>r\332\277\024r_*\344d\230?\201\327\2763;\206\314\277I\\^\366\036\034\305\277\244\213w-{\331\317\277,\367\311\3061\340\254?\023\327T\316\332$\302?\373\240S*%\326\250\277\374:\250\2536\204\333?UR\317\034\017K\322\277\023zT|\t\214\306\277/\221\345k\274\204\356\277\332\014\207l1\305\325?\347lE\275\240\235\270\277f\215\210$\226#\322?D\010\305\335\030\224\250?\243\315/Q\016\037\256\277\024\340\247h1\035\341\277\030\323/\005N\365\314\277/\204\233\"\300y\340?z2F\240\034_\241\277#\251-\200\034\236\300\277S\3406\333\036\212\263\277DY;\214I\326\327?\312\375x,v\270\312\277U\026\210\230\312\004\344\277\033\277q\370\224\352\344\277\371 \234\366\252W\321?\205\010\371\243\276_\254\277\004Qf\233x\220\333\277\324\330\216\333(\023\276?\217\310\362Q\000\305\321?\010\323\266POn\177?\202\2775\361\342{\276?\203Z\261\2123\035\262\277\316\366^A\361\245z?\007_\003\243\337\240\227?q\274\275\335a\025\340?\236\n\350\206*\350\264?WP\254y7)\307\277`\372I\2542l\230\277\225\'!\214\2525\255?\324\025\360\256nb\302?\364Ob\300\024\222\323\277O\n\201\016I\320\310\277?;.7\226\342\241\277\213\2215\323\225\322\304\277\261\315%\3778\364\330\277C\002@u=\013\303\277|\344D`\235\254\306?\016\016t\3663\215\327?\021\370S\257\315\347\307?\235}k\220G\017\346\277\275\350\312^u\347\314?f\350\347\254v\275\305?!0g\311G\357\322\277\340\3219\253\027)\315?\263m\025\334\331\227\274\2771_w\005\025G\305?Ka\232\354%\006\306\277\207F\327\000\302\305\323?U\316Z&\256\004\305\277i5b~,\253\330?\376aU\304\251\352\323?(7)\313u\351\226?/\374\307\301\037\327\262\277\354)y\364y\021\275\277M\211\021C\226\317\302?&w\334P\323\024\257\277\245^W@q4\306?\323\247w\214\005\034\314? o\003\311\347\021\346?\234R\r|\314\001\273?b]\317\027;\215\254\2772\274D`\261\366\206\277\363\354\350x\346\001\320\277N%\262\256\315`\303\277Q\343g\336\256\007\272?\333\272\243;\031\237\346?A\273\360\200\211\031\321?KT\254_<\374\252\277\235\3023\330\251q\304?\247?\\\211\234-\321?\026\375\010\'x+\304\277ze\373j\277\014{?\350#\372\236a#\327?s\000\215{\374\367\326?\306\247:\337\343\225\312\277\261\215\361*\344\024\245?_\364\200;\265\262\305\2777m\034\345I\364\226\277I\027Q\375\035\231\242\277\260\2662<\274\241\310?V\245R|3\256\301?)x!G#D\337?\372n\331\002{k\256\277\360\356e{62\331\277*-S\017\256\325\320\277\255\345V\010@a\316\277\347\006\n\254\347\016\331?.\220e\'\030\242\300?\251/\302Wc\340\341\277 >\373\334R\353\333?\3146\033\225\356\032\333?G\345\321.\313\022\323\277h!Y\036\314c\274\277\001 \206\177\237J\301\277\253\207\346\2654w\312?\206\233\341\021\314\212\333\277\2728\304\2544\215\271?\345\370\034\006\250(\320?tH\341u\301\303\323?\013\262F\240\211I\324\277\355\330xo\032W~\277\364\235x\023\003Q\340\277\247\003^j\301Z\310\277\037\300\327\236h\310\321?D\206\362\340\336E\342?\303$\270\026\0068\325?\272]\333\222&\347\331\277?\250\307\372\240\254\346\277\376\363&W\275-\241\277\256^\247\316M\013\312?.l\337\240\305\361\303\277\324\221\351$p\003\315?\244IY\256\002\306\261?\312O\233\032^(\313?\210\204:\237\315g\277?\310\241\035\2143\020\205?\246N#\272\216\026\247\277cn\267\3628\272\334?\332\343\373\367\347\256\266?D5\177\r\021\274\336\277\026\353R\236\207\007\223\277\004\221 \304\372\321\322?;;\016|P\271\217?\373\rVLZ\321d\277\332\267-\023\236.\316?\341\311\304\302j\317\273?%\360\301\020\257\361\250\277a\227s\017\277\374\304?u\0067\347O|\270\277\325\237\240\267\234\213\335?\000\264U8\016s\315?\301kQ\000\005 \231?\374\321W\235\347\314\241\277\207\250\254\340Ns\320\277\014\017\251t.\217\307?g\331b\260\253#\336\277h\325\201\322wC\234?m\007K\226\303\363\330?\203p.m\306\003\200\277\362\333t\201Q\223\256\277%0\216\375>\316\320\277%\242x+\227\243\245\277\211Qe]\375\360\274?8\243\214v\300\r\314?_7\214\2607:\327?\321\225L\250\343\362\253\277i\031?\356\307\026\325\277\354)^\027\252\341\321\277\232~\251\310\322\246\315\277EH\005\225\035\241\346?\027\277a\010\237\270\321\277\255\030\262\264\3642\217?p\275K\330\216\262\324?\006\361\032\252\335\003\257?_\036X\337\n6\300?\2365\206\317$\302\311\277E\320E\000+\340\263?\220n\323:\001\262\272\277\353\r\322\223\326\333\322?\305g\035B\361\305\301?\307\305\315>~7\304\277\370)\226\'Q\215\327\277\r\354\311x\371\332\267\277,\271]J\211\365\261\277\253iI\303\210\220\313?lC\273\265\025\251\242?Y\016Yv,\274\245?\322%\025B6\224\315?\230\355\031\242\317+\304?\344\327\373;qU\262?\301b\374\334\273\213\322\277`\231\310\333\240]\315\277\211n\2574[\\\304\277X\310\333X\235\261\220\277\275\353\302\322\203Y\232\277\305V\257\351-$\270?$\331\204,e1\267?\031\310\364\230\247\340\211?\360\341\334g\376V\331?]m,[\016\023\254?3\3108\332\201\207\272?Ij{V*A\310\277\232\214\215\371S<\302\277p\373\033-\317m\271\277\216\277\377\215\234;\325?\232\234\362\306\032\334\221\277\317>\314\370\272\241\302\277\272\034Q2]\345I\277\232\221n\327\320\311\266?_g.g[l\314?\350\232O\265\263\305\234\277/\017\320Qp\235\320\277\317\206\347$\362\032\322?rwk3\221\014\321?\270\235\202S\026\360\267?!\216\325\256?|\303?\te\374\347\323\346\232?\216L\314v\232|\202\277\242\231\017\2533\225\273?\235\332\306\212\303\r\223?\357\337\261\0234M\304\277J\314\256\\4P\261\277\014[\354\334J\027\311\277\241\373\035{\014\215\326?\366\000\375*\362\363\207\277\351@`%(\370\323?3\335\220d\031\032\356\277\210\360\267\377\003\002\346?\200<\014\251#\355\345?\331\007N\321\311U\303\277\331V\275\314C7\305\277\306\3724?f^\335?\'\246XAS\004\315?\327\364\375\026\241\370\322?\353\006\004\006\274\026\331\277\027\317\274\020R\214\272\277pp\3549\014\235\361?{\336\006\0301\031\337\277$s\036\301\264\016\324\277\025\177\365UJ\305\331\277Z\267\223\202\'\262\301\277\\jUC\300\332\337?\215\021f5\217D\262?$\023\rNV/\312\277d\340\340-q\261\362\277Q\256$\357\306\227\221\277>\337\030\022\003\266\336\277\235\230u\035\325d\277?cNSD9\301\320?\244Jb\353\"V\317\277X\007\344\3365\364\312?\274\206\353\250$\312\266\277\177S\231\263\365l\276?\031\036\300\267A\303\343?)pq\220\305\250\245?\024a\264P\263^\331\277\211y\375\260E\230\342?\032\322\357\210\237Z\316\277\244\020*\340\301S\272\277\016g\254q\261k\320?\376\'j\342\244\377\262\277\350\337D\366\335\375\315\277\0179n\225\230\230\300?xe\335\261\263\340\262\277s\352>\315\035\366\307?fI\227\'\256K\336\277i\232\177_\207\341\321?V\260\017\245\2670\320\277\001@?Q\334\204\265\277X\322\233\002\033\325\322\277\n\246\252\r\032\037\272\277\335\210\244!mn\325\277\311\332:\270Bu\302\2773RG?\257\210\231\277Rq\236\'\331W\306\277\025`\364\355Ug\341?$xc\030$\007\251\277u\361\177\010\261\276\265?r\303\307\320\353\213\323\277\027\257&\302\374j\333\277qSV\026\006\272\263\277\207\245#^\366K\355?&\271\273m\261f\306\277:x\246\244\r\333\276\2770\325E}\346\321\353\277*\362\305\3671\243\305\277Ke\253\234i\342\313?f\024`\375\025\033\336?\330\354\372\032]p\334\277\272\236\205\214/\366\322\277De\244\000Gg\326?\263VTm\224m\320\277{\252\230\341\366\311\354\277*\367\205\261\255\375\320\277\230\333P\342n\177\261?\3133\376\360\036\243\331\277\024\350%\211\377\003\325\277\361\035xr\"\361\267\277\272\nD8\nz\303?\357sC2\031\345\304\277\224P\274\000X\006\304\277&\032\251\207\377\253\354\277n\275g|o?\276\277[_\033\216{Y\330?\243\375\324\320\350\214\347?\366\302\221jf\364\300?\3536\303\344\033;\327\277>t\365\201\356\221\324\277\033\275\315\327+`\366?\212\223\365\020\013\240\322\277+\211(\233}\306\354\277\324\260\257I\332\n\330?\'\010B\264\270\010\311?c\206\001lB\306\263\277*\004Y\203\343\267\360\277o\354\224#L@\322?\324\007\361\335*B\300?"
      }
    }
  }
}
node {
  name: "layer_1_type_1/matrix/read"
  op: "Identity"
  input: "layer_1_type_1/matrix"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_1_type_1/matrix"
      }
    }
  }
}
node {
  name: "layer_1_type_1/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\036\256=\354\037D\263?<5\227\271Z\232\323\277\024\303\201\014\306\027\350\277\334\352\361W\356\010\321\277&\325\026N\344v\374?\367\'\244\352]\036\322\277\316\357\244jqG\321?\352\254&\270\357\355\371\277\013\375\260h\0247\344?\311-\361m\037R\346\277h\235\221\366\323\362\262?3\357O)=\270\355\277v\363Z#\337\002\264\277<\025=\033\317\300\365?\023\346\032>\327\335\340?+\206\210g\032\n\330\277\210\216\362P\361\242\357\277\"\027`\253\3043\002@\275y\325\037\325\225\301\2772D\035s6\375\331?"
      }
    }
  }
}
node {
  name: "layer_1_type_1/bias/read"
  op: "Identity"
  input: "layer_1_type_1/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_1_type_1/bias"
      }
    }
  }
}
node {
  name: "layer_1_type_1/MatMul"
  op: "MatMul"
  input: "layer_0_type_1/Reshape"
  input: "layer_1_type_1/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "layer_1_type_1/add"
  op: "AddV2"
  input: "layer_1_type_1/MatMul"
  input: "layer_1_type_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_1_type_1/idt"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\031\032U\216\320m\322?r\022\267)\235M\337?RyccU\377\322?\221(\307\273@\030.?D\227\232\010;p\347\277\3759:\003\374\353\321?\n\243\245\362:\251\312?Q\010\013\034\225\234\320\277r`V\t\302\204\307?j\022\377\371K\214\345?|RkR\234\236\341?\035\210\033\232\306\033\344\277\371\032\271Xe\324\345?\005\357\007%\000\304\321\277K\'\016\253\225\336\245?AQ\322\364!c\316\277L\301\024\037\243\203\332?\236\351\222\334\306\023\322\277*\204\306\334\014\223\330?\374\324@\027\200\254\320?"
      }
    }
  }
}
node {
  name: "layer_1_type_1/idt/read"
  op: "Identity"
  input: "layer_1_type_1/idt"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_1_type_1/idt"
      }
    }
  }
}
node {
  name: "layer_1_type_1/Tanh"
  op: "Tanh"
  input: "layer_1_type_1/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_1_type_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "layer_1_type_1/Reshape"
  op: "Reshape"
  input: "layer_1_type_1/Tanh"
  input: "layer_1_type_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "layer_1_type_1/mul"
  op: "Mul"
  input: "layer_1_type_1/Reshape"
  input: "layer_1_type_1/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "add_6"
  op: "AddV2"
  input: "layer_0_type_1/Reshape"
  input: "layer_1_type_1/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_2_type_1/matrix"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 20
          }
        }
        tensor_content: "\006u\033}\346L\354?\343\227\341\371\216\245\322?\246\023\005\372\235\226\341\277\334\371\375\276\024/\251?MB%\332\025\322\265?\311k\220vB\'\321\277\236\240\311\203Ne\273?\361\016\365\316O\304\363?\200n\260\3143\032\330?B\000\270\311\272M\333\27799\201e{\205\321?\224\325\270j\2555\320\277\302\316\tC\020\260\304?6bxi\206\374\260?=:\377z@\006\252?\237\350r\370\224\207\304?\320\360\277\331\2532\300\277G\342d\231;\374\343?b\2412J\302\321\310\277t\367\033\334e\277\311?R\026p\327\215\\\266?s\207\244Z\233\333\360?\360>\256\0341\326\262\277\375aq\215=v\305?\225\254M\233\212\207\311\277j\361\277?\234\035\351\277y\232\266\232\3322\332?\321\3369Q\010\035\330\277\031\213N\031\352\002\345?\335\342\332\326\024g\350\277\256Z\217\237\355\'\305?G\030\0354\035\214\253?\273\332\005\341\350\344\212?`/\264@1\207\313\277\363q\204\253\341/\304?\374\016\265\240\250v\331?\225\227\013\342\310!\325?/\357}\222\366\220\325\277\347\314\034s\301\250\321\277%\231\250\370\347\255\260?\177G\333\324RE\255\277\261\307\261\033D\223\305?\305\001\270\025\365\201\326\277\2303\245bx\332\255\277$\3023\227`\340\342?\337\360\n\323\3774\321\277\351\333\377\322:U\301\277\255q\020\'\3405\242?\337\324\235\317\255;\310?\277Xg\014\316\254\262?UU\235\010\2101\307?\0311m&Z\251\311\277\236\365x\'p\212\337?\275}\337\332`%\322?g\240\006\337DY\265\277\340\320\234\317\350\245\260?m\217\025D1K\321\277\366+wY\352\242\304?\233n\022\272cX\322\277,\356@+\214\261\301?\201\020\204\2168\200\345?l*&\356\022\343\265?\260\246h\023%\036\344\277\006\374\355 \253$\317?\234j\243X\351\337\302\277W\375\"o\035\373\303\277\202\003\260o\353N\227\277\'r\257\374\310(\343?\003I\035X\000\032\315?\206\227\361\223v\377\274?\377\201>\301\360\377\337?\301\313?\340\272\257\277\277\355\202P\376\311\316\324?e\205.0 \345\240\277\261V7\252\020G\322?\'{\001\026z\327\230?\335\353\033o\336\005\327\277\202\330[7\350*\260\277(<\364tY\267\261\277\233\r\327\020\236~\345?I\303x\010\365\262\272\277\006|mh\355\002\274?\322P*\252\252\325m?C\316[q\274\361\324\277\264pH\275\324\335\345\277Y\266\344\241\234\306\334?\025PX\031!\365\267?O\205\004\341\030\324\321?\217\234\266\223\364\266\327?\277*R\3218\001\305?\305\262\2675\316\202\334\277yf:\021\276~\250\277\324.\n|\255;\277\277]F2m\314\010\343\277\254t\277\313\250O\310\277\206\337\022\246T\226\261?kc\211\230\305\240\267?\212\364A\203H\222\305\277\355\220\334[\201\260\342?\365\322\202\025\204=\334\277\313`\240efP\320\277J\275\272\336f\243\360\277[1s\222\272\226\312?\225\326\210\367\302\356\305\277Q\272\017\351C\026\326?\013\270\177y\343\361\336?\345D\222\025R\314\307\277\300t]\255kE\345\277q&k}\030\365\356\277\337\355)\307\\\362\360?\323W]\244;\322\220?.\331\2064\201\301\267\277;\371>\004\355\030\240\277\3254\344\'J\351\347?b\020\'{\016\373\322\277\031\275\211B3\347\364\277\2722\317=\3777\302\277\342q\362\313\261W\316?\226\377\205\231\262xz?[\314\034\350\372\247\321\277\1776\376\335\250m\265?~\226U\326\275\237\342?\240\237\224X\276\230\261?\303\365\2211\n\365\260?\2027\355\223\250f\313\277\364\253 \350?w\332\277o\300\345\332\301d\274?\316\365KC\272?\335?\365(\010\266\377r\330?\213D\334\326\321\222\337\277\222\021\243\r\215\000\273\277\345!\246],\342\267?c\206i\323\014%\273?\247PW\302~(\343\277\016\212\246\007\276\272\276\277\214s.\311\016]\346?$DT\313.\332\273\277\255\007\330/x_\340\277$6\236\253\265\222\320\277\363\340\341\265<\241\227\277\245\231\356\340e\332\322?\240\034\306\214\234L\305?\"\203\353/\222h\324\277\016s\23518T\340?\360_\"\315\234\n\324?\266\262\246\351\362S\307\277R\270\353\275&\273\275?\3534\34566\263\316\277\017=@\n\361\235\244?;~\270\203\327\201\267\277\367Q\207\023\346D\324?\014\340V\226\311Z\302\277\035\263\303\003I\020\272?g/\337\177\252c\330?\361\314\277\251\217\034\264\277\023<\233V\333\252\270\277\324E\257]Bh\301\277O\265D\243K5\313?\260\3065\000_\316\262?\222>\016\006\2341\327?\374K\251\327\206\020\306?\221\020\257\342Yh\352?\344\304\331:!$\260?\022\205\216\311\3643\307\277\347a\273\370\250^\301\2773w\365~\304!\340\277\223\352\221\301\225k\310\277\325;\305\263\274b\322?g\017!\371>\272\351?}<\342#\337\230\312\277\naO\n\315#\275\277\212\tHL\013c\274?\261\367\367\267}\251\266?;\036\367\312\235{\355\2770n}zT\206\214\277\350)`\364H\243\344?\366\231\324\241\365y\263?\274 \032\202\363\213\324\277\022\320T\344\2659\250\277Wh1\357\342\263\305\277\245\244\320\227\210\020\277\277\256>\'\313x\347\243\277\024\007ez\337i\264?\276|&\352\331r\275\277\363-V\022\373\250\335?g\2757\364\354C\257?\243\266+\245\037\210\336\277\025}9k\366\274\262?x\260\242\363\375z\317\277\355\365S\241\364\230\314?s9\354\r\034\202\300?D\212\'\001mZ\360\277\014\317\361\240m\223\332?\333q^\020\242q\337?\364\225X\200\\\332\350\277\313Z\376\261>i\300\277\317P\022*\317\214\357\277\220\240\013@\207\203\340?0\rr\262`*\313\277\013\331\206\\m\345\315?\241\224G\244\\\322\335?:\217\377\0174R\325?S\201\223\347\312\357\340\277\205\337\355\316\323\341\330?\270\227|\263\300\221\327\2776\377*\253j\235\321\277\314OU\325\366o\310?\327\246:\267\241\307\315?\261:\275{]\310\326?\002\014\336\203\305\213\330\277z\355\230\252\346\247\274\277\3073\203\365\361\213\253\277l\225\321\014Q\332\246\277_\370d\271\016z\270?\232B\203\245\326:\310?\347j\343\230\020#\216\277\315\000\377\"\316\006\310?Q-\365\344dN\311?\246W!}\222+\222\277\321\230\261&\354D\275?f\277\343\235;u\324?#\310Bv~\"\267?\300yo\376\002\275\327\277\322x\253\3111\267\301?\3063\250\362\0275\343?\373\376\340\'_\n\301?O\231\034/\250\212\262\277\021p\331Xf\240\320?\253#-\335\326\253\260?\245\277l\277=7\221\277\032\344V\007\224\222\303?\307I\255\273\346\371\337\277}\327\022e\372\331\325?\323\313\235\035\037x\327?L\237\225S\020^\302\277\364\234\346\357\227\271\213\277\332A\307\375\024,\360\277\322m\277\267\036W\341?{\267\034^\246!\333\277\210\217\345\204\215\005\263?{\216\227\010\003\006\351?\370\330\010@(\344\267?\"iw\"\323\342\342\277uR\017\356J6\006?\220\'\017\022\273\266\253\277\3325\216\330\357\336\254\277\\\262\322\"Ha\307?\340-=\271\013\t\352?k\336\251MT\273\276?\237A\035\261\n\333\335\277\203\271\021\373\340\034\346?\256\212\271gM5\320\277\200\335#!r6\346?\312\3749\211\027\025\314\277\230\324s\312\367\236\245?h\200\244\312k\330\312?\312\310\241J|\221\256\277b?\326\371%\255\264?\001CC\032^2\330\277s\273\307|\226y\335?.\3469\017\025!\263\277\235\005G\372)\263\324?\233\003\010\251Ek\274?\222\344=\274\300\255\256\277\302\336DL^\010\341\277\"\340\364\016Nb\260\277\355Xb\250\350\r\251?\223N\207\266\207\251\332?\253m\30790%\304?\302Z\206Q\340\225\303\277\227hG\005\024v\260\277\325\245\313\2278K\310?\375\022\3666PQ\313?<D\033Z\364J\333\277\342\246\221}|\307\307\277\035<\335\377\225\370\303?\276\031\365\246\261`\260?e\335\315\307KY\300\277\3422r\272\001\314\225?|h\276\027^7\247?!0%h\342t\233\277\324\365\233z\276\333\325?\254j!\014\031\325^?7\2021j\306\327\264?~^\236\223\223\276\322\277\024c\266\305\350T\322\277\334M\234\277\266\267\235\277FcIO\356\032\327?\336\264\322\222k\303\306?-@D\270\334\020\331\277\207St\270\312\030\310\277\363$\234\255\006\014\252?\367\234O\263k\306\314?\313\253Fj\220\204\332\277\375K\017\360\327\366\320\277\264\t\tZ\361\336\322?=\201O\260\"\274\272?\031l\016~\222\275P\277\356]\201\361\364:\276?\004;\313\255\260^\246?\213\375\306\007 \265\226\277\225\362EM}m\303?\016\375*V\277\022\260?GR\032lhQu\277\364R,\325\232\002\210?\200\252[xS\230\323\277>\267\265\3311\026\331?\223\002(\312y\362\324\277\320t\225\314\353\276\304?`\207\202\375\327\263\313\277L\351\030\272\346\226\341?T\246g9 \030\351?I\315\241\254N3\322\277\224vF*\013\314\263\277.\t\215\342Y\322\347?\32040\"\204\037\275\277\336\216\031/\227(\344?\225 \021\213B5\335\277\033\234\236\332-\375\246\277\217\003\003\n\037\246\302?\306\022H\267\237\330\341\277\266\342dF`\235\327\277\023?\202\315\344\n\263?/\320\377\035\373\376\314\277\010\372\017i\362<\357?Y\333u\303\326\250\342?\235\204\'\033\005\273\310\277\307CW\322\354}\254\277c\241f\364\233$\323\277\2346x\031\267U\341?\367\251\034\262:\362\321?f\023P\305\r\202\335?\201,L@2\210\343\277\246\250\333\035\010\227\341\277\236\371)\310\275U\323?\242\031\350s\362\023\336\277\372\215\026r\001\274\343?\313{\363\r,\214\327?\235\243_\\\025u\330\277;\235m:1\217\314?w\335~\271\315\346\316\2776\033;T\205$\300\277\244-\030,K3\311??p\225\007\252\353\306\277|\331q%+\334\326\2772\307j8F\333\243?\321\207\3663\273\246\223\277\234\211n\017~\303\325?:\300\373`<\342\330\277Ix\271,\357\266\302?\226{\207\010\247U\314\277\273\334E\036[\240\272\2779\016\2373 \233\307\277\245\260\263\300\343\204\330\277\366\310\\k\340\236\324\277;v\030\333\010\226\222\277\235\014e\251d\272\234\277\362\266\334Xk\200\320\277\220\013\336\263P\250\340?\251:E\357\020.\264\277\2454N\367\010\311\321\277h*\0167w\210\322\277Qh\243a:f3?\275\314\354\217J!\335\277hq\203\262E<\337?\226\226\254\341}5\261?\252\023.\270\342\337t\277.\201\277m\236>\341\277Oe\221?}I\337\277\250\342\256\2712\306\312?\352\301\036\035\370\363\322?+\363\027b\230\200\321\277\324\032\013\003An\311\277\316\261\270b\0044\272?\004\241\215Pi\333\314\277\327\316\267B\\\031\321\277\370?e\264s.\253?\2229n.\345\302\240\277\261*FN\233\027\311\277\340\327\356\340\035\321\346\277.\020\312\371J\022\262\277\034\266\333.oLV?\253\265\227\237\322\264\250?\"\256\026\240e\251\305\277\332t$J\247\363\357\277M\355\273U\314\000\263\277h\321.\320\336\267\334?\001\344\246tr\t\301?\347\220I]\356\234[\277\246^\250/0\346\266?\256\375\005GPf\331\277b\003^\300\376Y\356?1\313\302\277\321r\312\277v\267g\005G[\351\277yp\267\235\366\332\344?O\371\026\203\"\363\256?\255\373\n\0038\007\353?F\271\345\3474|\367\277L\001M\333[\324\303?\303\310:\260\316\271\267\277"
      }
    }
  }
}
node {
  name: "layer_2_type_1/matrix/read"
  op: "Identity"
  input: "layer_2_type_1/matrix"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_2_type_1/matrix"
      }
    }
  }
}
node {
  name: "layer_2_type_1/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\3668\203\315o\021\254?\311hX\351\346\314\323\277\371\367\032P\351 \347\277\313+1\322g\300\327\2776\335`\272\373J\372?\220\212\025{\r`\335\277\te\336z\377\t\324?B\310\271\024\356\215\367\277\036\222K/\027\317\347?\207/\311Q\253\374\353\277\034\212^x\343~\240?&A\237\271@\331\355\277J\323t\340\244\260\262?\311\332\256\021\3747\364?\020FX\335\350\215\340?\345g\373\215\364\366\257\277\206\355a\025\302B\357\277\325\216\217\003\305w\001@-\031\353\226\3105\311\277\226\276l\n\017\031\327?"
      }
    }
  }
}
node {
  name: "layer_2_type_1/bias/read"
  op: "Identity"
  input: "layer_2_type_1/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_2_type_1/bias"
      }
    }
  }
}
node {
  name: "layer_2_type_1/MatMul"
  op: "MatMul"
  input: "add_6"
  input: "layer_2_type_1/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "layer_2_type_1/add"
  op: "AddV2"
  input: "layer_2_type_1/MatMul"
  input: "layer_2_type_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_2_type_1/idt"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "xl\370\366\301j\327?\221\002S4\253\240\342?cv\310\243<@\322?\017\371\362\365\337\351\314?\302\016\351\337@\240\327\2777\035Do\"\317\346?j\262\013sX\266\333?[\210]U\374\022\325\277\nh\322vu]\333?\2174\035\364\203\022\347?\226+T\025m\220\343?1S\25537J\315\277,\223\305\002M\000\346?l\250#OCq\336\277\374\254\203l\220\376\315?\252\301\263\024\264\322\326?\025l\344\374\017\000\320\277\325h\013U\363y\327\277n\365\215)\3314\340?Ov\237\272\205p\315?"
      }
    }
  }
}
node {
  name: "layer_2_type_1/idt/read"
  op: "Identity"
  input: "layer_2_type_1/idt"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer_2_type_1/idt"
      }
    }
  }
}
node {
  name: "layer_2_type_1/Tanh"
  op: "Tanh"
  input: "layer_2_type_1/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "layer_2_type_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "layer_2_type_1/Reshape"
  op: "Reshape"
  input: "layer_2_type_1/Tanh"
  input: "layer_2_type_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "layer_2_type_1/mul"
  op: "Mul"
  input: "layer_2_type_1/Reshape"
  input: "layer_2_type_1/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "add_7"
  op: "AddV2"
  input: "add_6"
  input: "layer_2_type_1/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "final_layer_type_1/matrix"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\346\374R\231Q\321\302?N\223>!j\017\335?\371\005\302\346\307L\264\277\010\250\"\243\320I\274?\367\237\3070(\233\320?\353\355\227JV\334\326\277\352\245\350\212\220Y\321?\031\346\376\341\037\372\317\277ER.\264\032\256\273?P\304a\334\355\304\327\277\240h\355\023\030\236\326?\333\222\033\330.P\300\277(\351\\\237\324\002\321?\332l\333Z\014\033\331?\003\223%\330\245\274\256?\326z\\>\252\337\307?v\266\026ckb\326\277\376\034X\226\233E\323?<\027\277A\303\r\321\2770\321\243\n\2045\321?"
      }
    }
  }
}
node {
  name: "final_layer_type_1/matrix/read"
  op: "Identity"
  input: "final_layer_type_1/matrix"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer_type_1/matrix"
      }
    }
  }
}
node {
  name: "final_layer_type_1/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 1
          }
        }
        double_val: -187.20238456986004
      }
    }
  }
}
node {
  name: "final_layer_type_1/bias/read"
  op: "Identity"
  input: "final_layer_type_1/bias"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@final_layer_type_1/bias"
      }
    }
  }
}
node {
  name: "final_layer_type_1/MatMul"
  op: "MatMul"
  input: "add_7"
  input: "final_layer_type_1/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "final_layer_type_1/add"
  op: "AddV2"
  input: "final_layer_type_1/MatMul"
  input: "final_layer_type_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Shape_5"
  op: "Shape"
  input: "Reshape_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_24/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_24/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_24/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_24"
  op: "StridedSlice"
  input: "Shape_5"
  input: "strided_slice_24/stack"
  input: "strided_slice_24/stack_1"
  input: "strided_slice_24/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_25/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_25/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_25/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_25"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_25/stack"
  input: "strided_slice_25/stack_1"
  input: "strided_slice_25/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Reshape_17/shape"
  op: "Pack"
  input: "strided_slice_24"
  input: "strided_slice_25"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_17"
  op: "Reshape"
  input: "final_layer_type_1/add"
  input: "Reshape_17/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_2"
  op: "ConcatV2"
  input: "Reshape_15"
  input: "Reshape_17"
  input: "concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_18/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_18"
  op: "Reshape"
  input: "concat_2"
  input: "Reshape_18/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_26/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_26/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_26/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_26"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_26/stack"
  input: "strided_slice_26/stack_1"
  input: "strided_slice_26/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "o_atom_energy/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "o_atom_energy/shape"
  op: "Pack"
  input: "o_atom_energy/shape/0"
  input: "strided_slice_26"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "o_atom_energy"
  op: "Reshape"
  input: "Reshape_18"
  input: "o_atom_energy/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "o_energy/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "o_energy"
  op: "Sum"
  input: "o_atom_energy"
  input: "o_energy/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "Reshape_18"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
        }
        double_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_18_grad/Shape"
  op: "Shape"
  input: "concat_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/Reshape_18_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/mod"
  op: "FloorMod"
  input: "concat_2/axis"
  input: "gradients/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_2_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape_15"
  input: "Reshape_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_2_grad/mod"
  input: "gradients/concat_2_grad/ShapeN"
  input: "gradients/concat_2_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients/Reshape_18_grad/Reshape"
  input: "gradients/concat_2_grad/ConcatOffset"
  input: "gradients/concat_2_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/Reshape_18_grad/Reshape"
  input: "gradients/concat_2_grad/ConcatOffset:1"
  input: "gradients/concat_2_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Reshape_15_grad/Shape"
  op: "Shape"
  input: "final_layer_type_0/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_15_grad/Reshape"
  op: "Reshape"
  input: "gradients/concat_2_grad/Slice"
  input: "gradients/Reshape_15_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_17_grad/Shape"
  op: "Shape"
  input: "final_layer_type_1/add"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_17_grad/Reshape"
  op: "Reshape"
  input: "gradients/concat_2_grad/Slice_1"
  input: "gradients/Reshape_17_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/final_layer_type_0/add_grad/Shape"
  op: "Shape"
  input: "final_layer_type_0/MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/final_layer_type_0/add_grad/Shape_1"
  op: "Shape"
  input: "final_layer_type_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/final_layer_type_0/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/final_layer_type_0/add_grad/Shape"
  input: "gradients/final_layer_type_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/final_layer_type_0/add_grad/Sum"
  op: "Sum"
  input: "gradients/Reshape_15_grad/Reshape"
  input: "gradients/final_layer_type_0/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/final_layer_type_0/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/final_layer_type_0/add_grad/Sum"
  input: "gradients/final_layer_type_0/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/final_layer_type_1/add_grad/Shape"
  op: "Shape"
  input: "final_layer_type_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/final_layer_type_1/add_grad/Shape_1"
  op: "Shape"
  input: "final_layer_type_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/final_layer_type_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/final_layer_type_1/add_grad/Shape"
  input: "gradients/final_layer_type_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/final_layer_type_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/Reshape_17_grad/Reshape"
  input: "gradients/final_layer_type_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/final_layer_type_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/final_layer_type_1/add_grad/Sum"
  input: "gradients/final_layer_type_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/final_layer_type_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/final_layer_type_0/add_grad/Reshape"
  input: "final_layer_type_0/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/final_layer_type_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/final_layer_type_1/add_grad/Reshape"
  input: "final_layer_type_1/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/add_4_grad/Shape"
  op: "Shape"
  input: "add_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/Shape_1"
  op: "Shape"
  input: "layer_2_type_0/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_4_grad/Shape"
  input: "gradients/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/final_layer_type_0/MatMul_grad/MatMul"
  input: "gradients/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_4_grad/Sum"
  input: "gradients/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/final_layer_type_0/MatMul_grad/MatMul"
  input: "gradients/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_4_grad/Sum_1"
  input: "gradients/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/Shape"
  op: "Shape"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/Shape_1"
  op: "Shape"
  input: "layer_2_type_1/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_7_grad/Shape"
  input: "gradients/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/Sum"
  op: "Sum"
  input: "gradients/final_layer_type_1/MatMul_grad/MatMul"
  input: "gradients/add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_7_grad/Sum"
  input: "gradients/add_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/final_layer_type_1/MatMul_grad/MatMul"
  input: "gradients/add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_7_grad/Sum_1"
  input: "gradients/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/mul_grad/Shape"
  op: "Shape"
  input: "layer_2_type_0/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/mul_grad/Shape_1"
  op: "Shape"
  input: "layer_2_type_0/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer_2_type_0/mul_grad/Shape"
  input: "gradients/layer_2_type_0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/mul_grad/Mul"
  op: "Mul"
  input: "gradients/add_4_grad/Reshape_1"
  input: "layer_2_type_0/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/layer_2_type_0/mul_grad/Sum"
  op: "Sum"
  input: "gradients/layer_2_type_0/mul_grad/Mul"
  input: "gradients/layer_2_type_0/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer_2_type_0/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_2_type_0/mul_grad/Sum"
  input: "gradients/layer_2_type_0/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_1/mul_grad/Shape"
  op: "Shape"
  input: "layer_2_type_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_1/mul_grad/Shape_1"
  op: "Shape"
  input: "layer_2_type_1/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer_2_type_1/mul_grad/Shape"
  input: "gradients/layer_2_type_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/add_7_grad/Reshape_1"
  input: "layer_2_type_1/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/layer_2_type_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/layer_2_type_1/mul_grad/Mul"
  input: "gradients/layer_2_type_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer_2_type_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_2_type_1/mul_grad/Sum"
  input: "gradients/layer_2_type_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/Reshape_grad/Shape"
  op: "Shape"
  input: "layer_2_type_0/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_2_type_0/mul_grad/Reshape"
  input: "gradients/layer_2_type_0/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_1/Reshape_grad/Shape"
  op: "Shape"
  input: "layer_2_type_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_2_type_1/mul_grad/Reshape"
  input: "gradients/layer_2_type_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "layer_2_type_0/Tanh"
  input: "gradients/layer_2_type_0/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/layer_2_type_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "layer_2_type_1/Tanh"
  input: "gradients/layer_2_type_1/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/layer_2_type_0/add_grad/Shape"
  op: "Shape"
  input: "layer_2_type_0/MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/add_grad/Shape_1"
  op: "Shape"
  input: "layer_2_type_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer_2_type_0/add_grad/Shape"
  input: "gradients/layer_2_type_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/add_grad/Sum"
  op: "Sum"
  input: "gradients/layer_2_type_0/Tanh_grad/TanhGrad"
  input: "gradients/layer_2_type_0/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer_2_type_0/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_2_type_0/add_grad/Sum"
  input: "gradients/layer_2_type_0/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_1/add_grad/Shape"
  op: "Shape"
  input: "layer_2_type_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_1/add_grad/Shape_1"
  op: "Shape"
  input: "layer_2_type_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer_2_type_1/add_grad/Shape"
  input: "gradients/layer_2_type_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/layer_2_type_1/Tanh_grad/TanhGrad"
  input: "gradients/layer_2_type_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer_2_type_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_2_type_1/add_grad/Sum"
  input: "gradients/layer_2_type_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_2_type_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/layer_2_type_0/add_grad/Reshape"
  input: "layer_2_type_0/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/layer_2_type_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/layer_2_type_1/add_grad/Reshape"
  input: "layer_2_type_1/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/add_4_grad/Reshape"
  input: "gradients/layer_2_type_0/MatMul_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/Shape"
  op: "Shape"
  input: "layer_0_type_0/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/Shape_1"
  op: "Shape"
  input: "layer_1_type_0/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_3_grad/Shape"
  input: "gradients/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_3_grad/Sum"
  input: "gradients/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_3_grad/Sum_1"
  input: "gradients/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/add_7_grad/Reshape"
  input: "gradients/layer_2_type_1/MatMul_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/Shape"
  op: "Shape"
  input: "layer_0_type_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/Shape_1"
  op: "Shape"
  input: "layer_1_type_1/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_6_grad/Shape"
  input: "gradients/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_6_grad/Sum"
  input: "gradients/add_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_6_grad/Sum_1"
  input: "gradients/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/mul_grad/Shape"
  op: "Shape"
  input: "layer_1_type_0/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/mul_grad/Shape_1"
  op: "Shape"
  input: "layer_1_type_0/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer_1_type_0/mul_grad/Shape"
  input: "gradients/layer_1_type_0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/mul_grad/Mul"
  op: "Mul"
  input: "gradients/add_3_grad/Reshape_1"
  input: "layer_1_type_0/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/layer_1_type_0/mul_grad/Sum"
  op: "Sum"
  input: "gradients/layer_1_type_0/mul_grad/Mul"
  input: "gradients/layer_1_type_0/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer_1_type_0/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_1_type_0/mul_grad/Sum"
  input: "gradients/layer_1_type_0/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_1/mul_grad/Shape"
  op: "Shape"
  input: "layer_1_type_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_1/mul_grad/Shape_1"
  op: "Shape"
  input: "layer_1_type_1/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer_1_type_1/mul_grad/Shape"
  input: "gradients/layer_1_type_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/add_6_grad/Reshape_1"
  input: "layer_1_type_1/idt/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/layer_1_type_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/layer_1_type_1/mul_grad/Mul"
  input: "gradients/layer_1_type_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer_1_type_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_1_type_1/mul_grad/Sum"
  input: "gradients/layer_1_type_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/Reshape_grad/Shape"
  op: "Shape"
  input: "layer_1_type_0/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_1_type_0/mul_grad/Reshape"
  input: "gradients/layer_1_type_0/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_1/Reshape_grad/Shape"
  op: "Shape"
  input: "layer_1_type_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_1_type_1/mul_grad/Reshape"
  input: "gradients/layer_1_type_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "layer_1_type_0/Tanh"
  input: "gradients/layer_1_type_0/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/layer_1_type_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "layer_1_type_1/Tanh"
  input: "gradients/layer_1_type_1/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/layer_1_type_0/add_grad/Shape"
  op: "Shape"
  input: "layer_1_type_0/MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/add_grad/Shape_1"
  op: "Shape"
  input: "layer_1_type_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer_1_type_0/add_grad/Shape"
  input: "gradients/layer_1_type_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/add_grad/Sum"
  op: "Sum"
  input: "gradients/layer_1_type_0/Tanh_grad/TanhGrad"
  input: "gradients/layer_1_type_0/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer_1_type_0/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_1_type_0/add_grad/Sum"
  input: "gradients/layer_1_type_0/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_1/add_grad/Shape"
  op: "Shape"
  input: "layer_1_type_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_1/add_grad/Shape_1"
  op: "Shape"
  input: "layer_1_type_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer_1_type_1/add_grad/Shape"
  input: "gradients/layer_1_type_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/layer_1_type_1/Tanh_grad/TanhGrad"
  input: "gradients/layer_1_type_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer_1_type_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_1_type_1/add_grad/Sum"
  input: "gradients/layer_1_type_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_1_type_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/layer_1_type_0/add_grad/Reshape"
  input: "layer_1_type_0/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/layer_1_type_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/layer_1_type_1/add_grad/Reshape"
  input: "layer_1_type_1/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/add_3_grad/Reshape"
  input: "gradients/layer_1_type_0/MatMul_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/layer_0_type_0/Reshape_grad/Shape"
  op: "Shape"
  input: "layer_0_type_0/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_2"
  input: "gradients/layer_0_type_0/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/add_6_grad/Reshape"
  input: "gradients/layer_1_type_1/MatMul_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/layer_0_type_1/Reshape_grad/Shape"
  op: "Shape"
  input: "layer_0_type_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_3"
  input: "gradients/layer_0_type_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_0/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "layer_0_type_0/Tanh"
  input: "gradients/layer_0_type_0/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/layer_0_type_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "layer_0_type_1/Tanh"
  input: "gradients/layer_0_type_1/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/layer_0_type_0/add_grad/Shape"
  op: "Shape"
  input: "layer_0_type_0/MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_0/add_grad/Shape_1"
  op: "Shape"
  input: "layer_0_type_0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_0/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer_0_type_0/add_grad/Shape"
  input: "gradients/layer_0_type_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_0/add_grad/Sum"
  op: "Sum"
  input: "gradients/layer_0_type_0/Tanh_grad/TanhGrad"
  input: "gradients/layer_0_type_0/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer_0_type_0/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_0_type_0/add_grad/Sum"
  input: "gradients/layer_0_type_0/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_1/add_grad/Shape"
  op: "Shape"
  input: "layer_0_type_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_1/add_grad/Shape_1"
  op: "Shape"
  input: "layer_0_type_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer_0_type_1/add_grad/Shape"
  input: "gradients/layer_0_type_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/layer_0_type_1/Tanh_grad/TanhGrad"
  input: "gradients/layer_0_type_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer_0_type_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_0_type_1/add_grad/Sum"
  input: "gradients/layer_0_type_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer_0_type_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/layer_0_type_0/add_grad/Reshape"
  input: "layer_0_type_0/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/layer_0_type_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/layer_0_type_1/add_grad/Reshape"
  input: "layer_0_type_1/matrix/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Reshape_14_grad/Shape"
  op: "Shape"
  input: "Slice_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_0_type_0/MatMul_grad/MatMul"
  input: "gradients/Reshape_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_16_grad/Shape"
  op: "Shape"
  input: "Slice_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer_0_type_1/MatMul_grad/MatMul"
  input: "gradients/Reshape_16_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_2_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Slice_2_grad/Shape"
  op: "Shape"
  input: "Slice_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_2_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Slice_2_grad/stack"
  op: "Pack"
  input: "gradients/Slice_2_grad/Rank"
  input: "gradients/Slice_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Slice_2_grad/Reshape"
  op: "Reshape"
  input: "Slice_2/begin"
  input: "gradients/Slice_2_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_2_grad/Shape_1"
  op: "Shape"
  input: "Reshape_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_2_grad/sub"
  op: "Sub"
  input: "gradients/Slice_2_grad/Shape_1"
  input: "gradients/Slice_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_2_grad/sub_1"
  op: "Sub"
  input: "gradients/Slice_2_grad/sub"
  input: "Slice_2/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Slice_2_grad/sub_1"
  input: "gradients/Slice_2_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_2_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Slice_2_grad/concat"
  op: "ConcatV2"
  input: "gradients/Slice_2_grad/Reshape"
  input: "gradients/Slice_2_grad/Reshape_1"
  input: "gradients/Slice_2_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_2_grad/Pad"
  op: "Pad"
  input: "gradients/Reshape_14_grad/Reshape"
  input: "gradients/Slice_2_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_3_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Slice_3_grad/Shape"
  op: "Shape"
  input: "Slice_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_3_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Slice_3_grad/stack"
  op: "Pack"
  input: "gradients/Slice_3_grad/Rank"
  input: "gradients/Slice_3_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Slice_3_grad/Reshape"
  op: "Reshape"
  input: "Slice_3/begin"
  input: "gradients/Slice_3_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_3_grad/Shape_1"
  op: "Shape"
  input: "Reshape_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_3_grad/sub"
  op: "Sub"
  input: "gradients/Slice_3_grad/Shape_1"
  input: "gradients/Slice_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_3_grad/sub_1"
  op: "Sub"
  input: "gradients/Slice_3_grad/sub"
  input: "Slice_3/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Slice_3_grad/sub_1"
  input: "gradients/Slice_3_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_3_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Slice_3_grad/concat"
  op: "ConcatV2"
  input: "gradients/Slice_3_grad/Reshape"
  input: "gradients/Slice_3_grad/Reshape_1"
  input: "gradients/Slice_3_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_3_grad/Pad"
  op: "Pad"
  input: "gradients/Reshape_16_grad/Reshape"
  input: "gradients/Slice_3_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/Slice_2_grad/Pad"
  input: "gradients/Slice_3_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Slice_2_grad/Pad"
      }
    }
  }
}
node {
  name: "gradients/Reshape_13_grad/Shape"
  op: "Shape"
  input: "o_descriptor"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_4"
  input: "gradients/Reshape_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/concat_grad/mod"
  op: "FloorMod"
  input: "concat/axis"
  input: "gradients/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape_8"
  input: "Reshape_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_grad/mod"
  input: "gradients/concat_grad/ShapeN"
  input: "gradients/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_grad/Slice"
  op: "Slice"
  input: "gradients/Reshape_13_grad/Reshape"
  input: "gradients/concat_grad/ConcatOffset"
  input: "gradients/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/Reshape_13_grad/Reshape"
  input: "gradients/concat_grad/ConcatOffset:1"
  input: "gradients/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/Reshape_8_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Reshape_14"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/concat_grad/Slice"
  input: "gradients/Reshape_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_11_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Reshape_14"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/concat_grad/Slice_1"
  input: "gradients/Reshape_11_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_14_grad/Shape"
  op: "Shape"
  input: "filter_type_0/MatMul_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/Reshape_8_grad/Reshape"
  input: "gradients/filter_type_0/Reshape_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_14_grad/Shape"
  op: "Shape"
  input: "filter_type_1/MatMul_8"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/Reshape_11_grad/Reshape"
  input: "gradients/filter_type_1/Reshape_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/MatMul"
  op: "BatchMatMulV2"
  input: "filter_type_0/Slice_4"
  input: "gradients/filter_type_0/Reshape_14_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "filter_type_0/mul"
  input: "gradients/filter_type_0/Reshape_14_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/Shape"
  op: "Shape"
  input: "filter_type_0/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/Slice_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/filter_type_0/MatMul_8_grad/Shape"
  input: "gradients/filter_type_0/MatMul_8_grad/strided_slice/stack"
  input: "gradients/filter_type_0/MatMul_8_grad/strided_slice/stack_1"
  input: "gradients/filter_type_0/MatMul_8_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/filter_type_0/MatMul_8_grad/Shape_1"
  input: "gradients/filter_type_0/MatMul_8_grad/strided_slice_1/stack"
  input: "gradients/filter_type_0/MatMul_8_grad/strided_slice_1/stack_1"
  input: "gradients/filter_type_0/MatMul_8_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/MatMul_8_grad/strided_slice"
  input: "gradients/filter_type_0/MatMul_8_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/MatMul_8_grad/MatMul"
  input: "gradients/filter_type_0/MatMul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_8_grad/Sum"
  input: "gradients/filter_type_0/MatMul_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_0/MatMul_8_grad/MatMul_1"
  input: "gradients/filter_type_0/MatMul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_8_grad/Sum_1"
  input: "gradients/filter_type_0/MatMul_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/MatMul"
  op: "BatchMatMulV2"
  input: "filter_type_1/Slice_4"
  input: "gradients/filter_type_1/Reshape_14_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "filter_type_1/mul"
  input: "gradients/filter_type_1/Reshape_14_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/Shape"
  op: "Shape"
  input: "filter_type_1/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/Slice_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/filter_type_1/MatMul_8_grad/Shape"
  input: "gradients/filter_type_1/MatMul_8_grad/strided_slice/stack"
  input: "gradients/filter_type_1/MatMul_8_grad/strided_slice/stack_1"
  input: "gradients/filter_type_1/MatMul_8_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/filter_type_1/MatMul_8_grad/Shape_1"
  input: "gradients/filter_type_1/MatMul_8_grad/strided_slice_1/stack"
  input: "gradients/filter_type_1/MatMul_8_grad/strided_slice_1/stack_1"
  input: "gradients/filter_type_1/MatMul_8_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/MatMul_8_grad/strided_slice"
  input: "gradients/filter_type_1/MatMul_8_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/MatMul_8_grad/MatMul"
  input: "gradients/filter_type_1/MatMul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_8_grad/Sum"
  input: "gradients/filter_type_1/MatMul_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_1/MatMul_8_grad/MatMul_1"
  input: "gradients/filter_type_1/MatMul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_8_grad/Sum_1"
  input: "gradients/filter_type_1/MatMul_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/stack"
  op: "Pack"
  input: "gradients/filter_type_0/Slice_4_grad/Rank"
  input: "gradients/filter_type_0/Slice_4_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/Reshape"
  op: "Reshape"
  input: "filter_type_0/Slice_4/begin"
  input: "gradients/filter_type_0/Slice_4_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/sub"
  op: "Sub"
  input: "gradients/filter_type_0/Slice_4_grad/Shape_1"
  input: "gradients/filter_type_0/Slice_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/sub_1"
  op: "Sub"
  input: "gradients/filter_type_0/Slice_4_grad/sub"
  input: "filter_type_0/Slice_4/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/Slice_4_grad/sub_1"
  input: "gradients/filter_type_0/Slice_4_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/concat"
  op: "ConcatV2"
  input: "gradients/filter_type_0/Slice_4_grad/Reshape"
  input: "gradients/filter_type_0/Slice_4_grad/Reshape_1"
  input: "gradients/filter_type_0/Slice_4_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_4_grad/Pad"
  op: "Pad"
  input: "gradients/filter_type_0/MatMul_8_grad/Reshape_1"
  input: "gradients/filter_type_0/Slice_4_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/stack"
  op: "Pack"
  input: "gradients/filter_type_1/Slice_4_grad/Rank"
  input: "gradients/filter_type_1/Slice_4_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/Reshape"
  op: "Reshape"
  input: "filter_type_1/Slice_4/begin"
  input: "gradients/filter_type_1/Slice_4_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/mul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/sub"
  op: "Sub"
  input: "gradients/filter_type_1/Slice_4_grad/Shape_1"
  input: "gradients/filter_type_1/Slice_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/sub_1"
  op: "Sub"
  input: "gradients/filter_type_1/Slice_4_grad/sub"
  input: "filter_type_1/Slice_4/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/Slice_4_grad/sub_1"
  input: "gradients/filter_type_1/Slice_4_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/concat"
  op: "ConcatV2"
  input: "gradients/filter_type_1/Slice_4_grad/Reshape"
  input: "gradients/filter_type_1/Slice_4_grad/Reshape_1"
  input: "gradients/filter_type_1/Slice_4_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_4_grad/Pad"
  op: "Pad"
  input: "gradients/filter_type_1/MatMul_8_grad/Reshape_1"
  input: "gradients/filter_type_1/Slice_4_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/filter_type_0/MatMul_8_grad/Reshape"
  input: "gradients/filter_type_0/Slice_4_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_0/MatMul_8_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/mul_grad/Shape"
  op: "Shape"
  input: "filter_type_0/add_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/mul_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/mul/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/mul_grad/Shape"
  input: "gradients/filter_type_0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_5"
  input: "filter_type_0/mul/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/mul_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/mul_grad/Mul"
  input: "gradients/filter_type_0/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/mul_grad/Sum"
  input: "gradients/filter_type_0/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/filter_type_1/MatMul_8_grad/Reshape"
  input: "gradients/filter_type_1/Slice_4_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_1/MatMul_8_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/mul_grad/Shape"
  op: "Shape"
  input: "filter_type_1/add_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/mul_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/mul_grad/Shape"
  input: "gradients/filter_type_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "filter_type_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/mul_grad/Mul"
  input: "gradients/filter_type_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/mul_grad/Sum"
  input: "gradients/filter_type_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_10_grad/Shape"
  op: "Shape"
  input: "filter_type_0/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_10_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_10_grad/Shape"
  input: "gradients/filter_type_0/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_10_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/mul_grad/Reshape"
  input: "gradients/filter_type_0/add_10_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_10_grad/Sum"
  input: "gradients/filter_type_0/add_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_10_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_0/mul_grad/Reshape"
  input: "gradients/filter_type_0/add_10_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_10_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/add_10_grad/Sum_1"
  input: "gradients/filter_type_0/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_10_grad/Shape"
  op: "Shape"
  input: "filter_type_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_10_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_10_grad/Shape"
  input: "gradients/filter_type_1/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_10_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/mul_grad/Reshape"
  input: "gradients/filter_type_1/add_10_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_10_grad/Sum"
  input: "gradients/filter_type_1/add_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_10_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_1/mul_grad/Reshape"
  input: "gradients/filter_type_1/add_10_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_10_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/add_10_grad/Sum_1"
  input: "gradients/filter_type_1/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/MatMul"
  op: "BatchMatMulV2"
  input: "filter_type_0/Reshape_5"
  input: "gradients/filter_type_0/add_10_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "filter_type_0/Reshape_6"
  input: "gradients/filter_type_0/add_10_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/filter_type_0/MatMul_3_grad/Shape"
  input: "gradients/filter_type_0/MatMul_3_grad/strided_slice/stack"
  input: "gradients/filter_type_0/MatMul_3_grad/strided_slice/stack_1"
  input: "gradients/filter_type_0/MatMul_3_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/filter_type_0/MatMul_3_grad/Shape_1"
  input: "gradients/filter_type_0/MatMul_3_grad/strided_slice_1/stack"
  input: "gradients/filter_type_0/MatMul_3_grad/strided_slice_1/stack_1"
  input: "gradients/filter_type_0/MatMul_3_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/MatMul_3_grad/strided_slice"
  input: "gradients/filter_type_0/MatMul_3_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/MatMul_3_grad/MatMul"
  input: "gradients/filter_type_0/MatMul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_3_grad/Sum"
  input: "gradients/filter_type_0/MatMul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_0/MatMul_3_grad/MatMul_1"
  input: "gradients/filter_type_0/MatMul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_3_grad/Sum_1"
  input: "gradients/filter_type_0/MatMul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/MatMul"
  op: "BatchMatMulV2"
  input: "filter_type_0/Reshape_12"
  input: "gradients/filter_type_0/add_10_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "filter_type_0/Reshape_13"
  input: "gradients/filter_type_0/add_10_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Reshape_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/Reshape_12"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/filter_type_0/MatMul_7_grad/Shape"
  input: "gradients/filter_type_0/MatMul_7_grad/strided_slice/stack"
  input: "gradients/filter_type_0/MatMul_7_grad/strided_slice/stack_1"
  input: "gradients/filter_type_0/MatMul_7_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/filter_type_0/MatMul_7_grad/Shape_1"
  input: "gradients/filter_type_0/MatMul_7_grad/strided_slice_1/stack"
  input: "gradients/filter_type_0/MatMul_7_grad/strided_slice_1/stack_1"
  input: "gradients/filter_type_0/MatMul_7_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/MatMul_7_grad/strided_slice"
  input: "gradients/filter_type_0/MatMul_7_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/MatMul_7_grad/MatMul"
  input: "gradients/filter_type_0/MatMul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_7_grad/Sum"
  input: "gradients/filter_type_0/MatMul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_0/MatMul_7_grad/MatMul_1"
  input: "gradients/filter_type_0/MatMul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_7_grad/Sum_1"
  input: "gradients/filter_type_0/MatMul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/MatMul"
  op: "BatchMatMulV2"
  input: "filter_type_1/Reshape_5"
  input: "gradients/filter_type_1/add_10_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "filter_type_1/Reshape_6"
  input: "gradients/filter_type_1/add_10_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/filter_type_1/MatMul_3_grad/Shape"
  input: "gradients/filter_type_1/MatMul_3_grad/strided_slice/stack"
  input: "gradients/filter_type_1/MatMul_3_grad/strided_slice/stack_1"
  input: "gradients/filter_type_1/MatMul_3_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/filter_type_1/MatMul_3_grad/Shape_1"
  input: "gradients/filter_type_1/MatMul_3_grad/strided_slice_1/stack"
  input: "gradients/filter_type_1/MatMul_3_grad/strided_slice_1/stack_1"
  input: "gradients/filter_type_1/MatMul_3_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/MatMul_3_grad/strided_slice"
  input: "gradients/filter_type_1/MatMul_3_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/MatMul_3_grad/MatMul"
  input: "gradients/filter_type_1/MatMul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_3_grad/Sum"
  input: "gradients/filter_type_1/MatMul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_1/MatMul_3_grad/MatMul_1"
  input: "gradients/filter_type_1/MatMul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_3_grad/Sum_1"
  input: "gradients/filter_type_1/MatMul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/MatMul"
  op: "BatchMatMulV2"
  input: "filter_type_1/Reshape_12"
  input: "gradients/filter_type_1/add_10_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "filter_type_1/Reshape_13"
  input: "gradients/filter_type_1/add_10_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Reshape_13"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/Reshape_12"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/filter_type_1/MatMul_7_grad/Shape"
  input: "gradients/filter_type_1/MatMul_7_grad/strided_slice/stack"
  input: "gradients/filter_type_1/MatMul_7_grad/strided_slice/stack_1"
  input: "gradients/filter_type_1/MatMul_7_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/filter_type_1/MatMul_7_grad/Shape_1"
  input: "gradients/filter_type_1/MatMul_7_grad/strided_slice_1/stack"
  input: "gradients/filter_type_1/MatMul_7_grad/strided_slice_1/stack_1"
  input: "gradients/filter_type_1/MatMul_7_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/MatMul_7_grad/strided_slice"
  input: "gradients/filter_type_1/MatMul_7_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/MatMul_7_grad/MatMul"
  input: "gradients/filter_type_1/MatMul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_7_grad/Sum"
  input: "gradients/filter_type_1/MatMul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_1/MatMul_7_grad/MatMul_1"
  input: "gradients/filter_type_1/MatMul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_7_grad/Sum_1"
  input: "gradients/filter_type_1/MatMul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_6_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_3_grad/Reshape"
  input: "gradients/filter_type_0/Reshape_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_5_grad/Shape"
  op: "Shape"
  input: "filter_type_0/add_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_3_grad/Reshape_1"
  input: "gradients/filter_type_0/Reshape_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_13_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_7_grad/Reshape"
  input: "gradients/filter_type_0/Reshape_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_12_grad/Shape"
  op: "Shape"
  input: "filter_type_0/add_9"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_7_grad/Reshape_1"
  input: "gradients/filter_type_0/Reshape_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_6_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_3_grad/Reshape"
  input: "gradients/filter_type_1/Reshape_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_5_grad/Shape"
  op: "Shape"
  input: "filter_type_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_3_grad/Reshape_1"
  input: "gradients/filter_type_1/Reshape_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_13_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_7_grad/Reshape"
  input: "gradients/filter_type_1/Reshape_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_12_grad/Shape"
  op: "Shape"
  input: "filter_type_1/add_9"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_7_grad/Reshape_1"
  input: "gradients/filter_type_1/Reshape_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_4_grad/Shape"
  op: "Shape"
  input: "filter_type_0/concat_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_4_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_4_grad/Shape"
  input: "gradients/filter_type_0/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/Reshape_5_grad/Reshape"
  input: "gradients/filter_type_0/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_4_grad/Sum"
  input: "gradients/filter_type_0/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_0/Reshape_5_grad/Reshape"
  input: "gradients/filter_type_0/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/add_4_grad/Sum_1"
  input: "gradients/filter_type_0/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_9_grad/Shape"
  op: "Shape"
  input: "filter_type_0/concat_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_9_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_9_grad/Shape"
  input: "gradients/filter_type_0/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_9_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/Reshape_12_grad/Reshape"
  input: "gradients/filter_type_0/add_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_9_grad/Sum"
  input: "gradients/filter_type_0/add_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_0/Reshape_12_grad/Reshape"
  input: "gradients/filter_type_0/add_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/add_9_grad/Sum_1"
  input: "gradients/filter_type_0/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_4_grad/Shape"
  op: "Shape"
  input: "filter_type_1/concat_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_4_grad/Shape"
  input: "gradients/filter_type_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/Reshape_5_grad/Reshape"
  input: "gradients/filter_type_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_4_grad/Sum"
  input: "gradients/filter_type_1/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_1/Reshape_5_grad/Reshape"
  input: "gradients/filter_type_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/add_4_grad/Sum_1"
  input: "gradients/filter_type_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_9_grad/Shape"
  op: "Shape"
  input: "filter_type_1/concat_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_9_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_9_grad/Shape"
  input: "gradients/filter_type_1/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_9_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/Reshape_12_grad/Reshape"
  input: "gradients/filter_type_1/add_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_9_grad/Sum"
  input: "gradients/filter_type_1/add_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/filter_type_1/Reshape_12_grad/Reshape"
  input: "gradients/filter_type_1/add_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/add_9_grad/Sum_1"
  input: "gradients/filter_type_1/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_1_grad/mod"
  op: "FloorMod"
  input: "filter_type_0/concat_1/axis"
  input: "gradients/filter_type_0/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "filter_type_0/add_2"
  input: "filter_type_0/add_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/filter_type_0/concat_1_grad/mod"
  input: "gradients/filter_type_0/concat_1_grad/ShapeN"
  input: "gradients/filter_type_0/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/filter_type_0/add_4_grad/Reshape"
  input: "gradients/filter_type_0/concat_1_grad/ConcatOffset"
  input: "gradients/filter_type_0/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/filter_type_0/add_4_grad/Reshape"
  input: "gradients/filter_type_0/concat_1_grad/ConcatOffset:1"
  input: "gradients/filter_type_0/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_4_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_4_grad/Reshape_1"
  input: "gradients/filter_type_0/Reshape_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_3_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_3_grad/mod"
  op: "FloorMod"
  input: "filter_type_0/concat_3/axis"
  input: "gradients/filter_type_0/concat_3_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_3_grad/ShapeN"
  op: "ShapeN"
  input: "filter_type_0/add_7"
  input: "filter_type_0/add_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_3_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/filter_type_0/concat_3_grad/mod"
  input: "gradients/filter_type_0/concat_3_grad/ShapeN"
  input: "gradients/filter_type_0/concat_3_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_3_grad/Slice"
  op: "Slice"
  input: "gradients/filter_type_0/add_9_grad/Reshape"
  input: "gradients/filter_type_0/concat_3_grad/ConcatOffset"
  input: "gradients/filter_type_0/concat_3_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_3_grad/Slice_1"
  op: "Slice"
  input: "gradients/filter_type_0/add_9_grad/Reshape"
  input: "gradients/filter_type_0/concat_3_grad/ConcatOffset:1"
  input: "gradients/filter_type_0/concat_3_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_11_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Tanh_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_9_grad/Reshape_1"
  input: "gradients/filter_type_0/Reshape_11_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_1_grad/mod"
  op: "FloorMod"
  input: "filter_type_1/concat_1/axis"
  input: "gradients/filter_type_1/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "filter_type_1/add_2"
  input: "filter_type_1/add_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/filter_type_1/concat_1_grad/mod"
  input: "gradients/filter_type_1/concat_1_grad/ShapeN"
  input: "gradients/filter_type_1/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/filter_type_1/add_4_grad/Reshape"
  input: "gradients/filter_type_1/concat_1_grad/ConcatOffset"
  input: "gradients/filter_type_1/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/filter_type_1/add_4_grad/Reshape"
  input: "gradients/filter_type_1/concat_1_grad/ConcatOffset:1"
  input: "gradients/filter_type_1/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_4_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_4_grad/Reshape_1"
  input: "gradients/filter_type_1/Reshape_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_3_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_3_grad/mod"
  op: "FloorMod"
  input: "filter_type_1/concat_3/axis"
  input: "gradients/filter_type_1/concat_3_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_3_grad/ShapeN"
  op: "ShapeN"
  input: "filter_type_1/add_7"
  input: "filter_type_1/add_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_3_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/filter_type_1/concat_3_grad/mod"
  input: "gradients/filter_type_1/concat_3_grad/ShapeN"
  input: "gradients/filter_type_1/concat_3_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_3_grad/Slice"
  op: "Slice"
  input: "gradients/filter_type_1/add_9_grad/Reshape"
  input: "gradients/filter_type_1/concat_3_grad/ConcatOffset"
  input: "gradients/filter_type_1/concat_3_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_3_grad/Slice_1"
  op: "Slice"
  input: "gradients/filter_type_1/add_9_grad/Reshape"
  input: "gradients/filter_type_1/concat_3_grad/ConcatOffset:1"
  input: "gradients/filter_type_1/concat_3_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_11_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Tanh_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_9_grad/Reshape_1"
  input: "gradients/filter_type_1/Reshape_11_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Tanh_2_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_0/Tanh_2"
  input: "gradients/filter_type_0/Reshape_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/Tanh_5_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_0/Tanh_5"
  input: "gradients/filter_type_0/Reshape_11_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/Tanh_2_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_1/Tanh_2"
  input: "gradients/filter_type_1/Reshape_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/Tanh_5_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_1/Tanh_5"
  input: "gradients/filter_type_1/Reshape_11_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/add_3_grad/Shape"
  op: "Shape"
  input: "filter_type_0/MatMul_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_3_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/bias_3_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_3_grad/Shape"
  input: "gradients/filter_type_0/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/Tanh_2_grad/TanhGrad"
  input: "gradients/filter_type_0/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_3_grad/Sum"
  input: "gradients/filter_type_0/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_8_grad/Shape"
  op: "Shape"
  input: "filter_type_0/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_8_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/bias_3_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_8_grad/Shape"
  input: "gradients/filter_type_0/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_8_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/Tanh_5_grad/TanhGrad"
  input: "gradients/filter_type_0/add_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_8_grad/Sum"
  input: "gradients/filter_type_0/add_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_3_grad/Shape"
  op: "Shape"
  input: "filter_type_1/MatMul_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_3_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/bias_3_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_3_grad/Shape"
  input: "gradients/filter_type_1/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/Tanh_2_grad/TanhGrad"
  input: "gradients/filter_type_1/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_3_grad/Sum"
  input: "gradients/filter_type_1/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_8_grad/Shape"
  op: "Shape"
  input: "filter_type_1/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_8_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/bias_3_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_8_grad/Shape"
  input: "gradients/filter_type_1/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_8_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/Tanh_5_grad/TanhGrad"
  input: "gradients/filter_type_1/add_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_8_grad/Sum"
  input: "gradients/filter_type_1/add_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_0/add_3_grad/Reshape"
  input: "filter_type_0/matrix_3_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_0/add_8_grad/Reshape"
  input: "filter_type_0/matrix_3_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_1/add_3_grad/Reshape"
  input: "filter_type_1/matrix_3_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_1/add_8_grad/Reshape"
  input: "filter_type_1/matrix_3_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/filter_type_0/concat_1_grad/Slice"
  input: "gradients/filter_type_0/concat_1_grad/Slice_1"
  input: "gradients/filter_type_0/MatMul_2_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_0/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/add_2_grad/Shape"
  op: "Shape"
  input: "filter_type_0/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_2_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_2_grad/Shape"
  input: "gradients/filter_type_0/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/filter_type_0/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_2_grad/Sum"
  input: "gradients/filter_type_0/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/filter_type_0/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/add_2_grad/Sum_1"
  input: "gradients/filter_type_0/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/filter_type_0/concat_3_grad/Slice"
  input: "gradients/filter_type_0/concat_3_grad/Slice_1"
  input: "gradients/filter_type_0/MatMul_6_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_0/concat_3_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/add_7_grad/Shape"
  op: "Shape"
  input: "filter_type_0/concat_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_7_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/Reshape_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_7_grad/Shape"
  input: "gradients/filter_type_0/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_7_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/filter_type_0/add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_7_grad/Sum"
  input: "gradients/filter_type_0/add_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/filter_type_0/add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/add_7_grad/Sum_1"
  input: "gradients/filter_type_0/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/filter_type_1/concat_1_grad/Slice"
  input: "gradients/filter_type_1/concat_1_grad/Slice_1"
  input: "gradients/filter_type_1/MatMul_2_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_1/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/add_2_grad/Shape"
  op: "Shape"
  input: "filter_type_1/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_2_grad/Shape"
  input: "gradients/filter_type_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_9"
  input: "gradients/filter_type_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_2_grad/Sum"
  input: "gradients/filter_type_1/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_9"
  input: "gradients/filter_type_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/add_2_grad/Sum_1"
  input: "gradients/filter_type_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/filter_type_1/concat_3_grad/Slice"
  input: "gradients/filter_type_1/concat_3_grad/Slice_1"
  input: "gradients/filter_type_1/MatMul_6_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_1/concat_3_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/add_7_grad/Shape"
  op: "Shape"
  input: "filter_type_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_7_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/Reshape_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_7_grad/Shape"
  input: "gradients/filter_type_1/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_7_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_10"
  input: "gradients/filter_type_1/add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_7_grad/Sum"
  input: "gradients/filter_type_1/add_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_10"
  input: "gradients/filter_type_1/add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/add_7_grad/Sum_1"
  input: "gradients/filter_type_1/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_grad/mod"
  op: "FloorMod"
  input: "filter_type_0/concat/axis"
  input: "gradients/filter_type_0/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_grad/ShapeN"
  op: "ShapeN"
  input: "filter_type_0/Reshape_2"
  input: "filter_type_0/Reshape_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/filter_type_0/concat_grad/mod"
  input: "gradients/filter_type_0/concat_grad/ShapeN"
  input: "gradients/filter_type_0/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_grad/Slice"
  op: "Slice"
  input: "gradients/filter_type_0/add_2_grad/Reshape"
  input: "gradients/filter_type_0/concat_grad/ConcatOffset"
  input: "gradients/filter_type_0/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/filter_type_0/add_2_grad/Reshape"
  input: "gradients/filter_type_0/concat_grad/ConcatOffset:1"
  input: "gradients/filter_type_0/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_3_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_2_grad/Reshape_1"
  input: "gradients/filter_type_0/Reshape_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_2_grad/mod"
  op: "FloorMod"
  input: "filter_type_0/concat_2/axis"
  input: "gradients/filter_type_0/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_2_grad/ShapeN"
  op: "ShapeN"
  input: "filter_type_0/Reshape_9"
  input: "filter_type_0/Reshape_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/filter_type_0/concat_2_grad/mod"
  input: "gradients/filter_type_0/concat_2_grad/ShapeN"
  input: "gradients/filter_type_0/concat_2_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients/filter_type_0/add_7_grad/Reshape"
  input: "gradients/filter_type_0/concat_2_grad/ConcatOffset"
  input: "gradients/filter_type_0/concat_2_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/filter_type_0/add_7_grad/Reshape"
  input: "gradients/filter_type_0/concat_2_grad/ConcatOffset:1"
  input: "gradients/filter_type_0/concat_2_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_10_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_7_grad/Reshape_1"
  input: "gradients/filter_type_0/Reshape_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_grad/mod"
  op: "FloorMod"
  input: "filter_type_1/concat/axis"
  input: "gradients/filter_type_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "filter_type_1/Reshape_2"
  input: "filter_type_1/Reshape_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/filter_type_1/concat_grad/mod"
  input: "gradients/filter_type_1/concat_grad/ShapeN"
  input: "gradients/filter_type_1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_grad/Slice"
  op: "Slice"
  input: "gradients/filter_type_1/add_2_grad/Reshape"
  input: "gradients/filter_type_1/concat_grad/ConcatOffset"
  input: "gradients/filter_type_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/filter_type_1/add_2_grad/Reshape"
  input: "gradients/filter_type_1/concat_grad/ConcatOffset:1"
  input: "gradients/filter_type_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_3_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_2_grad/Reshape_1"
  input: "gradients/filter_type_1/Reshape_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_2_grad/mod"
  op: "FloorMod"
  input: "filter_type_1/concat_2/axis"
  input: "gradients/filter_type_1/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_2_grad/ShapeN"
  op: "ShapeN"
  input: "filter_type_1/Reshape_9"
  input: "filter_type_1/Reshape_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/filter_type_1/concat_2_grad/mod"
  input: "gradients/filter_type_1/concat_2_grad/ShapeN"
  input: "gradients/filter_type_1/concat_2_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients/filter_type_1/add_7_grad/Reshape"
  input: "gradients/filter_type_1/concat_2_grad/ConcatOffset"
  input: "gradients/filter_type_1/concat_2_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/filter_type_1/add_7_grad/Reshape"
  input: "gradients/filter_type_1/concat_2_grad/ConcatOffset:1"
  input: "gradients/filter_type_1/concat_2_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_10_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_7_grad/Reshape_1"
  input: "gradients/filter_type_1/Reshape_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_0/Tanh_1"
  input: "gradients/filter_type_0/Reshape_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/Tanh_4_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_0/Tanh_4"
  input: "gradients/filter_type_0/Reshape_10_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_1/Tanh_1"
  input: "gradients/filter_type_1/Reshape_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/Tanh_4_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_1/Tanh_4"
  input: "gradients/filter_type_1/Reshape_10_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/add_1_grad/Shape"
  op: "Shape"
  input: "filter_type_0/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_1_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/bias_2_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_1_grad/Shape"
  input: "gradients/filter_type_0/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/Tanh_1_grad/TanhGrad"
  input: "gradients/filter_type_0/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_1_grad/Sum"
  input: "gradients/filter_type_0/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_6_grad/Shape"
  op: "Shape"
  input: "filter_type_0/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_6_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/bias_2_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_6_grad/Shape"
  input: "gradients/filter_type_0/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/Tanh_4_grad/TanhGrad"
  input: "gradients/filter_type_0/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_6_grad/Sum"
  input: "gradients/filter_type_0/add_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_1_grad/Shape"
  op: "Shape"
  input: "filter_type_1/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_1_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/bias_2_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_1_grad/Shape"
  input: "gradients/filter_type_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/Tanh_1_grad/TanhGrad"
  input: "gradients/filter_type_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_1_grad/Sum"
  input: "gradients/filter_type_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_6_grad/Shape"
  op: "Shape"
  input: "filter_type_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_6_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/bias_2_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_6_grad/Shape"
  input: "gradients/filter_type_1/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/Tanh_4_grad/TanhGrad"
  input: "gradients/filter_type_1/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_6_grad/Sum"
  input: "gradients/filter_type_1/add_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_0/add_1_grad/Reshape"
  input: "filter_type_0/matrix_2_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_0/add_6_grad/Reshape"
  input: "filter_type_0/matrix_2_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_1/add_1_grad/Reshape"
  input: "filter_type_1/matrix_2_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_1/add_6_grad/Reshape"
  input: "filter_type_1/matrix_2_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/filter_type_0/concat_grad/Slice"
  input: "gradients/filter_type_0/concat_grad/Slice_1"
  input: "gradients/filter_type_0/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_0/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_2_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_11"
  input: "gradients/filter_type_0/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/filter_type_0/concat_2_grad/Slice"
  input: "gradients/filter_type_0/concat_2_grad/Slice_1"
  input: "gradients/filter_type_0/MatMul_5_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_0/concat_2_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_9_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_12"
  input: "gradients/filter_type_0/Reshape_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/filter_type_1/concat_grad/Slice"
  input: "gradients/filter_type_1/concat_grad/Slice_1"
  input: "gradients/filter_type_1/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_1/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_2_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_13"
  input: "gradients/filter_type_1/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/filter_type_1/concat_2_grad/Slice"
  input: "gradients/filter_type_1/concat_2_grad/Slice_1"
  input: "gradients/filter_type_1/MatMul_5_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_1/concat_2_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_9_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_14"
  input: "gradients/filter_type_1/Reshape_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_0/Tanh"
  input: "gradients/filter_type_0/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/Tanh_3_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_0/Tanh_3"
  input: "gradients/filter_type_0/Reshape_9_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_1/Tanh"
  input: "gradients/filter_type_1/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_1/Tanh_3_grad/TanhGrad"
  op: "TanhGrad"
  input: "filter_type_1/Tanh_3"
  input: "gradients/filter_type_1/Reshape_9_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "gradients/filter_type_0/add_grad/Shape"
  op: "Shape"
  input: "filter_type_0/MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/bias_1_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_grad/Shape"
  input: "gradients/filter_type_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/Tanh_grad/TanhGrad"
  input: "gradients/filter_type_0/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_grad/Sum"
  input: "gradients/filter_type_0/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_5_grad/Shape"
  op: "Shape"
  input: "filter_type_0/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_5_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/bias_1_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_0/add_5_grad/Shape"
  input: "gradients/filter_type_0/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_0/Tanh_3_grad/TanhGrad"
  input: "gradients/filter_type_0/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_0/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/add_5_grad/Sum"
  input: "gradients/filter_type_0/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_grad/Shape"
  op: "Shape"
  input: "filter_type_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/bias_1_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_grad/Shape"
  input: "gradients/filter_type_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/Tanh_grad/TanhGrad"
  input: "gradients/filter_type_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_grad/Sum"
  input: "gradients/filter_type_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_5_grad/Shape"
  op: "Shape"
  input: "filter_type_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/bias_1_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/filter_type_1/add_5_grad/Shape"
  input: "gradients/filter_type_1/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/filter_type_1/Tanh_3_grad/TanhGrad"
  input: "gradients/filter_type_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/filter_type_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/add_5_grad/Sum"
  input: "gradients/filter_type_1/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_0/add_grad/Reshape"
  input: "filter_type_0/matrix_1_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_0/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_0/add_5_grad/Reshape"
  input: "filter_type_0/matrix_1_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_1/add_grad/Reshape"
  input: "filter_type_1/matrix_1_0/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/filter_type_1/add_5_grad/Reshape"
  input: "filter_type_1/matrix_1_1/read"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_1_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_grad/MatMul"
  input: "gradients/filter_type_0/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_8_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/MatMul_4_grad/MatMul"
  input: "gradients/filter_type_0/Reshape_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_1_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_grad/MatMul"
  input: "gradients/filter_type_1/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_8_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/MatMul_4_grad/MatMul"
  input: "gradients/filter_type_1/Reshape_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients/filter_type_0/Slice_1_grad/Rank"
  input: "gradients/filter_type_0/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "filter_type_0/Slice_1/begin"
  input: "gradients/filter_type_0/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients/filter_type_0/Slice_1_grad/Shape_1"
  input: "gradients/filter_type_0/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients/filter_type_0/Slice_1_grad/sub"
  input: "filter_type_0/Slice_1/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/Slice_1_grad/sub_1"
  input: "gradients/filter_type_0/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/filter_type_0/Slice_1_grad/Reshape"
  input: "gradients/filter_type_0/Slice_1_grad/Reshape_1"
  input: "gradients/filter_type_0/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients/filter_type_0/Reshape_1_grad/Reshape"
  input: "gradients/filter_type_0/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/stack"
  op: "Pack"
  input: "gradients/filter_type_0/Slice_3_grad/Rank"
  input: "gradients/filter_type_0/Slice_3_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/Reshape"
  op: "Reshape"
  input: "filter_type_0/Slice_3/begin"
  input: "gradients/filter_type_0/Slice_3_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/Shape_1"
  op: "Shape"
  input: "filter_type_0/Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/sub"
  op: "Sub"
  input: "gradients/filter_type_0/Slice_3_grad/Shape_1"
  input: "gradients/filter_type_0/Slice_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/sub_1"
  op: "Sub"
  input: "gradients/filter_type_0/Slice_3_grad/sub"
  input: "filter_type_0/Slice_3/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/Slice_3_grad/sub_1"
  input: "gradients/filter_type_0/Slice_3_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/concat"
  op: "ConcatV2"
  input: "gradients/filter_type_0/Slice_3_grad/Reshape"
  input: "gradients/filter_type_0/Slice_3_grad/Reshape_1"
  input: "gradients/filter_type_0/Slice_3_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_3_grad/Pad"
  op: "Pad"
  input: "gradients/filter_type_0/Reshape_8_grad/Reshape"
  input: "gradients/filter_type_0/Slice_3_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients/filter_type_1/Slice_1_grad/Rank"
  input: "gradients/filter_type_1/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "filter_type_1/Slice_1/begin"
  input: "gradients/filter_type_1/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients/filter_type_1/Slice_1_grad/Shape_1"
  input: "gradients/filter_type_1/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients/filter_type_1/Slice_1_grad/sub"
  input: "filter_type_1/Slice_1/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/Slice_1_grad/sub_1"
  input: "gradients/filter_type_1/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/filter_type_1/Slice_1_grad/Reshape"
  input: "gradients/filter_type_1/Slice_1_grad/Reshape_1"
  input: "gradients/filter_type_1/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients/filter_type_1/Reshape_1_grad/Reshape"
  input: "gradients/filter_type_1/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice_3"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/stack"
  op: "Pack"
  input: "gradients/filter_type_1/Slice_3_grad/Rank"
  input: "gradients/filter_type_1/Slice_3_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/Reshape"
  op: "Reshape"
  input: "filter_type_1/Slice_3/begin"
  input: "gradients/filter_type_1/Slice_3_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/Shape_1"
  op: "Shape"
  input: "filter_type_1/Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/sub"
  op: "Sub"
  input: "gradients/filter_type_1/Slice_3_grad/Shape_1"
  input: "gradients/filter_type_1/Slice_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/sub_1"
  op: "Sub"
  input: "gradients/filter_type_1/Slice_3_grad/sub"
  input: "filter_type_1/Slice_3/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/Slice_3_grad/sub_1"
  input: "gradients/filter_type_1/Slice_3_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/concat"
  op: "ConcatV2"
  input: "gradients/filter_type_1/Slice_3_grad/Reshape"
  input: "gradients/filter_type_1/Slice_3_grad/Reshape_1"
  input: "gradients/filter_type_1/Slice_3_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_3_grad/Pad"
  op: "Pad"
  input: "gradients/filter_type_1/Reshape_8_grad/Reshape"
  input: "gradients/filter_type_1/Slice_3_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/Slice_1_grad/Pad"
  input: "gradients/filter_type_0/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_7_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Reshape_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_0/Slice_3_grad/Pad"
  input: "gradients/filter_type_0/Reshape_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/Slice_1_grad/Pad"
  input: "gradients/filter_type_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_7_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Reshape_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/filter_type_1/Slice_3_grad/Pad"
  input: "gradients/filter_type_1/Reshape_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/filter_type_0/Reshape_6_grad/Reshape"
  input: "gradients/filter_type_0/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_0/Reshape_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/stack"
  op: "Pack"
  input: "gradients/filter_type_0/Slice_grad/Rank"
  input: "gradients/filter_type_0/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/Reshape"
  op: "Reshape"
  input: "filter_type_0/Slice/begin"
  input: "gradients/filter_type_0/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/Shape_1"
  op: "Shape"
  input: "Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/sub"
  op: "Sub"
  input: "gradients/filter_type_0/Slice_grad/Shape_1"
  input: "gradients/filter_type_0/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients/filter_type_0/Slice_grad/sub"
  input: "filter_type_0/Slice/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/Slice_grad/sub_1"
  input: "gradients/filter_type_0/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients/filter_type_0/Slice_grad/Reshape"
  input: "gradients/filter_type_0/Slice_grad/Reshape_1"
  input: "gradients/filter_type_0/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_grad/Pad"
  op: "Pad"
  input: "gradients/AddN_15"
  input: "gradients/filter_type_0/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/filter_type_0/Reshape_13_grad/Reshape"
  input: "gradients/filter_type_0/Reshape_7_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_0/Reshape_13_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/Shape"
  op: "Shape"
  input: "filter_type_0/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/stack"
  op: "Pack"
  input: "gradients/filter_type_0/Slice_2_grad/Rank"
  input: "gradients/filter_type_0/Slice_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/Reshape"
  op: "Reshape"
  input: "filter_type_0/Slice_2/begin"
  input: "gradients/filter_type_0/Slice_2_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/Shape_1"
  op: "Shape"
  input: "Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/sub"
  op: "Sub"
  input: "gradients/filter_type_0/Slice_2_grad/Shape_1"
  input: "gradients/filter_type_0/Slice_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/sub_1"
  op: "Sub"
  input: "gradients/filter_type_0/Slice_2_grad/sub"
  input: "filter_type_0/Slice_2/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_0/Slice_2_grad/sub_1"
  input: "gradients/filter_type_0/Slice_2_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/concat"
  op: "ConcatV2"
  input: "gradients/filter_type_0/Slice_2_grad/Reshape"
  input: "gradients/filter_type_0/Slice_2_grad/Reshape_1"
  input: "gradients/filter_type_0/Slice_2_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_0/Slice_2_grad/Pad"
  op: "Pad"
  input: "gradients/AddN_16"
  input: "gradients/filter_type_0/Slice_2_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/filter_type_1/Reshape_6_grad/Reshape"
  input: "gradients/filter_type_1/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_1/Reshape_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/stack"
  op: "Pack"
  input: "gradients/filter_type_1/Slice_grad/Rank"
  input: "gradients/filter_type_1/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/Reshape"
  op: "Reshape"
  input: "filter_type_1/Slice/begin"
  input: "gradients/filter_type_1/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/Shape_1"
  op: "Shape"
  input: "Reshape_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/sub"
  op: "Sub"
  input: "gradients/filter_type_1/Slice_grad/Shape_1"
  input: "gradients/filter_type_1/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients/filter_type_1/Slice_grad/sub"
  input: "filter_type_1/Slice/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/Slice_grad/sub_1"
  input: "gradients/filter_type_1/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients/filter_type_1/Slice_grad/Reshape"
  input: "gradients/filter_type_1/Slice_grad/Reshape_1"
  input: "gradients/filter_type_1/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_grad/Pad"
  op: "Pad"
  input: "gradients/AddN_17"
  input: "gradients/filter_type_1/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/filter_type_1/Reshape_13_grad/Reshape"
  input: "gradients/filter_type_1/Reshape_7_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_1/Reshape_13_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/Shape"
  op: "Shape"
  input: "filter_type_1/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/stack"
  op: "Pack"
  input: "gradients/filter_type_1/Slice_2_grad/Rank"
  input: "gradients/filter_type_1/Slice_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/Reshape"
  op: "Reshape"
  input: "filter_type_1/Slice_2/begin"
  input: "gradients/filter_type_1/Slice_2_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/Shape_1"
  op: "Shape"
  input: "Reshape_10"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/sub"
  op: "Sub"
  input: "gradients/filter_type_1/Slice_2_grad/Shape_1"
  input: "gradients/filter_type_1/Slice_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/sub_1"
  op: "Sub"
  input: "gradients/filter_type_1/Slice_2_grad/sub"
  input: "filter_type_1/Slice_2/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/filter_type_1/Slice_2_grad/sub_1"
  input: "gradients/filter_type_1/Slice_2_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/concat"
  op: "ConcatV2"
  input: "gradients/filter_type_1/Slice_2_grad/Reshape"
  input: "gradients/filter_type_1/Slice_2_grad/Reshape_1"
  input: "gradients/filter_type_1/Slice_2_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/filter_type_1/Slice_2_grad/Pad"
  op: "Pad"
  input: "gradients/AddN_18"
  input: "gradients/filter_type_1/Slice_2_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/filter_type_0/Slice_grad/Pad"
  input: "gradients/filter_type_0/Slice_2_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_0/Slice_grad/Pad"
      }
    }
  }
}
node {
  name: "gradients/Reshape_7_grad/Shape"
  op: "Shape"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_19"
  input: "gradients/Reshape_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/filter_type_1/Slice_grad/Pad"
  input: "gradients/filter_type_1/Slice_2_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/filter_type_1/Slice_grad/Pad"
      }
    }
  }
}
node {
  name: "gradients/Reshape_10_grad/Shape"
  op: "Shape"
  input: "Slice_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_20"
  input: "gradients/Reshape_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Slice_grad/Shape"
  op: "Shape"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Slice_grad/stack"
  op: "Pack"
  input: "gradients/Slice_grad/Rank"
  input: "gradients/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Slice_grad/Reshape"
  op: "Reshape"
  input: "Slice/begin"
  input: "gradients/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_grad/Shape_1"
  op: "Shape"
  input: "Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_grad/sub"
  op: "Sub"
  input: "gradients/Slice_grad/Shape_1"
  input: "gradients/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_grad/sub_1"
  op: "Sub"
  input: "gradients/Slice_grad/sub"
  input: "Slice/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Slice_grad/sub_1"
  input: "gradients/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Slice_grad/concat"
  op: "ConcatV2"
  input: "gradients/Slice_grad/Reshape"
  input: "gradients/Slice_grad/Reshape_1"
  input: "gradients/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_grad/Pad"
  op: "Pad"
  input: "gradients/Reshape_7_grad/Reshape"
  input: "gradients/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Slice_1_grad/Shape"
  op: "Shape"
  input: "Slice_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Slice_1_grad/stack"
  op: "Pack"
  input: "gradients/Slice_1_grad/Rank"
  input: "gradients/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "Slice_1/begin"
  input: "gradients/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_1_grad/Shape_1"
  op: "Shape"
  input: "Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_1_grad/sub"
  op: "Sub"
  input: "gradients/Slice_1_grad/Shape_1"
  input: "gradients/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_1_grad/sub_1"
  op: "Sub"
  input: "gradients/Slice_1_grad/sub"
  input: "Slice_1/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Slice_1_grad/sub_1"
  input: "gradients/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/Slice_1_grad/Reshape"
  input: "gradients/Slice_1_grad/Reshape_1"
  input: "gradients/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Slice_1_grad/Pad"
  op: "Pad"
  input: "gradients/Reshape_10_grad/Reshape"
  input: "gradients/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/Slice_grad/Pad"
  input: "gradients/Slice_1_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Slice_grad/Pad"
      }
    }
  }
}
node {
  name: "gradients/Reshape_6_grad/Shape"
  op: "Shape"
  input: "o_rmat"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_21"
  input: "gradients/Reshape_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_27/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_27/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_27/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_27"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_27/stack"
  input: "strided_slice_27/stack_1"
  input: "strided_slice_27/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_16/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 552
      }
    }
  }
}
node {
  name: "mul_16"
  op: "Mul"
  input: "strided_slice_27"
  input: "mul_16/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_19/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_19/shape"
  op: "Pack"
  input: "Reshape_19/shape/0"
  input: "mul_16"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_19"
  op: "Reshape"
  input: "gradients/Reshape_6_grad/Reshape"
  input: "Reshape_19/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ProdForceSeA"
  op: "ProdForceSeA"
  input: "Reshape_19"
  input: "o_rmat_deriv"
  input: "o_nlist"
  input: "t_natoms"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "n_a_sel"
    value {
      i: 138
    }
  }
  attr {
    key: "n_r_sel"
    value {
      i: 0
    }
  }
}
node {
  name: "ProdVirialSeA"
  op: "ProdVirialSeA"
  input: "Reshape_19"
  input: "o_rmat_deriv"
  input: "o_rij"
  input: "o_nlist"
  input: "t_natoms"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "n_a_sel"
    value {
      i: 138
    }
  }
  attr {
    key: "n_r_sel"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_28/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_28/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_28/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_28"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_28/stack"
  input: "strided_slice_28/stack_1"
  input: "strided_slice_28/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mul_17"
  op: "Mul"
  input: "mul_17/x"
  input: "strided_slice_28"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "o_force/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "o_force/shape"
  op: "Pack"
  input: "o_force/shape/0"
  input: "mul_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "o_force"
  op: "Reshape"
  input: "ProdForceSeA"
  input: "o_force/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "o_virial/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "o_virial"
  op: "Reshape"
  input: "ProdVirialSeA"
  input: "o_virial/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_29/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_29/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_29/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_29"
  op: "StridedSlice"
  input: "t_natoms"
  input: "strided_slice_29/stack"
  input: "strided_slice_29/stack_1"
  input: "strided_slice_29/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "mul_18"
  op: "Mul"
  input: "mul_18/x"
  input: "strided_slice_29"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "o_atom_virial/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "o_atom_virial/shape"
  op: "Pack"
  input: "o_atom_virial/shape/0"
  input: "mul_18"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "o_atom_virial"
  op: "Reshape"
  input: "ProdVirialSeA:1"
  input: "o_atom_virial/shape"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
library {
}
versions {
}
